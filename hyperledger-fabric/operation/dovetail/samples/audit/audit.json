{
    "imports": [
        "github.com/project-flogo/flow",
        "github.com/project-flogo/contrib/activity/log",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/activity/putall",
        "github.com/project-flogo/contrib/activity/actreturn",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/activity/get",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/activity/getbycompositekey",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/activity/delete",
        "github.com/project-flogo/flow/activity/subflow",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/activity/query",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/trigger/transaction",
        "github.com/project-flogo/contrib/function/array",
        "github.com/project-flogo/contrib/function/string"
    ],
    "name": "audit",
    "description": " ",
    "version": "2.0.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "feVersion": "2.10.0",
    "triggers": [
        {
            "ref": "#transaction",
            "name": "fabric-transaction",
            "description": "store audit log records on chain",
            "settings": {},
            "id": "FabricTransaction",
            "handlers": [
                {
                    "description": "store audit log records on chain",
                    "settings": {
                        "name": "createAudit",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:createAudit"
                        },
                        "input": {
                            "txID": "=$.txID",
                            "txTime": "=$.txTime",
                            "parameters": "=$.parameters"
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns,index)": {
                                        "key": "=$loop.key",
                                        "value": "=$loop.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://AuditLedgerMap"
                        },
                        "output": {
                            "parameters": "schema://AuditRecords"
                        }
                    },
                    "name": "createAudit"
                },
                {
                    "description": "retrieve an audit record by its state key",
                    "settings": {
                        "name": "getRecord",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:getRecord"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "key": "=$.parameters.key"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://AuditLedger"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"key\": \"\"\n}"
                            }
                        }
                    },
                    "name": "getRecord"
                },
                {
                    "description": "retrieve records by recID",
                    "settings": {
                        "name": "getRecordsByID",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:getRecordsByID"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "recID": "=$.parameters.recID"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns,index)": {
                                        "key": "=$loop.key",
                                        "value": "=$loop.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://AuditLedgerMap"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"recID\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"recID\": \"\"\n}"
                            }
                        }
                    },
                    "name": "getRecordsByID"
                },
                {
                    "description": "retrieve audit records by the txID of the record creation",
                    "settings": {
                        "name": "getRecordsByTxID",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:getRecordsByTxID"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "txID": "=$.parameters.txID"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns,index)": {
                                        "key": "=$loop.key",
                                        "value": "=$loop.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://AuditLedgerMap"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"txID\": \"\"\n}"
                            }
                        }
                    },
                    "name": "getRecordsByTxID"
                },
                {
                    "description": "retrieve audit records created at the specified time",
                    "settings": {
                        "name": "getRecordsByTxTime",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:getRecordsByTxTime"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "txTime": "=$.parameters.txTime"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns,index)": {
                                        "key": "=$loop.key",
                                        "value": "=$loop.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://AuditLedgerMap"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"txTime\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"txTime\": \"\"\n}"
                            }
                        }
                    },
                    "name": "getRecordsByTxTime"
                },
                {
                    "description": "delete current state of an audit record of specified state key",
                    "settings": {
                        "name": "deleteRecord",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:deleteRecord"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "key": "=$.parameters.key"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://AuditLedger"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"key\": \"\"\n}"
                            }
                        }
                    },
                    "name": "deleteRecord"
                },
                {
                    "description": "delete all audit states created by a specified transaction id",
                    "settings": {
                        "name": "deleteTransaction",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:deleteTransaction"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "txID": "=$.parameters.txID"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns,index)": {
                                        "key": "=$loop.key",
                                        "value": "=$loop.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://AuditLedgerMap"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"txID\": \"\"\n}"
                            }
                        }
                    },
                    "name": "deleteTransaction"
                },
                {
                    "description": "retrieve audit records of specified domain and owner in a time range",
                    "settings": {
                        "name": "queryTimeRange",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:queryTimeRange"
                        },
                        "input": {
                            "parameters": "=$.parameters"
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns,index)": {
                                        "key": "=$loop.key",
                                        "value": "=$loop.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://AuditLedgerMap"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"startTime\":{\"type\":\"string\"},\"endTime\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"domain\": \"\",\n    \"owner\": \"\",\n    \"startTime\": \"\",\n    \"endTime\": \"\"\n}"
                            }
                        }
                    },
                    "name": "queryTimeRange"
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:createAudit",
            "data": {
                "name": "createAudit",
                "description": "store audit log records on chain",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "PutAll",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "PutAll",
                        "to": "LogPutAll",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogPutAll",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[createAudit] \", $flow.parameters.records[0].recID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "PutAll",
                        "name": "PutAll",
                        "description": "This activity stores multiple records in fabric ledger",
                        "activity": {
                            "ref": "#putall",
                            "input": {
                                "privateCollection": "",
                                "compositeKeys": "=$property[\"CompositeKeys.AuditIndex\"]",
                                "data": {
                                    "mapping": {
                                        "@foreach($flow.parameters.records,index)": {
                                            "key": "=string.concat($flow.txID, \":\", $loop.recID)",
                                            "value": {
                                                "txID": "=$flow.txID",
                                                "txTime": "=$flow.txTime",
                                                "recID": "=$loop.recID",
                                                "domain": "=$loop.domain",
                                                "owner": "=$loop.owner",
                                                "data": "=$loop.data",
                                                "hashType": "=$loop.hashType",
                                                "hashValue": "=$loop.hashValue"
                                            }
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://AuditLedgerMap"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"key\": {\n                \"type\": \"string\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"txID\": {\n                        \"type\": \"string\"\n                    },\n                    \"txTime\": {\n                        \"type\": \"string\"\n                    },\n                    \"recID\": {\n                        \"type\": \"string\"\n                    },\n                    \"domain\": {\n                        \"type\": \"string\"\n                    },\n                    \"owner\": {\n                        \"type\": \"string\"\n                    },\n                    \"data\": {\n                        \"type\": \"string\"\n                    },\n                    \"hashType\": {\n                        \"type\": \"string\"\n                    },\n                    \"hashValue\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"key\": {\n                \"type\": \"string\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"txID\": {\n                        \"type\": \"string\"\n                    },\n                    \"txTime\": {\n                        \"type\": \"string\"\n                    },\n                    \"recID\": {\n                        \"type\": \"string\"\n                    },\n                    \"domain\": {\n                        \"type\": \"string\"\n                    },\n                    \"owner\": {\n                        \"type\": \"string\"\n                    },\n                    \"data\": {\n                        \"type\": \"string\"\n                    },\n                    \"hashType\": {\n                        \"type\": \"string\"\n                    },\n                    \"hashValue\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogPutAll",
                        "name": "LogPutAll",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"PUT: \", $activity[PutAll].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[PutAll].code",
                                    "message": "=$activity[PutAll].message",
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[PutAll].result,index)": {
                                                "key": "=$loop.key",
                                                "value": "=$loop.value"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"recID\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"data\":{\"type\":\"string\"},\"hashType\":{\"type\":\"string\"},\"hashValue\":{\"type\":\"string\"}}}}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"recID\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"data\":{\"type\":\"string\"},\"hashType\":{\"type\":\"string\"},\"hashValue\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"records\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"recID\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"data\":{\"type\":\"string\"},\"hashType\":{\"type\":\"string\"},\"hashValue\":{\"type\":\"string\"}}}}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"recID\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"data\":{\"type\":\"string\"},\"hashType\":{\"type\":\"string\"},\"hashValue\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:getRecord",
            "data": {
                "name": "getRecord",
                "description": "retrieve an audit record by its state key",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "Get",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Get",
                        "to": "LogGet",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogGet",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[getRecord] \", $flow.parameters.key)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Get",
                        "name": "Get",
                        "description": "This activity fetches data by key from fabric ledger",
                        "activity": {
                            "ref": "#get",
                            "input": {
                                "key": "=$flow.parameters.key",
                                "privateCollection": ""
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://AuditLedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogGet",
                        "name": "LogGet",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GET: \", $activity[Get].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Get].code",
                                    "message": "=$activity[Get].message",
                                    "returns": "=$activity[Get].result"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"key\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"recID\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"data\":{\"type\":\"string\"},\"hashType\":{\"type\":\"string\"},\"hashValue\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction1\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"recID\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"data\":{\"type\":\"string\"},\"hashType\":{\"type\":\"string\"},\"hashValue\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:getRecordsByID",
            "data": {
                "name": "getRecordsByID",
                "description": "retrieve records by recID",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "GetByCompositeKey",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "GetByCompositeKey",
                        "to": "LogResult",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogResult",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[getRecordsByID] \", $flow.parameters.recID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "GetByCompositeKey",
                        "name": "GetByCompositeKey",
                        "description": "This activity fetches data by composite-key from fabric ledger",
                        "activity": {
                            "ref": "#getbycompositekey",
                            "input": {
                                "keyName": "recID=recID",
                                "usePagination": false,
                                "pageSize": 0,
                                "start": "",
                                "privateCollection": "",
                                "attributes": {
                                    "mapping": {
                                        "recID": "=$flow.parameters.recID"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "attributes": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"recID\":{\"type\":\"string\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"recID\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true}]"
                                    }
                                },
                                "output": {
                                    "result": "schema://AuditLedgerMap"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogResult",
                        "name": "LogResult",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"Get by recID: \", $activity[GetByCompositeKey].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[GetByCompositeKey].code",
                                    "message": "=$activity[GetByCompositeKey].message",
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[GetByCompositeKey].result,index)": {
                                                "key": "=$loop.key",
                                                "value": "=$loop.value"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"recID\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"recID\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"data\":{\"type\":\"string\"},\"hashType\":{\"type\":\"string\"},\"hashValue\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction2\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"recID\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"recID\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"data\":{\"type\":\"string\"},\"hashType\":{\"type\":\"string\"},\"hashValue\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:getRecordsByTxID",
            "data": {
                "name": "getRecordsByTxID",
                "description": "retrieve audit records by the txID of the record creation",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "GetByCompositeKey",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "GetByCompositeKey",
                        "to": "LogResult",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogResult",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[getRecordsByTxID] \", $flow.parameters.txID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "GetByCompositeKey",
                        "name": "GetByCompositeKey",
                        "description": "This activity fetches data by composite-key from fabric ledger",
                        "activity": {
                            "ref": "#getbycompositekey",
                            "input": {
                                "keyName": "txID=txID",
                                "usePagination": false,
                                "pageSize": 0,
                                "start": "",
                                "privateCollection": "",
                                "attributes": {
                                    "mapping": {
                                        "txID": "=$flow.parameters.txID"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "attributes": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"txID\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true}]"
                                    }
                                },
                                "output": {
                                    "result": "schema://AuditLedgerMap"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogResult",
                        "name": "LogResult",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"Get by txID: \", $activity[GetByCompositeKey].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[GetByCompositeKey].code",
                                    "message": "=$activity[GetByCompositeKey].message",
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[GetByCompositeKey].result,index)": {
                                                "key": "=$loop.key",
                                                "value": "=$loop.value"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"txID\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"recID\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"data\":{\"type\":\"string\"},\"hashType\":{\"type\":\"string\"},\"hashValue\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction3\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"recID\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"data\":{\"type\":\"string\"},\"hashType\":{\"type\":\"string\"},\"hashValue\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:getRecordsByTxTime",
            "data": {
                "name": "getRecordsByTxTime",
                "description": "retrieve audit records created at the specified time",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "GetByCompositeKey",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "GetByCompositeKey",
                        "to": "LogResult",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogResult",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[getRecordsByTxTime] \", $flow.parameters.txTime)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "GetByCompositeKey",
                        "name": "GetByCompositeKey",
                        "description": "This activity fetches data by composite-key from fabric ledger",
                        "activity": {
                            "ref": "#getbycompositekey",
                            "input": {
                                "keyName": "txTime=txTime",
                                "usePagination": false,
                                "pageSize": 0,
                                "start": "",
                                "privateCollection": "",
                                "attributes": {
                                    "mapping": {
                                        "txTime": "=$flow.parameters.txTime"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "attributes": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"txTime\":{\"type\":\"string\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"txTime\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true}]"
                                    }
                                },
                                "output": {
                                    "result": "schema://AuditLedgerMap"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogResult",
                        "name": "LogResult",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"Get by txTime: \", $activity[GetByCompositeKey].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[GetByCompositeKey].code",
                                    "message": "=$activity[GetByCompositeKey].message",
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[GetByCompositeKey].result,index)": {
                                                "key": "=$loop.key",
                                                "value": "=$loop.value"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"txTime\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"recID\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"data\":{\"type\":\"string\"},\"hashType\":{\"type\":\"string\"},\"hashValue\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction4\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"txTime\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"recID\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"data\":{\"type\":\"string\"},\"hashType\":{\"type\":\"string\"},\"hashValue\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:deleteRecord",
            "data": {
                "name": "deleteRecord",
                "description": "delete current state of an audit record of specified state key",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "Delete",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Delete",
                        "to": "LogResult",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogResult",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[deleteRecord] \", $flow.parameters.key)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Delete",
                        "name": "Delete",
                        "description": "This activity deletes data from fabric world state",
                        "activity": {
                            "ref": "#delete",
                            "input": {
                                "key": "=$flow.parameters.key",
                                "privateCollection": "",
                                "keysOnly": false,
                                "compositeKeys": "=$property[\"CompositeKeys.AuditIndex\"]"
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://AuditLedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogResult",
                        "name": "LogResult",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"DELETE: \", $activity[Delete].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Delete].code",
                                    "message": "=$activity[Delete].message",
                                    "returns": "=$activity[Delete].result"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"key\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"recID\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"data\":{\"type\":\"string\"},\"hashType\":{\"type\":\"string\"},\"hashValue\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction6\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"recID\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"data\":{\"type\":\"string\"},\"hashType\":{\"type\":\"string\"},\"hashValue\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:deleteTransaction",
            "data": {
                "name": "deleteTransaction",
                "description": "delete all audit states created by a specified transaction id",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "GetByCompositeKey",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "GetByCompositeKey",
                        "to": "LogTx",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogTx",
                        "to": "StartaSubFlow",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "StartaSubFlow",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[deleteTransaction] \", $flow.parameters.txID)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "GetByCompositeKey",
                        "name": "GetByCompositeKey",
                        "description": "This activity fetches data by composite-key from fabric ledger",
                        "activity": {
                            "ref": "#getbycompositekey",
                            "input": {
                                "keyName": "txID=txID",
                                "usePagination": false,
                                "pageSize": 0,
                                "start": "",
                                "privateCollection": "",
                                "attributes": {
                                    "mapping": {
                                        "txID": "=$flow.parameters.txID"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "attributes": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"txID\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true}]"
                                    }
                                },
                                "output": {
                                    "result": "schema://AuditLedgerMap"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogTx",
                        "name": "LogTx",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"Get by txID: \", $activity[GetByCompositeKey].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "StartaSubFlow",
                        "name": "StartaSubFlow",
                        "description": "",
                        "type": "iterator",
                        "settings": {
                            "iterate": "=$activity[GetByCompositeKey].result",
                            "accumulate": false
                        },
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:logDelete"
                            },
                            "input": {
                                "key": "=$iteration[value].key"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"key\": \"\"\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"status\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"status\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[GetByCompositeKey].result,index)": {
                                                "key": "=$loop.key",
                                                "value": "=$loop.value"
                                            }
                                        }
                                    },
                                    "status": "=$activity[StartaSubFlow].status",
                                    "message": "=$activity[StartaSubFlow].message"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"txID\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"recID\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"data\":{\"type\":\"string\"},\"hashType\":{\"type\":\"string\"},\"hashValue\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction7\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"recID\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"data\":{\"type\":\"string\"},\"hashType\":{\"type\":\"string\"},\"hashValue\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:logDelete",
            "data": {
                "name": "logDelete",
                "description": "delete an audit record of a specified state key, and log the result",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "Delete",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Delete",
                        "to": "LogRecord",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogRecord",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[logDelete] \", $flow.key)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Delete",
                        "name": "Delete",
                        "description": "This activity deletes data from fabric world state",
                        "activity": {
                            "ref": "#delete",
                            "input": {
                                "key": "=$flow.key",
                                "privateCollection": "",
                                "keysOnly": false,
                                "compositeKeys": "=$property[\"CompositeKeys.AuditIndex\"]"
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://AuditLedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogRecord",
                        "name": "LogRecord",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"DELETE: \", $activity[Delete].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Delete].code",
                                    "message": "=$activity[Delete].message"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "key",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\n    \"key\": \"\"\n}",
                        "output": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"status\":{\"type\":\"number\"},\"message\":{\"type\":\"string\"}}}"
                    }
                }
            }
        },
        {
            "id": "flow:queryTimeRange",
            "data": {
                "name": "queryTimeRange",
                "description": "retrieve audit records of specified domain and owner in a time range",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "Query",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Query",
                        "to": "LogResult",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogResult",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[queryTimeRange] \", $flow.parameters.startTime, \", \", $flow.parameters.endTime)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Query",
                        "name": "Query",
                        "description": "This activity fetches data by rich query on fabric Couch DB",
                        "activity": {
                            "ref": "#query",
                            "input": {
                                "query": "{\n    \"selector\": {\n        \"domain\": \"$domain\",\n        \"owner\": \"$owner\",\n        \"$and\": [\n            {\"txTime\": {\"$gte\": \"$startTime\"}},\n            {\"txTime\": {\"$lt\": \"$endTime\"}}\n        ]\n    }\n}",
                                "usePagination": false,
                                "pageSize": 0,
                                "start": "",
                                "privateCollection": "",
                                "queryParams": "=$flow.parameters"
                            },
                            "schemas": {
                                "input": {
                                    "queryParams": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"startTime\":{\"type\":\"string\"},\"endTime\":{\"type\":\"string\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"domain\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true},{\"parameterName\":\"owner\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true},{\"parameterName\":\"startTime\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true},{\"parameterName\":\"endTime\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true}]"
                                    }
                                },
                                "output": {
                                    "result": "schema://AuditLedgerMap"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogResult",
                        "name": "LogResult",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"Query: \", $activity[Query].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Query].code",
                                    "message": "=$activity[Query].message",
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[Query].result,index)": {
                                                "key": "=$loop.key",
                                                "value": "=$loop.value"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"startTime\":{\"type\":\"string\"},\"endTime\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"recID\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"data\":{\"type\":\"string\"},\"hashType\":{\"type\":\"string\"},\"hashValue\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction8\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"startTime\":{\"type\":\"string\"},\"endTime\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"recID\":{\"type\":\"string\"},\"domain\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"data\":{\"type\":\"string\"},\"hashType\":{\"type\":\"string\"},\"hashValue\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        }
    ],
    "properties": [
        {
            "name": "CompositeKeys.AuditIndex",
            "type": "string",
            "value": "txID=txID;txTime=txTime;recID=recID"
        }
    ],
    "schemas": {
        "AuditLedgerMap": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"key\": {\n                \"type\": \"string\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"txID\": {\n                        \"type\": \"string\"\n                    },\n                    \"txTime\": {\n                        \"type\": \"string\"\n                    },\n                    \"recID\": {\n                        \"type\": \"string\"\n                    },\n                    \"domain\": {\n                        \"type\": \"string\"\n                    },\n                    \"owner\": {\n                        \"type\": \"string\"\n                    },\n                    \"data\": {\n                        \"type\": \"string\"\n                    },\n                    \"hashType\": {\n                        \"type\": \"string\"\n                    },\n                    \"hashValue\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"key\": {\n                \"type\": \"string\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"txID\": {\n                        \"type\": \"string\"\n                    },\n                    \"txTime\": {\n                        \"type\": \"string\"\n                    },\n                    \"recID\": {\n                        \"type\": \"string\"\n                    },\n                    \"domain\": {\n                        \"type\": \"string\"\n                    },\n                    \"owner\": {\n                        \"type\": \"string\"\n                    },\n                    \"data\": {\n                        \"type\": \"string\"\n                    },\n                    \"hashType\": {\n                        \"type\": \"string\"\n                    },\n                    \"hashValue\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}"
        },
        "AuditRecords": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"records\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"recID\": {\n                        \"type\": \"string\"\n                    },\n                    \"domain\": {\n                        \"type\": \"string\"\n                    },\n                    \"owner\": {\n                        \"type\": \"string\"\n                    },\n                    \"data\": {\n                        \"type\": \"string\"\n                    },\n                    \"hashType\": {\n                        \"type\": \"string\"\n                    },\n                    \"hashValue\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"records\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"recID\": {\n                        \"type\": \"string\"\n                    },\n                    \"domain\": {\n                        \"type\": \"string\"\n                    },\n                    \"owner\": {\n                        \"type\": \"string\"\n                    },\n                    \"data\": {\n                        \"type\": \"string\"\n                    },\n                    \"hashType\": {\n                        \"type\": \"string\"\n                    },\n                    \"hashValue\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}"
        },
        "AuditLedger": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"txID\": {\n            \"type\": \"string\"\n        },\n        \"txTime\": {\n            \"type\": \"string\"\n        },\n        \"recID\": {\n            \"type\": \"string\"\n        },\n        \"domain\": {\n            \"type\": \"string\"\n        },\n        \"owner\": {\n            \"type\": \"string\"\n        },\n        \"data\": {\n            \"type\": \"string\"\n        },\n        \"hashType\": {\n            \"type\": \"string\"\n        },\n        \"hashValue\": {\n            \"type\": \"string\"\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"txID\": {\n            \"type\": \"string\"\n        },\n        \"txTime\": {\n            \"type\": \"string\"\n        },\n        \"recID\": {\n            \"type\": \"string\"\n        },\n        \"domain\": {\n            \"type\": \"string\"\n        },\n        \"owner\": {\n            \"type\": \"string\"\n        },\n        \"data\": {\n            \"type\": \"string\"\n        },\n        \"hashType\": {\n            \"type\": \"string\"\n        },\n        \"hashValue\": {\n            \"type\": \"string\"\n        }\n    }\n}"
        }
    },
    "connections": {},
    "contrib": "W3sicmVmIjoiZ2l0aHViLmNvbS9USUJDT1NvZnR3YXJlL2RvdmV0YWlsLWNvbnRyaWIvaHlwZXJsZWRnZXItZmFicmljL2ZhYnJpYyIsInMzbG9jYXRpb24iOiJ7VVNFUklEfS9mYWJyaWMifSx7InJlZiI6ImdpdGh1Yi5jb20vcHJvamVjdC1mbG9nby9jb250cmliL2FjdGl2aXR5L2xvZyIsInMzbG9jYXRpb24iOiJ7VVNFUklEfS9EZWZhdWx0L2FjdGl2aXR5L2xvZyJ9XQ==",
    "fe_metadata": "UEsDBAoAAAAIAHWcVVGrqSRGFQAAABMAAAAIAAAAYXBwLmpzb26rViopykxPTy1yy8kvL1ayio6tBQBQSwECFAAKAAAACAB1nFVRq6kkRhUAAAATAAAACAAAAAAAAAAAAAAAAAAAAAAAYXBwLmpzb25QSwUGAAAAAAEAAQA2AAAAOwAAAAAA"
}
