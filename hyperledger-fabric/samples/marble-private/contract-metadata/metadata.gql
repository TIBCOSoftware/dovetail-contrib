schema {
	query: Query
	mutation: Mutation
}
type Query {
	getMarblesByRange(startKey: String, endKey: String): [MarbleKeyValue]
	queryMarblesByOwner(owner: String): [MarbleKeyValue]
	readMarble(name: String): Marble
	readMarblePrivateDetails(name: String): MarblePrivate
}
type Mutation {
	transferMarble(marble_owner: MarbleTransfer): Marble
	delete(marble_delete: MarbleDelete): Marble
	initMarble(marble: MarbleCreate): Marble
}
input MarbleTransfer {
	name: String
	owner: String
}

type MarblePrivate {
	docType: String
	name: String
	price: Float
}

input MarbleDelete {
	name: String
}

input MarbleCreate {
	name: String
	color: String
	size: Float
	owner: String
	price: Float
}

type Marble {
	name: String
	color: String
	size: Float
	owner: String
	docType: String
}

type MarbleKeyValue {
	key: String
	value: Marble
}

