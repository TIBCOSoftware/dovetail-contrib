{
    "imports": [
        "github.com/project-flogo/flow",
        "github.com/project-flogo/contrib/activity/log",
        "github.com/project-flogo/flow/activity/subflow",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/activity/cid",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/activity/get",
        "github.com/project-flogo/contrib/activity/error",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/activity/put",
        "github.com/project-flogo/contrib/activity/actreturn",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/activity/delete",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/activity/getbycompositekey",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/activity/gethistory",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/activity/query",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/trigger/transaction",
        "github.com/project-flogo/contrib/function/array",
        "github.com/project-flogo/contrib/function/coerce",
        "github.com/project-flogo/contrib/function/string",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/function/float"
    ],
    "name": "iou",
    "description": " ",
    "version": "2.0.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "feVersion": "2.10.0",
    "triggers": [
        {
            "ref": "#transaction",
            "name": "fabric-transaction",
            "description": "initialize a user account",
            "settings": {},
            "id": "FabricTransaction",
            "handlers": [
                {
                    "description": "initialize a user account",
                    "settings": {
                        "name": "createAccount",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:createAccount"
                        },
                        "input": {
                            "parameters": "=$.parameters"
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://AccountLedger"
                        },
                        "output": {
                            "parameters": "schema://AccountRequest"
                        }
                    },
                    "name": "createAccount"
                },
                {
                    "description": "issue a new IOU to a customer",
                    "settings": {
                        "name": "issue",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:issue"
                        },
                        "input": {
                            "parameters": "=$.parameters",
                            "txID": "=$.txID",
                            "txTime": "=$.txTime"
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://IOULedger"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bank\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"}}}",
                                "fe_metadata": "{\n    \"bank\": \"\",\n    \"owner\": \"\",\n    \"amount\": 0\n}"
                            }
                        }
                    },
                    "name": "issue"
                },
                {
                    "description": "buy an existing IOU issued by another bank",
                    "settings": {
                        "name": "buy",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:buy"
                        },
                        "input": {
                            "parameters": "=$.parameters",
                            "txTime": "=$.txTime",
                            "txID": "=$.txID"
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://IOULedger"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bank\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"iou\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"bank\": \"\",\n    \"owner\": \"\",\n    \"iou\": \"\"\n}"
                            }
                        }
                    },
                    "name": "buy"
                },
                {
                    "description": "transfer an IOU to a new owner",
                    "settings": {
                        "name": "transfer",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:transfer"
                        },
                        "input": {
                            "parameters": "=$.parameters"
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://IOULedger"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"newOwner\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"id\": \"\",\n    \"newOwner\": \"\"\n}"
                            }
                        }
                    },
                    "name": "transfer"
                },
                {
                    "description": "exchange IOU to an equivalent IOU of specified bank's currency",
                    "settings": {
                        "name": "exchange",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:exchange"
                        },
                        "input": {
                            "parameters": "=$.parameters",
                            "txID": "=$.txID",
                            "txTime": "=$.txTime"
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://IOULedger"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"bank\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"id\": \"\",\n    \"bank\": \"\"\n}"
                            }
                        }
                    },
                    "name": "exchange"
                },
                {
                    "description": "redeem an IOU at the issuer bank",
                    "settings": {
                        "name": "redeem",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:redeem"
                        },
                        "input": {
                            "parameters": "=$.parameters",
                            "txTime": "=$.txTime",
                            "txID": "=$.txID"
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://AccountLedger"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"bank\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"id\": \"\",\n    \"bank\": \"\"\n}"
                            }
                        }
                    },
                    "name": "redeem"
                },
                {
                    "description": "retrieves all accounts of a specified bank",
                    "settings": {
                        "name": "getBankAccounts",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:getBankAccounts"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "bank": "=$.parameters.bank"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns,index)": {
                                        "key": "=$loop.key",
                                        "value": "=$loop.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://AccountLedgerMap"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bank\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"bank\": \"\"\n}"
                            }
                        }
                    },
                    "name": "getBankAccounts"
                },
                {
                    "description": "retrieves all transactions of an account name in a specified bank",
                    "settings": {
                        "name": "getAccountTransactions",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:getAccountTransactions"
                        },
                        "input": {
                            "parameters": "=$.parameters"
                        },
                        "output": {
                            "status": "=$.status",
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns,index)": {
                                        "key": "=$loop.key",
                                        "value": "=$loop.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://TxLedgerMap"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"bank\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"name\": \"\",\n    \"bank\": \"\"\n}"
                            }
                        }
                    },
                    "name": "getAccountTransactions"
                },
                {
                    "description": "retrieves history of an IOU",
                    "settings": {
                        "name": "getIOUHistory",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:getIOUHistory"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "id": "=$.parameters.id"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns,index)": {
                                        "txTime": "=$loop.txTime",
                                        "isDeleted": "=$loop.isDeleted",
                                        "value": "=$loop.value",
                                        "txID": "=$loop.txID"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://IOUHistory"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"id\": \"\"\n}"
                            }
                        }
                    },
                    "name": "getIOUHistory"
                },
                {
                    "description": "find an IOU matching issuer, owner, and amount",
                    "settings": {
                        "name": "queryIOUByAmount",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:queryIOUByAmount"
                        },
                        "input": {
                            "parameters": "=$.parameters"
                        },
                        "output": {
                            "status": "=$.status",
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns,index)": {
                                        "key": "=$loop.key",
                                        "value": "=$loop.value"
                                    }
                                }
                            },
                            "message": "=$.message"
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://IOULedgerMap"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"issuer\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"}}}",
                                "fe_metadata": "{\n    \"issuer\": \"\",\n    \"owner\": \"\",\n    \"amount\": 0\n}"
                            }
                        }
                    },
                    "name": "queryIOUByAmount"
                },
                {
                    "description": "create or find IOU equivalent to specified amount in the currency of a receiver bank, returns the IOU owned by the sender.",
                    "settings": {
                        "name": "send",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:send"
                        },
                        "input": {
                            "parameters": "=$.parameters",
                            "txTime": "=$.txTime",
                            "txID": "=$.txID"
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://IOULedger"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"sender\":{\"type\":\"string\"},\"senderBank\":{\"type\":\"string\"},\"receiverBank\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"}}}",
                                "fe_metadata": "{\n    \"sender\": \"\",\n    \"senderBank\": \"\",\n    \"receiverBank\": \"\",\n    \"amount\": 0\n}"
                            }
                        }
                    },
                    "name": "send"
                },
                {
                    "description": "",
                    "settings": {
                        "name": "getIOUByIssuer",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:getIOUByIssuer"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "issuer": "=$.parameters.issuer"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns,index)": {
                                        "key": "=$loop.key",
                                        "value": "=$loop.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://IOULedgerMap"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"issuer\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"issuer\": \"\"\n}"
                            }
                        }
                    },
                    "name": "getIOUByIssuer"
                },
                {
                    "description": "",
                    "settings": {
                        "name": "getIOUByOwner",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:getIOUByOwner"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "owner": "=$.parameters.owner"
                                }
                            }
                        },
                        "output": {
                            "status": "=$.status",
                            "message": "=$.message",
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns,index)": {
                                        "key": "=$loop.key",
                                        "value": "=$loop.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "message": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": "schema://IOULedgerMap"
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"owner\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"owner\": \"\"\n}"
                            }
                        }
                    },
                    "name": "getIOUByOwner"
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:createAccount",
            "data": {
                "name": "createAccount",
                "description": "initialize a user account",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "BankConfig",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "BankConfig",
                        "to": "LogBankConfig",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogBankConfig",
                        "to": "Cid",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "Cid",
                        "to": "LogCID",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "LogCID",
                        "to": "Get",
                        "type": "expression",
                        "label": "IsAdmin",
                        "value": "$activity[Cid].attrs.bank == $flow.parameters.bank && $activity[Cid].attrs.admin == \"true\""
                    },
                    {
                        "id": 6,
                        "from": "Get",
                        "to": "LogGet",
                        "type": "default"
                    },
                    {
                        "id": 7,
                        "from": "LogGet",
                        "to": "DuplicateError",
                        "type": "expression",
                        "label": "AcctExists",
                        "value": "$activity[Get].code == 200"
                    },
                    {
                        "id": 8,
                        "from": "LogGet",
                        "to": "Put",
                        "type": "exprOtherwise",
                        "label": "IsNew"
                    },
                    {
                        "id": 9,
                        "from": "Put",
                        "to": "LogPut",
                        "type": "default"
                    },
                    {
                        "id": 10,
                        "from": "LogPut",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 11,
                        "from": "LogCID",
                        "to": "NotAuthorizedError",
                        "type": "exprOtherwise",
                        "label": "NotAdmin"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[createAccount] \", $flow.parameters.name, \" bank: \", $flow.parameters.bank, \" balance: \", coerce.toString($flow.parameters.balance))",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "BankConfig",
                        "name": "BankConfig",
                        "description": "",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:bankConfig"
                            },
                            "input": {
                                "bank": "=$flow.parameters.bank"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bank\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"bank\": \"\"\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"currency\":{\"type\":\"string\"},\"acctCollection\":{\"type\":\"string\"},\"txnCollection\":{\"type\":\"string\"},\"exchangeRate\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"currency\":{\"type\":\"string\"},\"acctCollection\":{\"type\":\"string\"},\"txnCollection\":{\"type\":\"string\"},\"exchangeRate\":{\"type\":\"number\"}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogBankConfig",
                        "name": "LogBankConfig",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"acct: \", $activity[BankConfig].acctCollection, \" txn: \", $activity[BankConfig].acctCollection, \" currency: \", $activity[BankConfig].currency, \" rate: \", coerce.toString(float.float64($activity[BankConfig].exchangeRate, 3)))",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": "schema://ClientID"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogCID",
                        "name": "LogCID",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"CID: \", $activity[Cid].name, \" bank=\", $activity[Cid].attrs.bank, \" admin=\", $activity[Cid].attrs.admin, \" alias=\", $activity[Cid].attrs.alias)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Get",
                        "name": "Get",
                        "description": "This activity fetches data by key from fabric ledger",
                        "activity": {
                            "ref": "#get",
                            "input": {
                                "key": "=$flow.parameters.name",
                                "privateCollection": "=$activity[BankConfig].acctCollection"
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://AccountLedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogGet",
                        "name": "LogGet",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GET: \", $activity[Get].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "DuplicateError",
                        "name": "DuplicateError",
                        "description": "",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"Account \", $activity[Get].key, \" already exists\")"
                            }
                        }
                    },
                    {
                        "id": "Put",
                        "name": "Put",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=$flow.parameters.name",
                                "privateCollection": "=$activity[BankConfig].acctCollection",
                                "compositeKeys": "=$property[\"CompositeKeys.BankName\"]",
                                "data": {
                                    "mapping": {
                                        "name": "=$flow.parameters.name",
                                        "bank": "=$flow.parameters.bank",
                                        "balance": "=$flow.parameters.balance",
                                        "currency": "=$activity[BankConfig].currency"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://AccountLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"bank\": {\n            \"type\": \"string\"\n        },\n        \"balance\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"bank\": {\n            \"type\": \"string\"\n        },\n        \"balance\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogPut",
                        "name": "LogPut",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"PUT: \", $activity[Put].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Put].code",
                                    "message": "=$activity[Put].message",
                                    "returns": "=$activity[Put].result"
                                }
                            }
                        }
                    },
                    {
                        "id": "NotAuthorizedError",
                        "name": "NotAuthorizedError",
                        "description": "",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].name, \" not authorized to create account for bank \", $flow.parameters.bank)"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"name\":{\"type\":\"string\"},\"bank\":{\"type\":\"string\"},\"balance\":{\"type\":\"number\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"name\":{\"type\":\"string\"},\"bank\":{\"type\":\"string\"},\"balance\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"bank\":{\"type\":\"string\"},\"balance\":{\"type\":\"number\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"bank\":{\"type\":\"string\"},\"balance\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:bankConfig",
            "data": {
                "name": "bankConfig",
                "description": "returns bank configuration data",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "ReturnUSD",
                        "type": "expression",
                        "label": "USDBank",
                        "value": "$flow.bank == \"USDBank\""
                    },
                    {
                        "id": 2,
                        "from": "Log",
                        "to": "ReturnEUR",
                        "type": "expression",
                        "label": "EURBank",
                        "value": "$flow.bank == \"EURBank\""
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[bankConfig] \", $flow.bank)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "ReturnUSD",
                        "name": "ReturnUSD",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "exchangeRate": "=$property[\"currencies.ExchangeRate\"]",
                                    "acctCollection": "=$property[\"collections.USDBankAccounts\"]",
                                    "txnCollection": "=$property[\"collections.USDBankTransactions\"]",
                                    "currency": "=$property[\"currencies.USDBankCurrency\"]"
                                }
                            }
                        }
                    },
                    {
                        "id": "ReturnEUR",
                        "name": "ReturnEUR",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "exchangeRate": "=1 / $property[\"currencies.ExchangeRate\"]",
                                    "acctCollection": "=$property[\"collections.EURBankAccounts\"]",
                                    "txnCollection": "=$property[\"collections.EURBankTransactions\"]",
                                    "currency": "=$property[\"currencies.EURBankCurrency\"]"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "bank",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "currency",
                            "type": "string"
                        },
                        {
                            "name": "acctCollection",
                            "type": "string"
                        },
                        {
                            "name": "txnCollection",
                            "type": "string"
                        },
                        {
                            "name": "exchangeRate",
                            "type": "float64"
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\n    \"bank\": \"\"\n}",
                        "output": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"currency\":{\"type\":\"string\"},\"acctCollection\":{\"type\":\"string\"},\"txnCollection\":{\"type\":\"string\"},\"exchangeRate\":{\"type\":\"number\"}}}"
                    }
                }
            }
        },
        {
            "id": "flow:issue",
            "data": {
                "name": "issue",
                "description": "issue a new IOU to a customer",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "BankConfig",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "BankConfig",
                        "to": "Cid",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "Cid",
                        "to": "NotOwnerError",
                        "type": "exprOtherwise",
                        "label": "NotOwner"
                    },
                    {
                        "id": 4,
                        "from": "Cid",
                        "to": "Get",
                        "type": "expression",
                        "label": "ValidOwner",
                        "value": "$activity[Cid].attrs.alias == $flow.parameters.owner"
                    },
                    {
                        "id": 5,
                        "from": "Get",
                        "to": "LogGetAcct",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "LogGetAcct",
                        "to": "NoAccountError",
                        "type": "expression",
                        "label": "InvalidAcct",
                        "value": "$activity[Get].code != 200"
                    },
                    {
                        "id": 7,
                        "from": "LogGetAcct",
                        "to": "NoFundError",
                        "type": "expression",
                        "label": "OverdrawnAcct",
                        "value": "$activity[Get].code == 200 && $activity[Get].result.balance < $flow.parameters.amount"
                    },
                    {
                        "id": 8,
                        "from": "LogGetAcct",
                        "to": "PutAcct",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Get].code == 200 && $activity[Get].result.balance >= $flow.parameters.amount"
                    },
                    {
                        "id": 9,
                        "from": "PutAcct",
                        "to": "PutIOU",
                        "type": "default"
                    },
                    {
                        "id": 10,
                        "from": "PutIOU",
                        "to": "LogPutIOU",
                        "type": "default"
                    },
                    {
                        "id": 11,
                        "from": "LogPutIOU",
                        "to": "PutOwnerTx",
                        "type": "default"
                    },
                    {
                        "id": 12,
                        "from": "PutOwnerTx",
                        "to": "PutBankTx",
                        "type": "default"
                    },
                    {
                        "id": 13,
                        "from": "PutBankTx",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[issue] \", $flow.parameters.bank, \" to \", $flow.parameters.owner, \" amount: \", coerce.toString($flow.parameters.amount))",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "BankConfig",
                        "name": "BankConfig",
                        "description": "",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:bankConfig"
                            },
                            "input": {
                                "bank": "=$flow.parameters.bank"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bank\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"bank\": \"\"\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"currency\":{\"type\":\"string\"},\"acctCollection\":{\"type\":\"string\"},\"txnCollection\":{\"type\":\"string\"},\"exchangeRate\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"currency\":{\"type\":\"string\"},\"acctCollection\":{\"type\":\"string\"},\"txnCollection\":{\"type\":\"string\"},\"exchangeRate\":{\"type\":\"number\"}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"alias\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"alias\": \"\"\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "NotOwnerError",
                        "name": "NotOwnerError",
                        "description": "",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].name, \" is not the IOU owner \", $flow.parameters.owner)"
                            }
                        }
                    },
                    {
                        "id": "Get",
                        "name": "Get",
                        "description": "This activity fetches data by key from fabric ledger",
                        "activity": {
                            "ref": "#get",
                            "input": {
                                "key": "=$flow.parameters.owner",
                                "privateCollection": "=$activity[BankConfig].acctCollection"
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://AccountLedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogGetAcct",
                        "name": "LogGetAcct",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GET account: \", $activity[Get].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "NoAccountError",
                        "name": "NoAccountError",
                        "description": "",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"Account \", $flow.parameters.owner, \" does not exist in bank \", $flow.parameters.bank)"
                            }
                        }
                    },
                    {
                        "id": "NoFundError",
                        "name": "NoFundError",
                        "description": "",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"Account \", $flow.parameters.owner, \" does not have enough fund\")"
                            }
                        }
                    },
                    {
                        "id": "PutAcct",
                        "name": "PutAcct",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=$activity[Get].key",
                                "privateCollection": "=$activity[BankConfig].acctCollection",
                                "compositeKeys": "",
                                "data": {
                                    "mapping": {
                                        "name": "=$activity[Get].result.name",
                                        "bank": "=$activity[Get].result.bank",
                                        "currency": "=$activity[Get].result.currency",
                                        "balance": "=$activity[Get].result.balance - $flow.parameters.amount"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://AccountLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"bank\": {\n            \"type\": \"string\"\n        },\n        \"balance\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"bank\": {\n            \"type\": \"string\"\n        },\n        \"balance\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "PutIOU",
                        "name": "PutIOU",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=$flow.txID",
                                "privateCollection": "",
                                "compositeKeys": "=$property[\"CompositeKeys.IOUIndex\"]",
                                "data": {
                                    "mapping": {
                                        "id": "=$flow.txID",
                                        "issuer": "=$flow.parameters.bank",
                                        "amount": "=$flow.parameters.amount",
                                        "currency": "=$activity[BankConfig].currency",
                                        "issueDate": "=$flow.txTime",
                                        "owner": "=$flow.parameters.owner"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://IOULedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"issuer\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        },\n        \"issueDate\": {\n            \"type\": \"string\"\n        },\n        \"owner\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"issuer\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        },\n        \"issueDate\": {\n            \"type\": \"string\"\n        },\n        \"owner\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogPutIOU",
                        "name": "LogPutIOU",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"PUT IOU: \", $activity[PutIOU].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "PutOwnerTx",
                        "name": "PutOwnerTx",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=string.concat($flow.txID, \":\", $flow.parameters.owner)",
                                "privateCollection": "=$activity[BankConfig].txnCollection",
                                "compositeKeys": "=$property[\"CompositeKeys.TxIndex\"]",
                                "data": {
                                    "mapping": {
                                        "txID": "=$flow.txID",
                                        "txTime": "=$flow.txTime",
                                        "account": "=$flow.parameters.owner",
                                        "amount": "=0 - $flow.parameters.amount",
                                        "iouRef": "=$activity[PutIOU].key"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://TxLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"txID\": {\n            \"type\": \"string\"\n        },\n        \"txTime\": {\n            \"type\": \"string\"\n        },\n        \"account\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"iouRef\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"txID\": {\n            \"type\": \"string\"\n        },\n        \"txTime\": {\n            \"type\": \"string\"\n        },\n        \"account\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"iouRef\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "PutBankTx",
                        "name": "PutBankTx",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=string.concat($flow.txID, \":\", $flow.parameters.bank)",
                                "privateCollection": "=$activity[BankConfig].txnCollection",
                                "compositeKeys": "=$property[\"CompositeKeys.TxIndex\"]",
                                "data": {
                                    "mapping": {
                                        "txID": "=$flow.txID",
                                        "txTime": "=$flow.txTime",
                                        "account": "=$flow.parameters.bank",
                                        "amount": "=$flow.parameters.amount",
                                        "iouRef": "=$activity[PutIOU].key"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://TxLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"txID\": {\n            \"type\": \"string\"\n        },\n        \"txTime\": {\n            \"type\": \"string\"\n        },\n        \"account\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"iouRef\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"txID\": {\n            \"type\": \"string\"\n        },\n        \"txTime\": {\n            \"type\": \"string\"\n        },\n        \"account\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"iouRef\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[PutIOU].code",
                                    "message": "=$activity[PutIOU].message",
                                    "returns": "=$activity[PutIOU].result"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"bank\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction1\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bank\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:buy",
            "data": {
                "name": "buy",
                "description": "buy an existing IOU issued by another bank",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "BankConfig",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "BankConfig",
                        "to": "GetIOU",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "GetIOU",
                        "to": "LogGetIOU",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogGetIOU",
                        "to": "NoIOUError",
                        "type": "expression",
                        "label": "InvalidIOU",
                        "value": "$activity[GetIOU].code != 200"
                    },
                    {
                        "id": 5,
                        "from": "LogGetIOU",
                        "to": "BankOwnedError",
                        "type": "expression",
                        "label": "NotOwnedByBank",
                        "value": "$activity[GetIOU].code == 200 && $activity[GetIOU].result.owner != $flow.parameters.bank"
                    },
                    {
                        "id": 6,
                        "from": "LogGetIOU",
                        "to": "Cid",
                        "type": "expression",
                        "label": "IOUVerified",
                        "value": "$activity[GetIOU].code == 200 && $activity[GetIOU].result.owner == $flow.parameters.bank"
                    },
                    {
                        "id": 7,
                        "from": "Cid",
                        "to": "NotOwnerError",
                        "type": "exprOtherwise",
                        "label": "NotOwner"
                    },
                    {
                        "id": 8,
                        "from": "Cid",
                        "to": "Get",
                        "type": "expression",
                        "label": "IsOwner",
                        "value": "$activity[Cid].attrs.alias == $flow.parameters.owner"
                    },
                    {
                        "id": 9,
                        "from": "Get",
                        "to": "LogGetAcct",
                        "type": "default"
                    },
                    {
                        "id": 10,
                        "from": "LogGetAcct",
                        "to": "NoAccountError",
                        "type": "expression",
                        "label": "InvalidAcct",
                        "value": "$activity[Get].code != 200"
                    },
                    {
                        "id": 11,
                        "from": "LogGetAcct",
                        "to": "NoFundError",
                        "type": "expression",
                        "label": "OverdrawnAcct",
                        "value": "$activity[Get].code == 200 && $activity[Get].result.balance < $activity[GetIOU].result.amount*$activity[BankConfig].exchangeRate"
                    },
                    {
                        "id": 12,
                        "from": "LogGetAcct",
                        "to": "PutAcct",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Get].code == 200 && $activity[Get].result.balance >= $activity[GetIOU].result.amount*$activity[BankConfig].exchangeRate"
                    },
                    {
                        "id": 13,
                        "from": "PutAcct",
                        "to": "PutIOU",
                        "type": "default"
                    },
                    {
                        "id": 14,
                        "from": "PutIOU",
                        "to": "LogPutIOU",
                        "type": "default"
                    },
                    {
                        "id": 15,
                        "from": "LogPutIOU",
                        "to": "PutOwnerTx",
                        "type": "default"
                    },
                    {
                        "id": 16,
                        "from": "PutOwnerTx",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[buy] \", $flow.parameters.iou, \" from bank \", $flow.parameters.bank, \" owner: \", $flow.parameters.owner)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "BankConfig",
                        "name": "BankConfig",
                        "description": "",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:bankConfig"
                            },
                            "input": {
                                "bank": "=$flow.parameters.bank"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bank\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"bank\": \"\"\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"currency\":{\"type\":\"string\"},\"acctCollection\":{\"type\":\"string\"},\"txnCollection\":{\"type\":\"string\"},\"exchangeRate\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"currency\":{\"type\":\"string\"},\"acctCollection\":{\"type\":\"string\"},\"txnCollection\":{\"type\":\"string\"},\"exchangeRate\":{\"type\":\"number\"}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "GetIOU",
                        "name": "GetIOU",
                        "description": "This activity fetches data by key from fabric ledger",
                        "activity": {
                            "ref": "#get",
                            "input": {
                                "key": "=$flow.parameters.iou",
                                "privateCollection": ""
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://IOULedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogGetIOU",
                        "name": "LogGetIOU",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GET IOU: \", $activity[GetIOU].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "NoIOUError",
                        "name": "NoIOUError",
                        "description": "",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"Failed to retrieve IOU: \", $activity[GetIOU].message)"
                            }
                        }
                    },
                    {
                        "id": "BankOwnedError",
                        "name": "BankOwnedError",
                        "description": "",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"IOU owner \", $activity[GetIOU].result.owner, \" is not the bank \", $flow.parameters.bank)"
                            }
                        }
                    },
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"alias\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"alias\": \"\"\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "NotOwnerError",
                        "name": "NotOwnerError",
                        "description": "",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].name, \" is not the IOU owner \", $flow.parameters.owner)"
                            }
                        }
                    },
                    {
                        "id": "Get",
                        "name": "Get",
                        "description": "This activity fetches data by key from fabric ledger",
                        "activity": {
                            "ref": "#get",
                            "input": {
                                "key": "=$flow.parameters.owner",
                                "privateCollection": "=$activity[BankConfig].acctCollection"
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://AccountLedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogGetAcct",
                        "name": "LogGetAcct",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GET account: \", $activity[Get].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "NoAccountError",
                        "name": "NoAccountError",
                        "description": "",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"Account \", $flow.parameters.owner, \" does not exist in bank \", $flow.parameters.bank)"
                            }
                        }
                    },
                    {
                        "id": "NoFundError",
                        "name": "NoFundError",
                        "description": "",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"Account \", $flow.parameters.owner, \" does not have enough fund\")"
                            }
                        }
                    },
                    {
                        "id": "PutAcct",
                        "name": "PutAcct",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=$activity[Get].key",
                                "privateCollection": "=$activity[BankConfig].acctCollection",
                                "compositeKeys": "",
                                "data": {
                                    "mapping": {
                                        "name": "=$activity[Get].result.name",
                                        "bank": "=$activity[Get].result.bank",
                                        "currency": "=$activity[Get].result.currency",
                                        "balance": "=$activity[Get].result.balance - float.float64($activity[GetIOU].result.amount*$activity[BankConfig].exchangeRate, 2)"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://AccountLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"bank\": {\n            \"type\": \"string\"\n        },\n        \"balance\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"bank\": {\n            \"type\": \"string\"\n        },\n        \"balance\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "PutIOU",
                        "name": "PutIOU",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=$activity[GetIOU].key",
                                "privateCollection": "",
                                "compositeKeys": "=$property[\"CompositeKeys.IOUIndex\"]",
                                "data": {
                                    "mapping": {
                                        "id": "=$activity[GetIOU].result.id",
                                        "amount": "=$activity[GetIOU].result.amount",
                                        "issuer": "=$activity[GetIOU].result.issuer",
                                        "currency": "=$activity[GetIOU].result.currency",
                                        "issueDate": "=$activity[GetIOU].result.issueDate",
                                        "owner": "=$flow.parameters.owner"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://IOULedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"issuer\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        },\n        \"issueDate\": {\n            \"type\": \"string\"\n        },\n        \"owner\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"issuer\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        },\n        \"issueDate\": {\n            \"type\": \"string\"\n        },\n        \"owner\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogPutIOU",
                        "name": "LogPutIOU",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"PUT IOU: \", $activity[PutIOU].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "PutOwnerTx",
                        "name": "PutOwnerTx",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=string.concat($flow.txID, \":\", $flow.parameters.owner)",
                                "privateCollection": "=$activity[BankConfig].txnCollection",
                                "compositeKeys": "=$property[\"CompositeKeys.TxIndex\"]",
                                "data": {
                                    "mapping": {
                                        "txID": "=$flow.txID",
                                        "txTime": "=$flow.txTime",
                                        "account": "=$flow.parameters.owner",
                                        "amount": "=0 - float.float64($activity[GetIOU].result.amount*$activity[BankConfig].exchangeRate, 2)",
                                        "iouRef": "=$activity[PutIOU].key"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://TxLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"txID\": {\n            \"type\": \"string\"\n        },\n        \"txTime\": {\n            \"type\": \"string\"\n        },\n        \"account\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"iouRef\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"txID\": {\n            \"type\": \"string\"\n        },\n        \"txTime\": {\n            \"type\": \"string\"\n        },\n        \"account\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"iouRef\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[PutIOU].code",
                                    "message": "=$activity[PutIOU].message",
                                    "returns": "=$activity[PutIOU].result"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"bank\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"iou\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction1\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bank\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"iou\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:transfer",
            "data": {
                "name": "transfer",
                "description": "transfer an IOU to a new owner",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "Cid",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Cid",
                        "to": "Get",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "Get",
                        "to": "LogGetIOU",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogGetIOU",
                        "to": "NotExistError",
                        "type": "expression",
                        "label": "InvalidIOU",
                        "value": "$activity[Get].code != 200"
                    },
                    {
                        "id": 5,
                        "from": "LogGetIOU",
                        "to": "NotOwnerError",
                        "type": "expression",
                        "label": "NotOwner",
                        "value": "$activity[Get].code == 200 && $activity[Cid].attrs.alias != $activity[Get].result.owner"
                    },
                    {
                        "id": 6,
                        "from": "LogGetIOU",
                        "to": "Put",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Get].code == 200 && $activity[Get].result.owner == $activity[Cid].attrs.alias"
                    },
                    {
                        "id": 7,
                        "from": "Put",
                        "to": "LogPutIOU",
                        "type": "default"
                    },
                    {
                        "id": 8,
                        "from": "LogPutIOU",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[transfer] \", $flow.parameters.id, \" new owner: \", $flow.parameters.newOwner)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"alias\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"alias\": \"\"\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Get",
                        "name": "Get",
                        "description": "This activity fetches data by key from fabric ledger",
                        "activity": {
                            "ref": "#get",
                            "input": {
                                "key": "=$flow.parameters.id",
                                "privateCollection": ""
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://IOULedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogGetIOU",
                        "name": "LogGetIOU",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GET IOU: \", $activity[Get].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "NotExistError",
                        "name": "NotExistError",
                        "description": "",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"Failed to find IOU: \", $activity[Get].message)"
                            }
                        }
                    },
                    {
                        "id": "NotOwnerError",
                        "name": "NotOwnerError",
                        "description": "",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].name, \" is not the IOU owner \", $activity[Get].result.owner)"
                            }
                        }
                    },
                    {
                        "id": "Put",
                        "name": "Put",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=$activity[Get].key",
                                "privateCollection": "",
                                "compositeKeys": "",
                                "data": {
                                    "mapping": {
                                        "id": "=$activity[Get].result.id",
                                        "issuer": "=$activity[Get].result.issuer",
                                        "amount": "=$activity[Get].result.amount",
                                        "currency": "=$activity[Get].result.currency",
                                        "issueDate": "=$activity[Get].result.issueDate",
                                        "owner": "=$flow.parameters.newOwner"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://IOULedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"issuer\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        },\n        \"issueDate\": {\n            \"type\": \"string\"\n        },\n        \"owner\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"issuer\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        },\n        \"issueDate\": {\n            \"type\": \"string\"\n        },\n        \"owner\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogPutIOU",
                        "name": "LogPutIOU",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"PUT: \", $activity[Put].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Put].code",
                                    "message": "=$activity[Put].message",
                                    "returns": "=$activity[Put].result"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"},\"newOwner\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction2\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"newOwner\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:exchange",
            "data": {
                "name": "exchange",
                "description": "exchange IOU to an equivalent IOU of specified bank's currency",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "Cid",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Cid",
                        "to": "BankConfig",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "BankConfig",
                        "to": "Get",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "Get",
                        "to": "LogGetIOU",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "LogGetIOU",
                        "to": "NotExistError",
                        "type": "expression",
                        "label": "InvalidIOU",
                        "value": "$activity[Get].code != 200"
                    },
                    {
                        "id": 6,
                        "from": "LogGetIOU",
                        "to": "NotOwnerError",
                        "type": "expression",
                        "label": "NotOwner",
                        "value": "$activity[Get].code == 200 && $activity[Cid].attrs.alias != $activity[Get].result.owner"
                    },
                    {
                        "id": 7,
                        "from": "LogGetIOU",
                        "to": "SameCurrencyError",
                        "type": "expression",
                        "label": "SameCurrency",
                        "value": "$activity[Get].code == 200 && $activity[Get].result.currency == $activity[BankConfig].currency"
                    },
                    {
                        "id": 8,
                        "from": "LogGetIOU",
                        "to": "PutBank",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[Get].code == 200 && $activity[BankConfig].currency != $activity[Get].result.currency && $activity[Cid].attrs.alias == $activity[Get].result.owner"
                    },
                    {
                        "id": 9,
                        "from": "PutBank",
                        "to": "PutOwner",
                        "type": "default"
                    },
                    {
                        "id": 10,
                        "from": "PutOwner",
                        "to": "LogNewIOU",
                        "type": "default"
                    },
                    {
                        "id": 11,
                        "from": "LogNewIOU",
                        "to": "PutBankTx",
                        "type": "default"
                    },
                    {
                        "id": 12,
                        "from": "PutBankTx",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[exchange] \", $flow.parameters.id, \" at bank \", $flow.parameters.bank)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"alias\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"alias\": \"\"\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "BankConfig",
                        "name": "BankConfig",
                        "description": "",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:bankConfig"
                            },
                            "input": {
                                "bank": "=$flow.parameters.bank"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bank\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"bank\": \"\"\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"currency\":{\"type\":\"string\"},\"acctCollection\":{\"type\":\"string\"},\"txnCollection\":{\"type\":\"string\"},\"exchangeRate\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"currency\":{\"type\":\"string\"},\"acctCollection\":{\"type\":\"string\"},\"txnCollection\":{\"type\":\"string\"},\"exchangeRate\":{\"type\":\"number\"}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Get",
                        "name": "Get",
                        "description": "This activity fetches data by key from fabric ledger",
                        "activity": {
                            "ref": "#get",
                            "input": {
                                "key": "=$flow.parameters.id",
                                "privateCollection": ""
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://IOULedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogGetIOU",
                        "name": "LogGetIOU",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GET IOU: \", $activity[Get].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "NotExistError",
                        "name": "NotExistError",
                        "description": "",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"Failed to find IOU: \", $activity[Get].message)"
                            }
                        }
                    },
                    {
                        "id": "NotOwnerError",
                        "name": "NotOwnerError",
                        "description": "",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].name, \" is not IOU owner \", $activity[Get].result.owner)"
                            }
                        }
                    },
                    {
                        "id": "SameCurrencyError",
                        "name": "SameCurrencyError",
                        "description": "",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"IOU currency \", $activity[Get].result.currency, \" is the same as bank's currency \", $activity[BankConfig].currency)"
                            }
                        }
                    },
                    {
                        "id": "PutBank",
                        "name": "PutBank",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=$activity[Get].key",
                                "privateCollection": "",
                                "compositeKeys": "",
                                "data": {
                                    "mapping": {
                                        "id": "=$activity[Get].result.id",
                                        "issuer": "=$activity[Get].result.issuer",
                                        "amount": "=$activity[Get].result.amount",
                                        "currency": "=$activity[Get].result.currency",
                                        "issueDate": "=$activity[Get].result.issueDate",
                                        "owner": "=$flow.parameters.bank"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://IOULedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"issuer\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        },\n        \"issueDate\": {\n            \"type\": \"string\"\n        },\n        \"owner\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"issuer\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        },\n        \"issueDate\": {\n            \"type\": \"string\"\n        },\n        \"owner\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "PutOwner",
                        "name": "PutOwner",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=$flow.txID",
                                "privateCollection": "",
                                "compositeKeys": "=$property[\"CompositeKeys.IOUIndex\"]",
                                "data": {
                                    "mapping": {
                                        "id": "=$flow.txID",
                                        "issuer": "=$flow.parameters.bank",
                                        "amount": "=float.float64($activity[Get].result.amount * $activity[BankConfig].exchangeRate, 2)",
                                        "currency": "=$activity[BankConfig].currency",
                                        "issueDate": "=$flow.txTime",
                                        "owner": "=$activity[Get].result.owner"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://IOULedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"issuer\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        },\n        \"issueDate\": {\n            \"type\": \"string\"\n        },\n        \"owner\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"issuer\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        },\n        \"issueDate\": {\n            \"type\": \"string\"\n        },\n        \"owner\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogNewIOU",
                        "name": "LogNewIOU",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"PUT new IOU: \", $activity[PutOwner].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "PutBankTx",
                        "name": "PutBankTx",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=string.concat($flow.txID, \":\", $flow.parameters.bank)",
                                "privateCollection": "=$activity[BankConfig].txnCollection",
                                "compositeKeys": "=$property[\"CompositeKeys.TxIndex\"]",
                                "data": {
                                    "mapping": {
                                        "txID": "=$flow.txID",
                                        "txTime": "=$flow.txTime",
                                        "account": "=$flow.parameters.bank",
                                        "amount": "=$activity[PutOwner].result.amount",
                                        "iouRef": "=$activity[PutOwner].key"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://TxLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"txID\": {\n            \"type\": \"string\"\n        },\n        \"txTime\": {\n            \"type\": \"string\"\n        },\n        \"account\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"iouRef\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"txID\": {\n            \"type\": \"string\"\n        },\n        \"txTime\": {\n            \"type\": \"string\"\n        },\n        \"account\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"iouRef\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[PutOwner].code",
                                    "message": "=$activity[PutOwner].message",
                                    "returns": "=$activity[PutOwner].result"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"},\"bank\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction3\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"bank\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:redeem",
            "data": {
                "name": "redeem",
                "description": "redeem an IOU at the issuer bank",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "Cid",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Cid",
                        "to": "GetIOU",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "GetIOU",
                        "to": "LogGetIOU",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogGetIOU",
                        "to": "NoIOUError",
                        "type": "expression",
                        "label": "InvalidIOU",
                        "value": "$activity[GetIOU].code != 200"
                    },
                    {
                        "id": 5,
                        "from": "LogGetIOU",
                        "to": "NotIssuerError",
                        "type": "expression",
                        "label": "BankIsNotIssuer",
                        "value": "$activity[GetIOU].code == 200 && $activity[GetIOU].result.issuer != $flow.parameters.bank"
                    },
                    {
                        "id": 6,
                        "from": "LogGetIOU",
                        "to": "NotOwnerError",
                        "type": "expression",
                        "label": "NotIOUOwner",
                        "value": "$activity[GetIOU].code == 200 && $activity[GetIOU].result.owner != $activity[Cid].attrs.alias"
                    },
                    {
                        "id": 7,
                        "from": "LogGetIOU",
                        "to": "BankConfig",
                        "type": "expression",
                        "label": "Authorized",
                        "value": "$activity[GetIOU].code == 200 && $activity[GetIOU].result.issuer == $flow.parameters.bank && $activity[GetIOU].result.owner == $activity[Cid].attrs.alias"
                    },
                    {
                        "id": 8,
                        "from": "BankConfig",
                        "to": "GetAcct",
                        "type": "default"
                    },
                    {
                        "id": 9,
                        "from": "GetAcct",
                        "to": "LogGetAcct",
                        "type": "default"
                    },
                    {
                        "id": 10,
                        "from": "LogGetAcct",
                        "to": "NoAcctError",
                        "type": "exprOtherwise",
                        "label": "InvalidAcct"
                    },
                    {
                        "id": 11,
                        "from": "LogGetAcct",
                        "to": "Delete",
                        "type": "expression",
                        "label": "ValidCustomer",
                        "value": "$activity[GetAcct].code == 200"
                    },
                    {
                        "id": 12,
                        "from": "Delete",
                        "to": "PutAcct",
                        "type": "default"
                    },
                    {
                        "id": 13,
                        "from": "PutAcct",
                        "to": "LogPutAcct",
                        "type": "default"
                    },
                    {
                        "id": 14,
                        "from": "LogPutAcct",
                        "to": "PutOwnerTx",
                        "type": "default"
                    },
                    {
                        "id": 15,
                        "from": "PutOwnerTx",
                        "to": "PutBankTx",
                        "type": "default"
                    },
                    {
                        "id": 16,
                        "from": "PutBankTx",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[redeem] \", $flow.parameters.id, \" at bank \", $flow.parameters.bank)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Cid",
                        "name": "Cid",
                        "description": "This activity returns requesting client ID",
                        "activity": {
                            "ref": "#cid",
                            "schemas": {
                                "output": {
                                    "attrs": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"alias\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"alias\": \"\"\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "GetIOU",
                        "name": "GetIOU",
                        "description": "This activity fetches data by key from fabric ledger",
                        "activity": {
                            "ref": "#get",
                            "input": {
                                "key": "=$flow.parameters.id",
                                "privateCollection": ""
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://IOULedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogGetIOU",
                        "name": "LogGetIOU",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GET IOU: \", $activity[GetIOU].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "NoIOUError",
                        "name": "NoIOUError",
                        "description": "",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"Failed to find IOU: \", $activity[GetIOU].message)"
                            }
                        }
                    },
                    {
                        "id": "NotIssuerError",
                        "name": "NotIssuerError",
                        "description": "",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"IOU issuer \", $activity[GetIOU].result.issuer, \" is not the bank \", $flow.parameters.bank)"
                            }
                        }
                    },
                    {
                        "id": "NotOwnerError",
                        "name": "NotOwnerError",
                        "description": "",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"User \", $activity[Cid].name, \" is not IOU owner \", $activity[GetIOU].result.owner)"
                            }
                        }
                    },
                    {
                        "id": "BankConfig",
                        "name": "BankConfig",
                        "description": "",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:bankConfig"
                            },
                            "input": {
                                "bank": "=$flow.parameters.bank"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bank\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"bank\": \"\"\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"currency\":{\"type\":\"string\"},\"acctCollection\":{\"type\":\"string\"},\"txnCollection\":{\"type\":\"string\"},\"exchangeRate\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"currency\":{\"type\":\"string\"},\"acctCollection\":{\"type\":\"string\"},\"txnCollection\":{\"type\":\"string\"},\"exchangeRate\":{\"type\":\"number\"}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "GetAcct",
                        "name": "GetAcct",
                        "description": "This activity fetches data by key from fabric ledger",
                        "activity": {
                            "ref": "#get",
                            "input": {
                                "key": "=$activity[GetIOU].result.owner",
                                "privateCollection": "=$activity[BankConfig].acctCollection"
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://AccountLedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogGetAcct",
                        "name": "LogGetAcct",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GET account: \", $activity[GetAcct].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "NoAcctError",
                        "name": "NoAcctError",
                        "description": "",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"Failed to find owner account: \", $activity[GetAcct].message)"
                            }
                        }
                    },
                    {
                        "id": "Delete",
                        "name": "Delete",
                        "description": "This activity deletes data from fabric world state",
                        "activity": {
                            "ref": "#delete",
                            "input": {
                                "key": "=$flow.parameters.id",
                                "privateCollection": "",
                                "keysOnly": false,
                                "compositeKeys": "=$property[\"CompositeKeys.IOUIndex\"]"
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://IOULedger"
                                }
                            }
                        }
                    },
                    {
                        "id": "PutAcct",
                        "name": "PutAcct",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=$activity[GetAcct].key",
                                "privateCollection": "=$activity[BankConfig].acctCollection",
                                "compositeKeys": "",
                                "data": {
                                    "mapping": {
                                        "name": "=$activity[GetAcct].result.name",
                                        "bank": "=$activity[GetAcct].result.bank",
                                        "currency": "=$activity[GetAcct].result.currency",
                                        "balance": "=$activity[GetAcct].result.balance + $activity[GetIOU].result.amount"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://AccountLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"bank\": {\n            \"type\": \"string\"\n        },\n        \"balance\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"bank\": {\n            \"type\": \"string\"\n        },\n        \"balance\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogPutAcct",
                        "name": "LogPutAcct",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"PUT account: \", $activity[PutAcct].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "PutOwnerTx",
                        "name": "PutOwnerTx",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=string.concat($flow.txID, \":\", $activity[GetAcct].result.name)",
                                "privateCollection": "=$activity[BankConfig].txnCollection",
                                "compositeKeys": "=$property[\"CompositeKeys.TxIndex\"]",
                                "data": {
                                    "mapping": {
                                        "txID": "=$flow.txID",
                                        "txTime": "=$flow.txTime",
                                        "account": "=$activity[GetAcct].key",
                                        "amount": "=$activity[GetIOU].result.amount",
                                        "iouRef": "=$activity[GetIOU].key"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://TxLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"txID\": {\n            \"type\": \"string\"\n        },\n        \"txTime\": {\n            \"type\": \"string\"\n        },\n        \"account\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"iouRef\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"txID\": {\n            \"type\": \"string\"\n        },\n        \"txTime\": {\n            \"type\": \"string\"\n        },\n        \"account\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"iouRef\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "PutBankTx",
                        "name": "PutBankTx",
                        "description": "This activity stores data to fabric ledger",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=string.concat($flow.txID, \":\", $flow.parameters.bank)",
                                "privateCollection": "=$activity[BankConfig].txnCollection",
                                "compositeKeys": "=$property[\"CompositeKeys.TxIndex\"]",
                                "data": {
                                    "mapping": {
                                        "account": "=$flow.parameters.bank",
                                        "txTime": "=$flow.txTime",
                                        "amount": "=0 - $activity[GetIOU].result.amount",
                                        "iouRef": "=$activity[GetIOU].key",
                                        "txID": "=$flow.txID"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": "schema://TxLedger"
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"txID\": {\n            \"type\": \"string\"\n        },\n        \"txTime\": {\n            \"type\": \"string\"\n        },\n        \"account\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"iouRef\": {\n            \"type\": \"string\"\n        }\n    }\n}",
                                        "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"txID\": {\n            \"type\": \"string\"\n        },\n        \"txTime\": {\n            \"type\": \"string\"\n        },\n        \"account\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"iouRef\": {\n            \"type\": \"string\"\n        }\n    }\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[PutAcct].code",
                                    "message": "=$activity[PutAcct].message",
                                    "returns": "=$activity[PutAcct].result"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"},\"bank\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"name\":{\"type\":\"string\"},\"bank\":{\"type\":\"string\"},\"balance\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction4\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"bank\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"bank\":{\"type\":\"string\"},\"balance\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:getBankAccounts",
            "data": {
                "name": "getBankAccounts",
                "description": "retrieves all accounts of a specified bank",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "BankConfig",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "BankConfig",
                        "to": "GetByCompositeKey",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "GetByCompositeKey",
                        "to": "LogResult",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogResult",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[getBankAccounts] \", $flow.parameters.bank)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "BankConfig",
                        "name": "BankConfig",
                        "description": "",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:bankConfig"
                            },
                            "input": {
                                "bank": "=$flow.parameters.bank"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bank\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"bank\": \"\"\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"currency\":{\"type\":\"string\"},\"acctCollection\":{\"type\":\"string\"},\"txnCollection\":{\"type\":\"string\"},\"exchangeRate\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"currency\":{\"type\":\"string\"},\"acctCollection\":{\"type\":\"string\"},\"txnCollection\":{\"type\":\"string\"},\"exchangeRate\":{\"type\":\"number\"}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "GetByCompositeKey",
                        "name": "GetByCompositeKey",
                        "description": "This activity fetches data by composite-key from fabric ledger",
                        "activity": {
                            "ref": "#getbycompositekey",
                            "input": {
                                "keyName": "=$property[\"CompositeKeys.BankName\"]",
                                "usePagination": false,
                                "pageSize": 0,
                                "start": "",
                                "privateCollection": "=$activity[BankConfig].acctCollection",
                                "attributes": {
                                    "mapping": {
                                        "bank": "=$flow.parameters.bank"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "attributes": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"bank\":{\"type\":\"string\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"bank\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true}]"
                                    }
                                },
                                "output": {
                                    "result": "schema://AccountLedgerMap"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogResult",
                        "name": "LogResult",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GET by bank~name composite key: \", $activity[GetByCompositeKey].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[GetByCompositeKey].code",
                                    "message": "=$activity[GetByCompositeKey].message",
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[GetByCompositeKey].result,index)": {
                                                "key": "=$loop.key",
                                                "value": "=$loop.value"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"bank\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"bank\":{\"type\":\"string\"},\"balance\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction6\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bank\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"bank\":{\"type\":\"string\"},\"balance\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:getAccountTransactions",
            "data": {
                "name": "getAccountTransactions",
                "description": "retrieves all transactions of an account name in a specified bank",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "BankConfig",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "BankConfig",
                        "to": "GetByCompositeKey",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "GetByCompositeKey",
                        "to": "LogTx",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogTx",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[getAccountTransactions] \", $flow.parameters.name, \" in bank \", $flow.parameters.bank)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "BankConfig",
                        "name": "BankConfig",
                        "description": "",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:bankConfig"
                            },
                            "input": {
                                "bank": "=$flow.parameters.bank"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bank\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"bank\": \"\"\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"currency\":{\"type\":\"string\"},\"acctCollection\":{\"type\":\"string\"},\"txnCollection\":{\"type\":\"string\"},\"exchangeRate\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"currency\":{\"type\":\"string\"},\"acctCollection\":{\"type\":\"string\"},\"txnCollection\":{\"type\":\"string\"},\"exchangeRate\":{\"type\":\"number\"}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "GetByCompositeKey",
                        "name": "GetByCompositeKey",
                        "description": "This activity fetches data by composite-key from fabric ledger",
                        "activity": {
                            "ref": "#getbycompositekey",
                            "input": {
                                "keyName": "account=account",
                                "usePagination": false,
                                "pageSize": 0,
                                "start": "",
                                "privateCollection": "=$activity[BankConfig].txnCollection",
                                "attributes": {
                                    "mapping": {
                                        "account": "=$flow.parameters.name"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "attributes": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"account\":{\"type\":\"string\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"account\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true}]"
                                    }
                                },
                                "output": {
                                    "result": "schema://TxLedgerMap"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogTx",
                        "name": "LogTx",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GET by account composite key: \", $activity[GetByCompositeKey].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[GetByCompositeKey].code",
                                    "message": "=$activity[GetByCompositeKey].message",
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[GetByCompositeKey].result,index)": {
                                                "key": "=$loop.key",
                                                "value": "=$loop.value"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"name\":{\"type\":\"string\"},\"bank\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"account\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"iouRef\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction7\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"bank\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"account\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"iouRef\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:getIOUHistory",
            "data": {
                "name": "getIOUHistory",
                "description": "retrieves history of an IOU",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "GetHistory",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "GetHistory",
                        "to": "LogIOUHistory",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogIOUHistory",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[getIOUHistory] \", $flow.parameters.id)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "GetHistory",
                        "name": "GetHistory",
                        "description": "This activity fetches history of a key from fabric ledger",
                        "activity": {
                            "ref": "#gethistory",
                            "input": {
                                "key": "=$flow.parameters.id"
                            },
                            "schemas": {
                                "output": {
                                    "result": "schema://IOUHistory"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogIOUHistory",
                        "name": "LogIOUHistory",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GetHistory: \", $activity[GetHistory].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[GetHistory].code",
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[GetHistory].result,index)": {
                                                "txID": "=$loop.txID",
                                                "txTime": "=$loop.txTime",
                                                "isDeleted": "=$loop.isDeleted",
                                                "value": "=$loop.value"
                                            }
                                        }
                                    },
                                    "message": "=$activity[GetHistory].message"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"isDeleted\":{\"type\":\"boolean\"},\"value\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction8\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"isDeleted\":{\"type\":\"boolean\"},\"value\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:queryIOUByAmount",
            "data": {
                "name": "queryIOUByAmount",
                "description": "find an IOU matching issuer, owner, and amount",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "Query",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Query",
                        "to": "LogResult",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogResult",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[queryIOUByAmount] issuer: \", $flow.parameters.issuer, \" owner: \", $flow.parameters.owner, \" amount: \", coerce.toString($flow.parameters.amount))",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Query",
                        "name": "Query",
                        "description": "This activity fetches data by rich query on fabric Couch DB",
                        "activity": {
                            "ref": "#query",
                            "input": {
                                "query": "{\n    \"selector\": {\n        \"issuer\": \"$issuer\",\n        \"owner\": \"$owner\",\n        \"amount\": \"$amount\"\n    }\n}",
                                "usePagination": false,
                                "pageSize": 0,
                                "start": "",
                                "privateCollection": "",
                                "queryParams": {
                                    "mapping": {
                                        "issuer": "=$flow.parameters.issuer",
                                        "owner": "=$flow.parameters.owner",
                                        "amount": "=$flow.parameters.amount"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "queryParams": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"issuer\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"issuer\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true},{\"parameterName\":\"owner\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true},{\"parameterName\":\"amount\",\"type\":\"number\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true}]"
                                    }
                                },
                                "output": {
                                    "result": "schema://IOULedgerMap"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogResult",
                        "name": "LogResult",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"QUERY: \", $activity[Query].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Query].code",
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[Query].result,index)": {
                                                "key": "=$loop.key",
                                                "value": "=$loop.value"
                                            }
                                        }
                                    },
                                    "message": "=$activity[Query].message"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"issuer\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction9\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"issuer\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:send",
            "data": {
                "name": "send",
                "description": "create or find IOU equivalent to specified amount in the currency of a receiver bank, returns the IOU owned by the sender.",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "SenderBankConfig",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "SenderBankConfig",
                        "to": "IssueIOU",
                        "type": "expression",
                        "label": "SameBank",
                        "value": "$flow.parameters.senderBank == $flow.parameters.receiverBank"
                    },
                    {
                        "id": 3,
                        "from": "IssueIOU",
                        "to": "LogIssueIOU",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogIssueIOU",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "SenderBankConfig",
                        "to": "SearchIOU",
                        "type": "exprOtherwise",
                        "label": "InterBank"
                    },
                    {
                        "id": 6,
                        "from": "SearchIOU",
                        "to": "LogSearchIOU",
                        "type": "default"
                    },
                    {
                        "id": 7,
                        "from": "LogSearchIOU",
                        "to": "IssueSenderIOU",
                        "type": "exprOtherwise",
                        "label": "NewIOU"
                    },
                    {
                        "id": 8,
                        "from": "IssueSenderIOU",
                        "to": "LogSenderIOU",
                        "type": "default"
                    },
                    {
                        "id": 9,
                        "from": "LogSenderIOU",
                        "to": "Return1",
                        "type": "default"
                    },
                    {
                        "id": 10,
                        "from": "LogSearchIOU",
                        "to": "BuyIOU",
                        "type": "expression",
                        "label": "IOUExists",
                        "value": "$activity[SearchIOU].status == 200"
                    },
                    {
                        "id": 11,
                        "from": "BuyIOU",
                        "to": "LogBuyIOU",
                        "type": "default"
                    },
                    {
                        "id": 12,
                        "from": "LogBuyIOU",
                        "to": "Return2",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[send] amount \", coerce.toString($flow.parameters.amount), \" from \", $flow.parameters.sender, \" bank \", $flow.parameters.senderBank, \" receiver bank: \", $flow.parameters.receiverBank)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "SenderBankConfig",
                        "name": "SenderBankConfig",
                        "description": "",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:bankConfig"
                            },
                            "input": {
                                "bank": "=$flow.parameters.senderBank"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bank\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"bank\": \"\"\n}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"currency\":{\"type\":\"string\"},\"acctCollection\":{\"type\":\"string\"},\"txnCollection\":{\"type\":\"string\"},\"exchangeRate\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"currency\":{\"type\":\"string\"},\"acctCollection\":{\"type\":\"string\"},\"txnCollection\":{\"type\":\"string\"},\"exchangeRate\":{\"type\":\"number\"}}}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "IssueIOU",
                        "name": "IssueIOU",
                        "description": "",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:issue"
                            },
                            "input": {
                                "parameters": {
                                    "mapping": {
                                        "bank": "=$flow.parameters.senderBank",
                                        "owner": "=$flow.parameters.sender",
                                        "amount": "=$flow.parameters.amount"
                                    }
                                },
                                "txID": "=$flow.txID",
                                "txTime": "=$flow.txTime"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"title\":\"FabricTransaction1\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bank\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                                        "fe_metadata": "{\"type\":\"object\",\"title\":\"FabricTransaction1\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bank\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}}},\"required\":[]}",
                                        "fe_metadata": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}}},\"required\":[]}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogIssueIOU",
                        "name": "LogIssueIOU",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"Issue IOU: \", $activity[IssueIOU].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[IssueIOU].status",
                                    "message": "=$activity[IssueIOU].message",
                                    "returns": "=$activity[IssueIOU].returns"
                                }
                            }
                        }
                    },
                    {
                        "id": "SearchIOU",
                        "name": "SearchIOU",
                        "description": "",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:queryIOUByAmount"
                            },
                            "input": {
                                "parameters": {
                                    "mapping": {
                                        "issuer": "=$flow.parameters.receiverBank",
                                        "owner": "=$flow.parameters.senderBank",
                                        "amount": "=$flow.parameters.amount"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"title\":\"FabricTransaction9\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"issuer\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                                        "fe_metadata": "{\"type\":\"object\",\"title\":\"FabricTransaction9\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"issuer\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}}}}}},\"required\":[]}",
                                        "fe_metadata": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogSearchIOU",
                        "name": "LogSearchIOU",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"Search IOU: \", $activity[SearchIOU].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "IssueSenderIOU",
                        "name": "IssueSenderIOU",
                        "description": "",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:issue"
                            },
                            "input": {
                                "parameters": {
                                    "mapping": {
                                        "bank": "=$flow.parameters.senderBank",
                                        "owner": "=$flow.parameters.sender",
                                        "amount": "=float.float64($flow.parameters.amount*$activity[SenderBankConfig].exchangeRate, 2)"
                                    }
                                },
                                "txID": "=$flow.txID",
                                "txTime": "=$flow.txTime"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"title\":\"FabricTransaction1\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bank\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                                        "fe_metadata": "{\"type\":\"object\",\"title\":\"FabricTransaction1\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bank\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}}},\"required\":[]}",
                                        "fe_metadata": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}}},\"required\":[]}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogSenderIOU",
                        "name": "LogSenderIOU",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"IssueSenderIOU: \", $activity[IssueSenderIOU].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[IssueSenderIOU].status",
                                    "message": "=$activity[IssueSenderIOU].message",
                                    "returns": "=$activity[IssueSenderIOU].returns"
                                }
                            }
                        }
                    },
                    {
                        "id": "BuyIOU",
                        "name": "BuyIOU",
                        "description": "",
                        "activity": {
                            "ref": "#subflow",
                            "settings": {
                                "flowURI": "res://flow:buy"
                            },
                            "input": {
                                "parameters": {
                                    "mapping": {
                                        "bank": "=$flow.parameters.senderBank",
                                        "owner": "=$flow.parameters.sender",
                                        "iou": "=$activity[SearchIOU].returns[0].key"
                                    }
                                },
                                "txID": "=$flow.txID",
                                "txTime": "=$flow.txTime"
                            },
                            "schemas": {
                                "input": {
                                    "input": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"title\":\"FabricTransaction1\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bank\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"iou\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                                        "fe_metadata": "{\"type\":\"object\",\"title\":\"FabricTransaction1\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"bank\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"},\"iou\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}"
                                    }
                                },
                                "output": {
                                    "output": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}}},\"required\":[]}",
                                        "fe_metadata": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}}},\"required\":[]}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogBuyIOU",
                        "name": "LogBuyIOU",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"BuyIOU: \", $activity[BuyIOU].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return2",
                        "name": "Return2",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[BuyIOU].status",
                                    "returns": "=$activity[BuyIOU].returns",
                                    "message": "=$activity[BuyIOU].message"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"sender\":{\"type\":\"string\"},\"senderBank\":{\"type\":\"string\"},\"receiverBank\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction11\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"sender\":{\"type\":\"string\"},\"senderBank\":{\"type\":\"string\"},\"receiverBank\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:getIOUByIssuer",
            "data": {
                "name": "getIOUByIssuer",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "GetByCompositeKey",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "GetByCompositeKey",
                        "to": "LogResult",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogResult",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[getIOUByIssuer] \", $flow.parameters.issuer)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "GetByCompositeKey",
                        "name": "GetByCompositeKey",
                        "description": "This activity fetches data by composite-key from fabric ledger",
                        "activity": {
                            "ref": "#getbycompositekey",
                            "input": {
                                "keyName": "issuer~id=issuer,id",
                                "usePagination": false,
                                "pageSize": 0,
                                "start": "",
                                "privateCollection": "",
                                "attributes": {
                                    "mapping": {
                                        "issuer": "=$flow.parameters.issuer"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "attributes": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"issuer\":{\"type\":\"string\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"issuer\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true}]"
                                    }
                                },
                                "output": {
                                    "result": "schema://IOULedgerMap"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogResult",
                        "name": "LogResult",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"QUERY: \", $activity[GetByCompositeKey].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[GetByCompositeKey].result,index)": {
                                                "value": "=$loop.value",
                                                "key": "=$loop.key"
                                            }
                                        }
                                    },
                                    "status": "=$activity[GetByCompositeKey].code",
                                    "message": "=$activity[GetByCompositeKey].message"
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"issuer\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction1\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"issuer\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:getIOUByOwner",
            "data": {
                "name": "getIOUByOwner",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "Query",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Query",
                        "to": "LogResult",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogResult",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[getIOUByOwner] \", $flow.parameters.owner)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Query",
                        "name": "Query",
                        "description": "This activity fetches data by rich query on fabric Couch DB",
                        "activity": {
                            "ref": "#query",
                            "input": {
                                "query": "{\n    \"selector\": {\n        \"owner\": \"$owner\"\n    }\n}",
                                "usePagination": false,
                                "pageSize": 0,
                                "start": "",
                                "privateCollection": "",
                                "queryParams": {
                                    "mapping": {
                                        "owner": "=$flow.parameters.owner"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "queryParams": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"owner\":{\"type\":\"string\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"owner\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true}]"
                                    }
                                },
                                "output": {
                                    "result": "schema://IOULedgerMap"
                                }
                            }
                        }
                    },
                    {
                        "id": "LogResult",
                        "name": "LogResult",
                        "description": "",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"QUERY: \", $activity[Query].message)",
                                "addDetails": false,
                                "usePrint": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "status": "=$activity[Query].code",
                                    "message": "=$activity[Query].message",
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[Query].result,index)": {
                                                "key": "=$loop.key",
                                                "value": "=$loop.value"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"owner\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "status",
                            "type": "float64"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        },
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction2\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"owner\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"status\":{\"type\":\"number\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":false},\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"issuer\":{\"type\":\"string\"},\"amount\":{\"type\":\"number\"},\"currency\":{\"type\":\"string\"},\"issueDate\":{\"type\":\"string\"},\"owner\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        }
    ],
    "properties": [
        {
            "name": "collections.USDBankAccounts",
            "type": "string",
            "value": "USDBankAccounts"
        },
        {
            "name": "collections.EURBankAccounts",
            "type": "string",
            "value": "EURBankAccounts"
        },
        {
            "name": "currencies.USDBankCurrency",
            "type": "string",
            "value": "USD"
        },
        {
            "name": "currencies.EURBankCurrency",
            "type": "string",
            "value": "EUR"
        },
        {
            "name": "collections.USDBankTransactions",
            "type": "string",
            "value": "USDBankTransactions"
        },
        {
            "name": "collections.EURBankTransactions",
            "type": "string",
            "value": "EURBankTransactions"
        },
        {
            "name": "currencies.ExchangeRate",
            "type": "float64",
            "value": 1.1
        },
        {
            "name": "CompositeKeys.BankName",
            "type": "string",
            "value": "bank~name=bank,name"
        },
        {
            "name": "CompositeKeys.IOUIndex",
            "type": "string",
            "value": "issuer~id=issuer,id;issueDate~id=issueDate,id"
        },
        {
            "name": "CompositeKeys.TxIndex",
            "type": "string",
            "value": "account=account;iouRef=iouRef"
        }
    ],
    "schemas": {
        "AccountLedger": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"bank\": {\n            \"type\": \"string\"\n        },\n        \"balance\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"bank\": {\n            \"type\": \"string\"\n        },\n        \"balance\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        }\n    }\n}"
        },
        "AccountRequest": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"bank\": {\n            \"type\": \"string\"\n        },\n        \"balance\": {\n            \"type\": \"number\"\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"bank\": {\n            \"type\": \"string\"\n        },\n        \"balance\": {\n            \"type\": \"number\"\n        }\n    }\n}"
        },
        "ClientID": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"bank\": {\n            \"type\": \"string\"\n        },\n        \"admin\": {\n            \"type\": \"string\"\n        },\n        \"alias\": {\n            \"type\": \"string\"\n        },\n        \"email\": {\n            \"type\": \"string\"\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"bank\": {\n            \"type\": \"string\"\n        },\n        \"admin\": {\n            \"type\": \"string\"\n        },\n        \"alias\": {\n            \"type\": \"string\"\n        },\n        \"email\": {\n            \"type\": \"string\"\n        }\n    }\n}"
        },
        "IOULedger": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"issuer\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        },\n        \"issueDate\": {\n            \"type\": \"string\"\n        },\n        \"owner\": {\n            \"type\": \"string\"\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"issuer\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"currency\": {\n            \"type\": \"string\"\n        },\n        \"issueDate\": {\n            \"type\": \"string\"\n        },\n        \"owner\": {\n            \"type\": \"string\"\n        }\n    }\n}"
        },
        "TxLedger": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"txID\": {\n            \"type\": \"string\"\n        },\n        \"txTime\": {\n            \"type\": \"string\"\n        },\n        \"account\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"iouRef\": {\n            \"type\": \"string\"\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"txID\": {\n            \"type\": \"string\"\n        },\n        \"txTime\": {\n            \"type\": \"string\"\n        },\n        \"account\": {\n            \"type\": \"string\"\n        },\n        \"amount\": {\n            \"type\": \"number\"\n        },\n        \"iouRef\": {\n            \"type\": \"string\"\n        }\n    }\n}"
        },
        "AccountLedgerMap": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"key\": {\n                \"type\": \"string\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"bank\": {\n                        \"type\": \"string\"\n                    },\n                    \"balance\": {\n                        \"type\": \"number\"\n                    },\n                    \"currency\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"key\": {\n                \"type\": \"string\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"bank\": {\n                        \"type\": \"string\"\n                    },\n                    \"balance\": {\n                        \"type\": \"number\"\n                    },\n                    \"currency\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}"
        },
        "TxLedgerMap": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"key\": {\n                \"type\": \"string\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"txID\": {\n                        \"type\": \"string\"\n                    },\n                    \"txTime\": {\n                        \"type\": \"string\"\n                    },\n                    \"account\": {\n                        \"type\": \"string\"\n                    },\n                    \"amount\": {\n                        \"type\": \"number\"\n                    },\n                    \"iouRef\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"key\": {\n                \"type\": \"string\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"txID\": {\n                        \"type\": \"string\"\n                    },\n                    \"txTime\": {\n                        \"type\": \"string\"\n                    },\n                    \"account\": {\n                        \"type\": \"string\"\n                    },\n                    \"amount\": {\n                        \"type\": \"number\"\n                    },\n                    \"iouRef\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}"
        },
        "IOUHistory": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"txID\": {\n                \"type\": \"string\"\n            },\n            \"txTime\": {\n                \"type\": \"string\"\n            },\n            \"isDeleted\": {\n                \"type\": \"boolean\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"issuer\": {\n                        \"type\": \"string\"\n                    },\n                    \"amount\": {\n                        \"type\": \"number\"\n                    },\n                    \"currency\": {\n                        \"type\": \"string\"\n                    },\n                    \"issueDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"owner\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"txID\": {\n                \"type\": \"string\"\n            },\n            \"txTime\": {\n                \"type\": \"string\"\n            },\n            \"isDeleted\": {\n                \"type\": \"boolean\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"issuer\": {\n                        \"type\": \"string\"\n                    },\n                    \"amount\": {\n                        \"type\": \"number\"\n                    },\n                    \"currency\": {\n                        \"type\": \"string\"\n                    },\n                    \"issueDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"owner\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}"
        },
        "IOULedgerMap": {
            "type": "json",
            "value": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"key\": {\n                \"type\": \"string\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"issuer\": {\n                        \"type\": \"string\"\n                    },\n                    \"amount\": {\n                        \"type\": \"number\"\n                    },\n                    \"currency\": {\n                        \"type\": \"string\"\n                    },\n                    \"issueDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"owner\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
            "fe_metadata": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"key\": {\n                \"type\": \"string\"\n            },\n            \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"issuer\": {\n                        \"type\": \"string\"\n                    },\n                    \"amount\": {\n                        \"type\": \"number\"\n                    },\n                    \"currency\": {\n                        \"type\": \"string\"\n                    },\n                    \"issueDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"owner\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}"
        }
    },
    "connections": {},
    "contrib": "W3sicmVmIjoiZ2l0aHViLmNvbS9USUJDT1NvZnR3YXJlL2RvdmV0YWlsLWNvbnRyaWIvaHlwZXJsZWRnZXItZmFicmljL2ZhYnJpYyIsInMzbG9jYXRpb24iOiJ7VVNFUklEfS9mYWJyaWMifSx7InJlZiI6ImdpdGh1Yi5jb20vcHJvamVjdC1mbG9nby9jb250cmliL2FjdGl2aXR5L2xvZyIsInMzbG9jYXRpb24iOiJ7VVNFUklEfS9EZWZhdWx0L2FjdGl2aXR5L2xvZyJ9LHsicmVmIjoiZ2l0aHViLmNvbS9wcm9qZWN0LWZsb2dvL2NvbnRyaWIvYWN0aXZpdHkvZXJyb3IiLCJzM2xvY2F0aW9uIjoie1VTRVJJRH0vRGVmYXVsdC9hY3Rpdml0eS9lcnJvciJ9XQ==",
    "fe_metadata": "UEsDBAoAAAAIAAoXVVGrqSRGFQAAABMAAAAIAAAAYXBwLmpzb26rViopykxPTy1yy8kvL1ayio6tBQBQSwECFAAKAAAACAAKF1VRq6kkRhUAAAATAAAACAAAAAAAAAAAAAAAAAAAAAAAYXBwLmpzb25QSwUGAAAAAAEAAQA2AAAAOwAAAAAA"
}
