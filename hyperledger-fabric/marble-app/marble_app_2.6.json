{
    "imports": [
        "github.com/project-flogo/flow",
        "github.com/project-flogo/contrib/activity/log",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/activity/get",
        "github.com/project-flogo/contrib/activity/error",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/activity/put",
        "github.com/project-flogo/contrib/activity/actreturn",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/activity/delete",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/activity/getrange",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/activity/getbycompositekey",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/activity/putall",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/activity/query",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/activity/gethistory",
        "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabric/trigger/transaction"
    ],
    "name": "marble_app",
    "description": " ",
    "version": "1.1.0",
    "type": "flogo:app",
    "appModel": "1.1.0",
    "feVersion": "2.6.0",
    "triggers": [
        {
            "ref": "#transaction",
            "name": "FabricTransaction1",
            "description": "create a new marble, store into chaincode state",
            "settings": {},
            "id": "FabricTransaction1",
            "handlers": [
                {
                    "description": "create a new marble, store into chaincode state",
                    "settings": {
                        "name": "initMarble",
                        "commonData": "",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:initMarble"
                        },
                        "input": {
                            "parameters": "=$.parameters"
                        },
                        "output": {
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "returnsDataType": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"name\": \"\",\n    \"color\": \"\",\n    \"size\": 0,\n    \"owner\": \"\"\n}"
                            }
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"name\": \"\",\n    \"color\": \"\",\n    \"size\": 0,\n    \"owner\": \"\"\n}"
                            }
                        }
                    }
                },
                {
                    "description": "read a marble from chancode state",
                    "settings": {
                        "name": "readMarble",
                        "commonData": "",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:readMarble"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "name": "=$.parameters.name"
                                }
                            }
                        },
                        "output": {
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "returnsDataType": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"name\": \"\",\n    \"color\": \"\",\n    \"size\": 0,\n    \"owner\": \"\"\n}"
                            }
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"name\": \"\"\n}"
                            }
                        }
                    }
                },
                {
                    "description": "remove a marble key/value pair from chaincode state",
                    "settings": {
                        "name": "delete",
                        "commonData": "",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:delete"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "name": "=$.parameters.name"
                                }
                            }
                        },
                        "output": {
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "returnsDataType": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"name\": \"\",\n    \"color\": \"\",\n    \"size\": 0,\n    \"owner\": \"\"\n}"
                            }
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"name\": \"\"\n}"
                            }
                        }
                    }
                },
                {
                    "description": "transfer a marble to a new owner",
                    "settings": {
                        "name": "transferMarble",
                        "commonData": "",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:transferMarble"
                        },
                        "input": {
                            "parameters": "=$.parameters"
                        },
                        "output": {
                            "returns": "=$.returns"
                        }
                    },
                    "reply": {
                        "returnsDataType": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"name\": \"\",\n    \"color\": \"\",\n    \"size\": 0,\n    \"owner\": \"\"\n}"
                            }
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"newOwner\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"name\": \"\",\n    \"newOwner\": \"\"\n}"
                            }
                        }
                    }
                },
                {
                    "description": "performs a range query based on the start and end keys provided",
                    "settings": {
                        "name": "getMarblesByRange",
                        "commonData": "",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:getMarblesByRange"
                        },
                        "input": {
                            "parameters": "=$.parameters"
                        },
                        "output": {
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns)": {
                                        "key": "=$.key",
                                        "value": "=$.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "returnsDataType": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
                                "fe_metadata": "[{\n    \"key\": \"\",\n    \"value\": {\n        \"name\": \"\",\n        \"color\": \"\",\n        \"size\": 0,\n        \"owner\": \"\"\n    }\n}]"
                            }
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"startKey\":{\"type\":\"string\"},\"endKey\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"startKey\": \"\",\n    \"endKey\": \"\"\n}"
                            }
                        }
                    }
                },
                {
                    "description": "transfer marbles of a given color to a new owner",
                    "settings": {
                        "name": "transferMarblesBasedOnColor",
                        "commonData": "",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:transferMarblesBasedOnColor"
                        },
                        "input": {
                            "parameters": "=$.parameters"
                        },
                        "output": {
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns)": {
                                        "key": "=$.key",
                                        "value": "=$.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "returnsDataType": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
                                "fe_metadata": "[{\n    \"key\": \"\",\n    \"value\": {\n        \"name\": \"\",\n        \"color\": \"\",\n        \"size\": 0,\n        \"owner\": \"\"\n    }\n}]"
                            }
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"color\":{\"type\":\"string\"},\"newOwner\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"color\": \"\",\n    \"newOwner\": \"\"\n}"
                            }
                        }
                    }
                },
                {
                    "description": "queries for marbles based on a specified owner",
                    "settings": {
                        "name": "queryMarblesByOwner",
                        "commonData": "",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:queryMarblesByOwner"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "owner": "=$.parameters.owner"
                                }
                            }
                        },
                        "output": {
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns)": {
                                        "key": "=$.key",
                                        "value": "=$.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "returnsDataType": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
                                "fe_metadata": "[{\n    \"key\": \"\",\n    \"value\": {\n        \"name\": \"\",\n        \"color\": \"\",\n        \"size\": 0,\n        \"owner\": \"\"\n    }\n}]"
                            }
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"owner\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"owner\": \"\"\n}"
                            }
                        }
                    }
                },
                {
                    "description": "uses a query string to perform a query for marbles",
                    "settings": {
                        "name": "queryMarbles",
                        "commonData": "",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:queryMarbles"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "query": "=$.parameters.query"
                                }
                            }
                        },
                        "output": {
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns)": {
                                        "key": "=$.key",
                                        "value": "=$.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "returnsDataType": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
                                "fe_metadata": "[{\n    \"key\": \"\",\n    \"value\": {\n        \"name\": \"\",\n        \"color\": \"\",\n        \"size\": 0,\n        \"owner\": \"\"\n    }\n}]"
                            }
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"query\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"query\": \"\"\n}"
                            }
                        }
                    }
                },
                {
                    "description": "performs a range query based on the start and end key, page size, and a bookmark",
                    "settings": {
                        "name": "getMarblesByRangeWithPagination",
                        "commonData": "",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:getMarblesByRangeWithPagination"
                        },
                        "input": {
                            "parameters": "=$.parameters"
                        },
                        "output": {
                            "returns": {
                                "mapping": {
                                    "count": "=$.returns.count",
                                    "bookmark": "=$.returns.bookmark",
                                    "marbles": {
                                        "@foreach($.returns.marbles)": {
                                            "key": "=$.key",
                                            "value": "=$.value"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "returnsDataType": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"count\":{\"type\":\"number\"},\"bookmark\":{\"type\":\"string\"},\"marbles\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}}}",
                                "fe_metadata": "{\n    \"count\": 0,\n    \"bookmark\": \"\",\n    \"marbles\": [{\n        \"key\": \"\",\n        \"value\": {\n            \"name\": \"\",\n            \"color\": \"\",\n            \"size\": 0,\n            \"owner\": \"\"\n        }\n    }]\n}"
                            }
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"startKey\":{\"type\":\"string\"},\"endKey\":{\"type\":\"string\"},\"pageSize\":{\"type\":\"number\"},\"bookmark\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"startKey\": \"\",\n    \"endKey\": \"\",\n    \"pageSize\": 0,\n    \"bookmark\": \"\"\n}"
                            }
                        }
                    }
                },
                {
                    "description": "uses a query string, page size and a bookmark too perform a query for marbles",
                    "settings": {
                        "name": "queryMarblesWithPagination",
                        "commonData": "",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:queryMarblesWithPagination"
                        },
                        "input": {
                            "parameters": "=$.parameters"
                        },
                        "output": {
                            "returns": {
                                "mapping": {
                                    "count": "=$.returns.count",
                                    "bookmark": "=$.returns.bookmark",
                                    "marbles": {
                                        "@foreach($.returns.marbles)": {
                                            "key": "=$.key",
                                            "value": "=$.value"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "returnsDataType": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"count\":{\"type\":\"number\"},\"bookmark\":{\"type\":\"string\"},\"marbles\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}}}",
                                "fe_metadata": "{\n    \"count\": 0,\n    \"bookmark\": \"\",\n    \"marbles\": [{\n        \"key\": \"\",\n        \"value\": {\n            \"name\": \"\",\n            \"color\": \"\",\n            \"size\": 0,\n            \"owner\": \"\"\n        }\n    }]\n}"
                            }
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"query\":{\"type\":\"string\"},\"pageSize\":{\"type\":\"number\"},\"bookmark\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"query\": \"\",\n    \"pageSize\": 0,\n    \"bookmark\": \"\"\n}"
                            }
                        }
                    }
                },
                {
                    "description": "retrieve history of a specified marble",
                    "settings": {
                        "name": "getHistoryForMarble",
                        "commonData": "",
                        "validation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:getHistoryForMarble"
                        },
                        "input": {
                            "parameters": {
                                "mapping": {
                                    "name": "=$.parameters.name"
                                }
                            }
                        },
                        "output": {
                            "returns": {
                                "mapping": {
                                    "@foreach($.returns)": {
                                        "txID": "=$.txID",
                                        "txTime": "=$.txTime",
                                        "isDeleted": "=$.isDeleted",
                                        "value": "=$.value"
                                    }
                                }
                            }
                        }
                    },
                    "reply": {
                        "returnsDataType": ""
                    },
                    "schemas": {
                        "reply": {
                            "returns": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"isDeleted\":{\"type\":\"boolean\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
                                "fe_metadata": "[{\r    \"txID\": \"string\",\r    \"txTime\": \"\",\r    \"isDeleted\": false,\r    \"value\": {\r        \"name\": \"\",\r        \"color\": \"\",\r        \"size\": 0,\r        \"owner\": \"\"        \r    }\r}]"
                            }
                        },
                        "output": {
                            "parameters": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}}}",
                                "fe_metadata": "{\n    \"name\": \"\"\n}"
                            }
                        }
                    }
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:initMarble",
            "data": {
                "name": "initMarble",
                "description": "create a new marble, store into chaincode state",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "Get",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Get",
                        "to": "LogMessage1",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogMessage1",
                        "to": "ThrowError",
                        "type": "expression",
                        "value": "$activity[Get].code == 200"
                    },
                    {
                        "id": 4,
                        "from": "LogMessage1",
                        "to": "Put",
                        "type": "expression",
                        "value": "$activity[Get].code == 300"
                    },
                    {
                        "id": 5,
                        "from": "Put",
                        "to": "LogMessage2",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "LogMessage2",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[initMarble] Get marble: \", $flow.parameters.name)",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "Get",
                        "name": "Get",
                        "activity": {
                            "ref": "#get",
                            "input": {
                                "key": "=$flow.parameters.name",
                                "commonData": "",
                                "isPrivate": false,
                                "collection": ""
                            },
                            "schemas": {
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"name\": \"\",\n    \"color\": \"\",\n    \"size\": 0,\n    \"owner\": \"\"\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage1",
                        "name": "LogMessage1",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GET: \", $activity[Get].message)",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"Marble already exists: \", $activity[Get].key)"
                            }
                        }
                    },
                    {
                        "id": "Put",
                        "name": "Put",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=$flow.parameters.name",
                                "commonData": "",
                                "isPrivate": false,
                                "collection": "",
                                "compositeKeys": "{\n    \"color~name\": [\"color\", \"name\"]\n}",
                                "data": {
                                    "mapping": {
                                        "docType": "marble",
                                        "name": "=$flow.parameters.name",
                                        "color": "=$flow.parameters.color",
                                        "size": "=$flow.parameters.size",
                                        "owner": "=$flow.parameters.owner"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"docType\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"docType\": \"\",\n    \"name\": \"\",\n    \"color\": \"\",\n    \"size\": 0,\n    \"owner\": \"\"\n}"
                                    }
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"docType\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"docType\": \"\",\n    \"name\": \"\",\n    \"color\": \"\",\n    \"size\": 0,\n    \"owner\": \"\"\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage2",
                        "name": "LogMessage2",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"PUT: \", $activity[Put].message)"
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "returns": {
                                        "mapping": {
                                            "name": "=$activity[Put].result.name",
                                            "color": "=$activity[Put].result.color",
                                            "size": "=$activity[Put].result.size",
                                            "owner": "=$activity[Put].result.owner"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:readMarble",
            "data": {
                "name": "readMarble",
                "description": "read a marble from chancode state",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "Get",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Get",
                        "to": "LogMessage1",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogMessage1",
                        "to": "Return",
                        "type": "expression",
                        "value": "$activity[Get].code == 200"
                    },
                    {
                        "id": 4,
                        "from": "LogMessage1",
                        "to": "ThrowError",
                        "type": "expression",
                        "value": "$activity[Get].code != 200"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[readMarble] \", $flow.parameters.name)",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "Get",
                        "name": "Get",
                        "activity": {
                            "ref": "#get",
                            "input": {
                                "key": "=$flow.parameters.name",
                                "commonData": "",
                                "isPrivate": false,
                                "collection": ""
                            },
                            "schemas": {
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"name\": \"\",\n    \"color\": \"\",\n    \"size\": 0,\n    \"owner\": \"\"\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage1",
                        "name": "LogMessage1",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GET: \", $activity[Get].message)",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "returns": {
                                        "mapping": {
                                            "name": "=$activity[Get].result.name",
                                            "color": "=$activity[Get].result.color",
                                            "size": "=$activity[Get].result.size",
                                            "owner": "=$activity[Get].result.owner"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"Cannot find marble \", $flow.parameters.name, \": \", $activity[Get].message)"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"name\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:delete",
            "data": {
                "name": "delete",
                "description": "remove a marble key/value pair from chaincode state",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "Get",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Get",
                        "to": "LogMessage1",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogMessage1",
                        "to": "ThrowError",
                        "type": "expression",
                        "value": "$activity[Get].code != 200"
                    },
                    {
                        "id": 4,
                        "from": "LogMessage1",
                        "to": "Delete",
                        "type": "expression",
                        "value": "$activity[Get].code == 200"
                    },
                    {
                        "id": 5,
                        "from": "Delete",
                        "to": "LogMessage2",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "LogMessage2",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[delete] \", $flow.parameters.name)",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "Get",
                        "name": "Get",
                        "activity": {
                            "ref": "#get",
                            "input": {
                                "key": "=$flow.parameters.name",
                                "commonData": "",
                                "isPrivate": false,
                                "collection": ""
                            },
                            "schemas": {
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"name\": \"\",\n    \"color\": \"\",\n    \"size\": 0,\n    \"owner\": \"\"\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage1",
                        "name": "LogMessage1",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GET: \", $activity[Get].message)",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"Failed to find marble \", $flow.parameters.name, \": \", $activity[Get].message)"
                            }
                        }
                    },
                    {
                        "id": "Delete",
                        "name": "Delete",
                        "activity": {
                            "ref": "#delete",
                            "input": {
                                "key": "=$activity[Get].key",
                                "commonData": "",
                                "isPrivate": false,
                                "collection": "",
                                "keysOnly": false,
                                "compositeKeys": "{\n    \"color~name\": [\"color\", \"name\"]\n}"
                            },
                            "schemas": {
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"name\": \"\",\n    \"color\": \"\",\n    \"size\": 0,\n    \"owner\": \"\"\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage2",
                        "name": "LogMessage2",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"DELETE: \", $activity[Delete].message)"
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "returns": {
                                        "mapping": {
                                            "name": "=$activity[Delete].result.name",
                                            "color": "=$activity[Delete].result.color",
                                            "size": "=$activity[Delete].result.size",
                                            "owner": "=$activity[Delete].result.owner"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"name\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:transferMarble",
            "data": {
                "name": "transferMarble",
                "description": "transfer a marble to a new owner",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "Get",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Get",
                        "to": "LogMessage1",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogMessage1",
                        "to": "ThrowError",
                        "type": "expression",
                        "value": "$activity[Get].code != 200"
                    },
                    {
                        "id": 4,
                        "from": "LogMessage1",
                        "to": "Put",
                        "type": "expression",
                        "value": "$activity[Get].code == 200"
                    },
                    {
                        "id": 5,
                        "from": "Put",
                        "to": "LogMessage2",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "LogMessage2",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[transferMarble] \", $flow.parameters.name, \" new owner: \", $flow.parameters.newOwner)",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "Get",
                        "name": "Get",
                        "activity": {
                            "ref": "#get",
                            "input": {
                                "key": "=$flow.parameters.name",
                                "commonData": "",
                                "isPrivate": false,
                                "collection": ""
                            },
                            "schemas": {
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"docType\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"docType\": \"\",\n    \"name\": \"\",\n    \"color\": \"\",\n    \"size\": 0,\n    \"owner\": \"\"\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage1",
                        "name": "LogMessage1",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GET: \", $activity[Get].message)",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"Failed to find marble \", $flow.parameters.name, \": \", $activity[Get].message)"
                            }
                        }
                    },
                    {
                        "id": "Put",
                        "name": "Put",
                        "activity": {
                            "ref": "#put",
                            "input": {
                                "key": "=$activity[Get].key",
                                "commonData": "",
                                "isPrivate": false,
                                "collection": "",
                                "compositeKeys": "",
                                "data": {
                                    "mapping": {
                                        "docType": "=$activity[Get].result.docType",
                                        "name": "=$activity[Get].result.name",
                                        "color": "=$activity[Get].result.color",
                                        "size": "=$activity[Get].result.size",
                                        "owner": "=$flow.parameters.newOwner"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"docType\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"docType\": \"\",\n    \"name\": \"\",\n    \"color\": \"\",\n    \"size\": 0,\n    \"owner\": \"\"\n}"
                                    }
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"docType\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
                                        "fe_metadata": "{\n    \"docType\": \"\",\n    \"name\": \"\",\n    \"color\": \"\",\n    \"size\": 0,\n    \"owner\": \"\"\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage2",
                        "name": "LogMessage2",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"PUT: \", $activity[Put].message)"
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "returns": {
                                        "mapping": {
                                            "name": "=$activity[Put].result.name",
                                            "color": "=$activity[Put].result.color",
                                            "size": "=$activity[Put].result.size",
                                            "owner": "=$activity[Put].result.owner"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"name\":{\"type\":\"string\"},\"newOwner\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"newOwner\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:getMarblesByRange",
            "data": {
                "name": "getMarblesByRange",
                "description": "performs a range query based on the start and end keys provided",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "GetRange",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "GetRange",
                        "to": "LogMessage1",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogMessage1",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[getMarblesRange] in [\", $flow.parameters.startKey, \", \", $flow.parameters.endKey, \")\")"
                            }
                        }
                    },
                    {
                        "id": "GetRange",
                        "name": "GetRange",
                        "activity": {
                            "ref": "#getrange",
                            "input": {
                                "startKey": "=$flow.parameters.startKey",
                                "endKey": "=$flow.parameters.endKey",
                                "usePagination": false,
                                "start": "",
                                "commonData": "",
                                "isPrivate": false,
                                "collection": ""
                            },
                            "schemas": {
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "[{\n    \"key\": \"\",\n    \"value\": {\n        \"name\": \"\",\n        \"color\": \"\",\n        \"size\": 0,\n        \"owner\": \"\"\n    }\n}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "LogMessage1",
                        "name": "LogMessage1",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GET_RANGE: \", $activity[GetRange].message)"
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[GetRange].result)": {
                                                "key": "=$.key",
                                                "value": "=$.value"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"startKey\":{\"type\":\"string\"},\"endKey\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"startKey\":{\"type\":\"string\"},\"endKey\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:transferMarblesBasedOnColor",
            "data": {
                "name": "transferMarblesBasedOnColor",
                "description": "transfer marbles of a given color to a new owner",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "GetByCompositeKey",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "GetByCompositeKey",
                        "to": "Log1",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "Log1",
                        "to": "PutAll",
                        "type": "expression",
                        "value": "$activity[GetByCompositeKey].code == 200 && $activity[GetByCompositeKey].count > 0"
                    },
                    {
                        "id": 4,
                        "from": "PutAll",
                        "to": "Log2",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "Log2",
                        "to": "Return",
                        "type": "expression",
                        "value": "$activity[PutAll].count > 0"
                    },
                    {
                        "id": 6,
                        "from": "Log2",
                        "to": "ThrowError",
                        "type": "expression",
                        "value": "$activity[PutAll].count == 0"
                    },
                    {
                        "id": 7,
                        "from": "Log1",
                        "to": "ThrowError1",
                        "type": "expression",
                        "value": "$activity[GetByCompositeKey].code != 200 || $activity[GetByCompositeKey].count == 0"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[transferMarblesBasedOnColor] \", $flow.parameters.color, \" new owner: \", $flow.parameters.newOwner)",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "GetByCompositeKey",
                        "name": "GetByCompositeKey",
                        "activity": {
                            "ref": "#getbycompositekey",
                            "input": {
                                "keyName": "color~name",
                                "usePagination": false,
                                "start": "",
                                "commonData": "",
                                "isPrivate": false,
                                "collection": "",
                                "attributes": {
                                    "mapping": {
                                        "color": "=$flow.parameters.color"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "attributes": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"color\":{\"type\":\"string\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"color\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true}]"
                                    }
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"docType\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "[{\n    \"key\": \"\",\n    \"value\": {\n        \"docType\": \"\",\n        \"name\": \"\",\n        \"color\": \"\",\n        \"size\": 0,\n        \"owner\": \"\"\n    }\n}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Log1",
                        "name": "Log1",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GET_BY_COMPOSITE_KEY: \", $activity[GetByCompositeKey].message)",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "PutAll",
                        "name": "PutAll",
                        "activity": {
                            "ref": "#putall",
                            "input": {
                                "commonData": "",
                                "isPrivate": false,
                                "collection": "",
                                "compositeKeys": "",
                                "data": {
                                    "mapping": {
                                        "@foreach($activity[GetByCompositeKey].result)": {
                                            "key": "=$.key",
                                            "value": {
                                                "docType": "=$.value.docType",
                                                "name": "=$.value.name",
                                                "color": "=$.value.color",
                                                "size": "=$.value.size",
                                                "owner": "=$flow.parameters.newOwner"
                                            }
                                        }
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "data": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"docType\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "[{\n    \"key\": \"\",\n    \"value\": {\n        \"docType\": \"\",\n        \"name\": \"\",\n        \"color\": \"\",\n        \"size\": 0,\n        \"owner\": \"\"\n    }\n}]"
                                    }
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"docType\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "[{\n    \"key\": \"\",\n    \"value\": {\n        \"docType\": \"\",\n        \"name\": \"\",\n        \"color\": \"\",\n        \"size\": 0,\n        \"owner\": \"\"\n    }\n}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Log2",
                        "name": "Log2",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"PUT_ALL: count: \", $activity[PutAll].message)",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[PutAll].result)": {
                                                "key": "=$.key",
                                                "value": {
                                                    "name": "=$.value.name",
                                                    "color": "=$.value.color",
                                                    "size": "=$.value.size",
                                                    "owner": "=$.value.owner"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "ThrowError",
                        "name": "ThrowError",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"No marble transferred: \", $activity[PutAll].message)"
                            }
                        }
                    },
                    {
                        "id": "ThrowError1",
                        "name": "ThrowError1",
                        "activity": {
                            "ref": "#error",
                            "input": {
                                "message": "=string.concat(\"Marble does not exists for color: \", $flow.parameters.color)"
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"color\":{\"type\":\"string\"},\"newOwner\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction6\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"color\":{\"type\":\"string\"},\"newOwner\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:queryMarblesByOwner",
            "data": {
                "name": "queryMarblesByOwner",
                "description": "queries for marbles based on a specified owner",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "Query",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Query",
                        "to": "Log1",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "Log1",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[queryMarblesByOwner] \", $flow.parameters.owner)",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "Query",
                        "name": "Query",
                        "activity": {
                            "ref": "#query",
                            "input": {
                                "query": "{\n    \"selector\": {\n        \"docType\": \"marble\",\n        \"owner\": \"$owner\"\n    }\n}",
                                "usePagination": false,
                                "start": "",
                                "commonData": "",
                                "isPrivate": false,
                                "collection": "",
                                "queryParams": {
                                    "mapping": {
                                        "owner": "=$flow.parameters.owner"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "queryParams": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"owner\":{\"type\":\"string\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"owner\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true}]"
                                    }
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"docType\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "[{\n    \"key\": \"\",\n    \"value\": {\n        \"docType\": \"\",\n        \"name\": \"\",\n        \"color\": \"\",\n        \"size\": 0,\n        \"owner\": \"\"\n    }\n}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Log1",
                        "name": "Log1",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"QUERY: \", $activity[Query].message)",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[Query].result)": {
                                                "key": "=$.key",
                                                "value": {
                                                    "name": "=$.value.name",
                                                    "color": "=$.value.color",
                                                    "size": "=$.value.size",
                                                    "owner": "=$.value.owner"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"owner\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction7\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"owner\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:queryMarbles",
            "data": {
                "name": "queryMarbles",
                "description": "uses a query string to perform a query for marbles",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "Query",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Query",
                        "to": "Log1",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "Log1",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[queryMarbles] \", $flow.parameters.query)",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "Query",
                        "name": "Query",
                        "activity": {
                            "ref": "#query",
                            "input": {
                                "query": "\"$query\"",
                                "usePagination": false,
                                "start": "",
                                "commonData": "",
                                "isPrivate": false,
                                "collection": "",
                                "queryParams": {
                                    "mapping": {
                                        "query": "=$flow.parameters.query"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "queryParams": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"query\":{\"type\":\"string\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"query\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true}]"
                                    }
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"docType\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "[{\n    \"key\": \"\",\n    \"value\": {\n        \"docType\": \"\",\n        \"name\": \"\",\n        \"color\": \"\",\n        \"size\": 0,\n        \"owner\": \"\"\n    }\n}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Log1",
                        "name": "Log1",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"QUERY: \", $activity[Query].message)",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[Query].result)": {
                                                "key": "=$.key",
                                                "value": {
                                                    "name": "=$.value.name",
                                                    "color": "=$.value.color",
                                                    "size": "=$.value.size",
                                                    "owner": "=$.value.owner"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"query\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction8\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"query\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:getMarblesByRangeWithPagination",
            "data": {
                "name": "getMarblesByRangeWithPagination",
                "description": "performs a range query based on the start and end key, page size, and a bookmark",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "GetRange",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "GetRange",
                        "to": "Log1",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "Log1",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[getMarblesByRangeWithPagination] in [\", $flow.parameters.startKey, \", \", $flow.parameters.endKey, \")\")",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "GetRange",
                        "name": "GetRange",
                        "activity": {
                            "ref": "#getrange",
                            "input": {
                                "startKey": "=$flow.parameters.startKey",
                                "endKey": "=$flow.parameters.endKey",
                                "usePagination": true,
                                "pageSize": "=$flow.parameters.pageSize",
                                "start": "=$flow.parameters.bookmark",
                                "commonData": "",
                                "isPrivate": false,
                                "collection": ""
                            },
                            "schemas": {
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "[{\n    \"key\": \"\",\n    \"value\": {\n        \"name\": \"\",\n        \"color\": \"\",\n        \"size\": 0,\n        \"owner\": \"\"\n    }\n}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Log1",
                        "name": "Log1",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GET_RANGE: \", $activity[GetRange].message)",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "returns": {
                                        "mapping": {
                                            "count": "=$activity[GetRange].count",
                                            "bookmark": "=$activity[GetRange].bookmark",
                                            "marbles": {
                                                "@foreach($activity[GetRange].result)": {
                                                    "key": "=$.key",
                                                    "value": "=$.value"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"startKey\":{\"type\":\"string\"},\"endKey\":{\"type\":\"string\"},\"pageSize\":{\"type\":\"number\"},\"bookmark\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"count\":{\"type\":\"number\"},\"bookmark\":{\"type\":\"string\"},\"marbles\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction9\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"startKey\":{\"type\":\"string\"},\"endKey\":{\"type\":\"string\"},\"pageSize\":{\"type\":\"number\"},\"bookmark\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"count\":{\"type\":\"number\"},\"bookmark\":{\"type\":\"string\"},\"marbles\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:queryMarblesWithPagination",
            "data": {
                "name": "queryMarblesWithPagination",
                "description": "uses a query string, page size and a bookmark too perform a query for marbles",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "Query",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "Query",
                        "to": "Log1",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "Log1",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[queryMarblesWithPagination] \", $flow.parameters.query)",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "Query",
                        "name": "Query",
                        "activity": {
                            "ref": "#query",
                            "input": {
                                "query": "\"$query\"",
                                "usePagination": true,
                                "pageSize": "=$flow.parameters.pageSize",
                                "start": "=$flow.parameters.bookmark",
                                "commonData": "",
                                "isPrivate": false,
                                "collection": "",
                                "queryParams": {
                                    "mapping": {
                                        "query": "=$flow.parameters.query"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "queryParams": {
                                        "type": "json",
                                        "value": "{\"type\":\"object\",\"properties\":{\"query\":{\"type\":\"string\"}},\"required\":[]}",
                                        "fe_metadata": "[{\"parameterName\":\"query\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"isEditable\":true}]"
                                    }
                                },
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "[{\n    \"key\": \"\",\n    \"value\": {\n        \"name\": \"\",\n        \"color\": \"\",\n        \"size\": 0,\n        \"owner\": \"\"\n    }\n}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Log1",
                        "name": "Log1",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"QUERY: \", $activity[Query].message)",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "returns": {
                                        "mapping": {
                                            "count": "=$activity[Query].count",
                                            "bookmark": "=$activity[Query].bookmark",
                                            "marbles": {
                                                "@foreach($activity[Query].result)": {
                                                    "key": "=$.key",
                                                    "value": "=$.value"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"query\":{\"type\":\"string\"},\"pageSize\":{\"type\":\"number\"},\"bookmark\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "returns",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"count\":{\"type\":\"number\"},\"bookmark\":{\"type\":\"string\"},\"marbles\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction10\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"query\":{\"type\":\"string\"},\"pageSize\":{\"type\":\"number\"},\"bookmark\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"count\":{\"type\":\"number\"},\"bookmark\":{\"type\":\"string\"},\"marbles\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}}}},\"required\":[]}"
                    }
                }
            }
        },
        {
            "id": "flow:getHistoryForMarble",
            "data": {
                "name": "getHistoryForMarble",
                "description": "retrieve history of a specified marble",
                "links": [
                    {
                        "id": 1,
                        "from": "Log",
                        "to": "GetHistory",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "GetHistory",
                        "to": "Log1",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "Log1",
                        "to": "Return",
                        "type": "default"
                    }
                ],
                "tasks": [
                    {
                        "id": "Log",
                        "name": "Log",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"[getHistoryForMarble] \", $flow.parameters.name)",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "GetHistory",
                        "name": "GetHistory",
                        "activity": {
                            "ref": "#gethistory",
                            "input": {
                                "key": "=$flow.parameters.name",
                                "commonData": ""
                            },
                            "schemas": {
                                "output": {
                                    "result": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"isDeleted\":{\"type\":\"boolean\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
                                        "fe_metadata": "[{\r    \"txID\": \"string\",\r    \"txTime\": \"\",\r    \"isDeleted\": false,\r    \"value\": {\r        \"name\": \"\",\r        \"color\": \"\",\r        \"size\": 0,\r        \"owner\": \"\"        \r    }\r}]"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Log1",
                        "name": "Log1",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "message": "=string.concat(\"GET_HISTORY: \", $activity[GetHistory].message)",
                                "addDetails": false
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "returns": {
                                        "mapping": {
                                            "@foreach($activity[GetHistory].result)": {
                                                "txID": "=$.txID",
                                                "txTime": "=$.txTime",
                                                "isDeleted": "=$.isDeleted",
                                                "value": "=$.value"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "parameters",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"name\":{\"type\":\"string\"}}"
                            }
                        },
                        {
                            "name": "txID",
                            "type": "string"
                        },
                        {
                            "name": "txTime",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "returns",
                            "type": "array",
                            "schema": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"isDeleted\":{\"type\":\"boolean\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"FabricTransaction11\",\"properties\":{\"parameters\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}}},\"txID\":{\"type\":\"string\",\"required\":false},\"txTime\":{\"type\":\"string\",\"required\":false}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"returns\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"isDeleted\":{\"type\":\"boolean\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}},\"required\":[]}"
                    }
                }
            }
        }
    ],
    "properties": [],
    "contrib": "W3sicmVmIjoiZ2l0aHViLmNvbS9wcm9qZWN0LWZsb2dvL2NvbnRyaWIvYWN0aXZpdHkvbG9nIiwiczNsb2NhdGlvbiI6IntVU0VSSUR9L0RlZmF1bHQvYWN0aXZpdHkvbG9nIn0seyJyZWYiOiJnaXRodWIuY29tL1RJQkNPU29mdHdhcmUvZG92ZXRhaWwtY29udHJpYi9oeXBlcmxlZGdlci1mYWJyaWMvZmFicmljIiwiczNsb2NhdGlvbiI6IntVU0VSSUR9L2ZhYnJpYyJ9LHsicmVmIjoiZ2l0aHViLmNvbS9wcm9qZWN0LWZsb2dvL2NvbnRyaWIvYWN0aXZpdHkvZXJyb3IiLCJzM2xvY2F0aW9uIjoie1VTRVJJRH0vRGVmYXVsdC9hY3Rpdml0eS9lcnJvciJ9XQ==",
    "fe_metadata": "UEsDBAoAAAAIAKOVv06rqSRGFQAAABMAAAAIAAAAYXBwLmpzb26rViopykxPTy1yy8kvL1ayio6tBQBQSwECFAAKAAAACACjlb9Oq6kkRhUAAAATAAAACAAAAAAAAAAAAAAAAAAAAAAAYXBwLmpzb25QSwUGAAAAAAEAAQA2AAAAOwAAAAAA"
}