{
 "name": "marble_client_app",
 "description": " ",
 "version": "1.0.0",
 "type": "flogo:app",
 "appModel": "1.0.0",
 "resources": [
  {
   "id": "flow:Create_Marble",
   "data": {
    "name": "Create Marble",
    "description": "Create a marble",
    "tasks": [
     {
      "id": "LogMessage",
      "name": "LogMessage",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"[Create Marble] {\", $flow.content.name, \", \", $flow.content.color, \", \", $flow.content.owner, \"}\")"
         }
        ]
       }
      }
     },
     {
      "id": "FabricRequest",
      "name": "FabricRequest",
      "activity": {
       "ref": "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabclient/activity/fabrequest",
       "settings": {},
       "input": {
        "connectionName": {
         "id": "d9901600-6764-11e9-b14f-9d404c0e7465",
         "type": "flogo:connector",
         "version": "1.0.0",
         "name": "fabclient-connector",
         "inputMappings": {},
         "outputMappings": {},
         "iteratorMappings": {},
         "title": "Fabric Connector",
         "description": "Fabric Connection",
         "ref": "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabclient/connector/fabconnector",
         "settings": [
          {
           "name": "name",
           "description": "Unique name of the Fabric network connection",
           "type": "string",
           "required": true,
           "display": {
            "name": "Name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "local-first-network"
          },
          {
           "name": "description",
           "description": "Describe the Fabric network connection",
           "type": "string",
           "required": false,
           "display": {
            "name": "Description",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "Fabric sample first-network running on localhost"
          },
          {
           "name": "config",
           "type": "string",
           "required": true,
           "display": {
            "name": "Network configure file",
            "description": "Select the configuration file for the client and Fabric network",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "config_test.yaml",
            "content": "data:application/octet-stream;base64,"
           }
          },
          {
           "name": "entityMatcher",
           "type": "string",
           "required": false,
           "display": {
            "name": "Connection entity matcher file",
            "description": "Select the entity matcher file for overriding Fabric node URLs using pattern matching",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "local_entity_matchers.yaml",
            "content": "data:application/octet-stream;base64,IwojIENvcHlyaWdodCBTZWN1cmVLZXkgVGVjaG5vbG9naWVzIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KIwojIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCiMKIwojIFRoZSBuZXR3b3JrIGNvbm5lY3Rpb24gcHJvZmlsZSBwcm92aWRlcyBjbGllbnQgYXBwbGljYXRpb25zIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdGFyZ2V0CiMgYmxvY2tjaGFpbiBuZXR3b3JrIHRoYXQgYXJlIG5lY2Vzc2FyeSBmb3IgdGhlIGFwcGxpY2F0aW9ucyB0byBpbnRlcmFjdCB3aXRoIGl0LiBUaGVzZSBhcmUgYWxsCiMga25vd2xlZGdlIHRoYXQgbXVzdCBiZSBhY3F1aXJlZCBmcm9tIG91dC1vZi1iYW5kIHNvdXJjZXMuIFRoaXMgZmlsZSBwcm92aWRlcyBzdWNoIGEgc291cmNlLgojCgojIEVudGl0eU1hdGNoZXJzIGVuYWJsZSBzdWJzdGl0dXRpb24gb2YgbmV0d29yayBob3N0bmFtZXMgd2l0aCBzdGF0aWMgY29uZmlndXJhdGlvbnMKICMgc28gdGhhdCBwcm9wZXJ0aWVzIGNhbiBiZSBtYXBwZWQuIFJlZ2V4IGNhbiBiZSB1c2VkIGZvciB0aGlzIHB1cnBvc2UKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGJlIGVtcHR5IHdoaWNoIG1lYW5zIHRoZSBzYW1lIG5ldHdvcmsgaG9zdG5hbWUgd2lsbCBiZSB1c2VkCiMgVXJsU3Vic3RpdHV0aW9uRXhwIGNhbiBiZSBnaXZlbiBzYW1lIGFzIG1hcHBlZCBwZWVyIHVybCwgc28gdGhhdCBtYXBwZWQgcGVlciB1cmwgY2FuIGJlIHVzZWQKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGhhdmUgZ29sYW5nIHJlZ2V4IG1hdGNoZXJzIGxpa2UgJHsxfS5leGFtcGxlLiR7Mn06JHszfSBmb3IgcGF0dGVybgogIyBsaWtlIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNCB3aGljaCBjb252ZXJ0cyBwZWVyMC5vcmcxLmV4YW1wbGUuY29tIHRvIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNAojIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwIGZvbGxvdyBpbiB0aGUgc2FtZSBsaW5lcyBhcwogIyBTdWJzdGl0dXRpb25FeHAgZm9yIHRoZSBmaWVsZHMgZ3ByY09wdGlvbnMuc3NsLXRhcmdldC1uYW1lLW92ZXJyaWRlIHJlc3BlY3RpdmVseQojIEluIGFueSBjYXNlIG1hcHBlZEhvc3QncyBjb25maWcgd2lsbCBiZSB1c2VkLCBzbyBtYXBwZWQgaG9zdCBjYW5ub3QgYmUgZW1wdHksIGlmIGVudGl0eU1hdGNoZXJzIGFyZSB1c2VkCmVudGl0eU1hdGNoZXJzOgogIHBlZXI6CiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo3MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo4MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDoxMDA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjEub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcxLmV4YW1wbGUuKFx3Kyk6KFxkKykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6JHsyfQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogJHsxfS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6ICR7MX0ub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMi5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OiR7Mn0KICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6ICR7MX0ub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiAkezF9Lm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjcwNTEKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKTo4MDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjgwNTEKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogcGVlcjEub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kyk6OTA1MQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjEwMDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjEwMDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzIuZXhhbXBsZS5jb20KCiAgb3JkZXJlcjoKCiAgICAtIHBhdHRlcm46IChcdyspLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogb3JkZXJlci5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBvcmRlcmVyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjcwNTAKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IG9yZGVyZXIuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQoKICBjZXJ0aWZpY2F0ZUF1dGhvcml0eToKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMS5leGFtcGxlLihcdyspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogaHR0cHM6Ly9sb2NhbGhvc3Q6NzA1NAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogY2Eub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBjYS5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcyLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBodHRwczovL2xvY2FsaG9zdDo4MDU0CiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBjYS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IGNhLm9yZzIuZXhhbXBsZS5jb20="
           }
          },
          {
           "name": "channelID",
           "type": "string",
           "required": true,
           "display": {
            "name": "Channel ID",
            "description": "Channel ID",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "mychannel"
          }
         ],
         "outputs": [],
         "inputs": [],
         "handler": {
          "settings": []
         },
         "reply": [],
         "s3Prefix": "flogo",
         "key": "flogo/fabclient/connector/fabconnector/connector.json",
         "display": {
          "category": "fabclient",
          "description": "Fabric Connection",
          "visible": true,
          "smallIcon": "ic-fabconnector@2x.png",
          "largeIcon": "ic-fabconnector@3x.png"
         },
         "actions": [
          {
           "name": "Save Connector",
           "display": {
            "readonly": false,
            "valid": true,
            "visible": true
           }
          }
         ],
         "feature": {},
         "propertyMap": {},
         "keyfield": "name",
         "isValid": true,
         "lastUpdatedTime": 1556201845596,
         "createdTime": 1556201845596,
         "user": "flogo",
         "subscriptionId": "flogo_sbsc",
         "connectorName": " ",
         "connectorDescription": " "
        },
        "requestType": "invoke",
        "parameters": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "output": {
        "result": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['chaincodeID']",
          "type": "assign",
          "value": "$property[MARBLE_CC]"
         },
         {
          "mapTo": "$INPUT['transactionName']",
          "type": "literal",
          "value": "initMarble"
         },
         {
          "mapTo": "$INPUT['parameters']",
          "type": "assign",
          "value": "$flow.content"
         },
         {
          "mapTo": "$INPUT['userName']",
          "type": "assign",
          "value": "$property[CLIENT_USER]"
         }
        ]
       }
      }
     },
     {
      "id": "LogMessage1",
      "name": "LogMessage1",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric returned: \", $activity[FabricRequest].message)"
         }
        ]
       }
      }
     },
     {
      "id": "Return",
      "name": "Return",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
       "settings": {},
       "input": {
        "mappings": [
         {
          "mapTo": "$INPUT['returns']['code']",
          "type": "assign",
          "value": "$activity[FabricRequest].code"
         },
         {
          "mapTo": "$INPUT['returns']['data']['name']",
          "type": "assign",
          "value": "$activity[FabricRequest].result.name"
         },
         {
          "mapTo": "$INPUT['returns']['data']['color']",
          "type": "assign",
          "value": "$activity[FabricRequest].result.color"
         },
         {
          "mapTo": "$INPUT['returns']['data']['size']",
          "type": "assign",
          "value": "$activity[FabricRequest].result.size"
         },
         {
          "mapTo": "$INPUT['returns']['data']['owner']",
          "type": "assign",
          "value": "$activity[FabricRequest].result.owner"
         }
        ]
       },
       "output": {}
      }
     },
     {
      "id": "LogMessage2",
      "name": "LogMessage2",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric error: \", $activity[FabricRequest].message)"
         }
        ]
       }
      }
     },
     {
      "id": "ThrowError",
      "name": "ThrowError",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/error",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Failed: \", $activity[FabricRequest].message)"
         }
        ]
       }
      }
     }
    ],
    "links": [
     {
      "id": 1,
      "from": "LogMessage",
      "to": "FabricRequest",
      "type": "default"
     },
     {
      "id": 2,
      "from": "FabricRequest",
      "to": "LogMessage1",
      "type": "expression",
      "value": "$activity[FabricRequest].code == 200"
     },
     {
      "id": 3,
      "from": "LogMessage1",
      "to": "Return",
      "type": "default"
     },
     {
      "id": 4,
      "from": "FabricRequest",
      "to": "LogMessage2",
      "type": "expression",
      "value": "$activity[FabricRequest].code != 200"
     },
     {
      "id": 5,
      "from": "LogMessage2",
      "to": "ThrowError",
      "type": "default"
     }
    ],
    "metadata": {
     "input": [
      {
       "name": "content",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}"
       }
      }
     ],
     "output": [
      {
       "name": "returns",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"code\":{\"type\":\"number\"},\"data\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}"
       }
      }
     ]
    }
   }
  },
  {
   "id": "flow:Get_Marble",
   "data": {
    "name": "Get Marble",
    "description": "fetch marble by name",
    "tasks": [
     {
      "id": "LogMessage3",
      "name": "LogMessage3",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {}
      }
     },
     {
      "id": "FabricRequest1",
      "name": "FabricRequest1",
      "activity": {
       "ref": "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabclient/activity/fabrequest",
       "settings": {},
       "input": {
        "connectionName": {
         "id": "d9901600-6764-11e9-b14f-9d404c0e7465",
         "type": "flogo:connector",
         "version": "1.0.0",
         "name": "fabclient-connector",
         "inputMappings": {},
         "outputMappings": {},
         "iteratorMappings": {},
         "title": "Fabric Connector",
         "description": "Fabric Connection",
         "ref": "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabclient/connector/fabconnector",
         "settings": [
          {
           "name": "name",
           "description": "Unique name of the Fabric network connection",
           "type": "string",
           "required": true,
           "display": {
            "name": "Name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "local-first-network"
          },
          {
           "name": "description",
           "description": "Describe the Fabric network connection",
           "type": "string",
           "required": false,
           "display": {
            "name": "Description",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "Fabric sample first-network running on localhost"
          },
          {
           "name": "config",
           "type": "string",
           "required": true,
           "display": {
            "name": "Network configure file",
            "description": "Select the configuration file for the client and Fabric network",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "config_test.yaml",
            "content": "data:application/octet-stream;base64,"
           }
          },
          {
           "name": "entityMatcher",
           "type": "string",
           "required": false,
           "display": {
            "name": "Connection entity matcher file",
            "description": "Select the entity matcher file for overriding Fabric node URLs using pattern matching",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "local_entity_matchers.yaml",
            "content": "data:application/octet-stream;base64,IwojIENvcHlyaWdodCBTZWN1cmVLZXkgVGVjaG5vbG9naWVzIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KIwojIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCiMKIwojIFRoZSBuZXR3b3JrIGNvbm5lY3Rpb24gcHJvZmlsZSBwcm92aWRlcyBjbGllbnQgYXBwbGljYXRpb25zIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdGFyZ2V0CiMgYmxvY2tjaGFpbiBuZXR3b3JrIHRoYXQgYXJlIG5lY2Vzc2FyeSBmb3IgdGhlIGFwcGxpY2F0aW9ucyB0byBpbnRlcmFjdCB3aXRoIGl0LiBUaGVzZSBhcmUgYWxsCiMga25vd2xlZGdlIHRoYXQgbXVzdCBiZSBhY3F1aXJlZCBmcm9tIG91dC1vZi1iYW5kIHNvdXJjZXMuIFRoaXMgZmlsZSBwcm92aWRlcyBzdWNoIGEgc291cmNlLgojCgojIEVudGl0eU1hdGNoZXJzIGVuYWJsZSBzdWJzdGl0dXRpb24gb2YgbmV0d29yayBob3N0bmFtZXMgd2l0aCBzdGF0aWMgY29uZmlndXJhdGlvbnMKICMgc28gdGhhdCBwcm9wZXJ0aWVzIGNhbiBiZSBtYXBwZWQuIFJlZ2V4IGNhbiBiZSB1c2VkIGZvciB0aGlzIHB1cnBvc2UKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGJlIGVtcHR5IHdoaWNoIG1lYW5zIHRoZSBzYW1lIG5ldHdvcmsgaG9zdG5hbWUgd2lsbCBiZSB1c2VkCiMgVXJsU3Vic3RpdHV0aW9uRXhwIGNhbiBiZSBnaXZlbiBzYW1lIGFzIG1hcHBlZCBwZWVyIHVybCwgc28gdGhhdCBtYXBwZWQgcGVlciB1cmwgY2FuIGJlIHVzZWQKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGhhdmUgZ29sYW5nIHJlZ2V4IG1hdGNoZXJzIGxpa2UgJHsxfS5leGFtcGxlLiR7Mn06JHszfSBmb3IgcGF0dGVybgogIyBsaWtlIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNCB3aGljaCBjb252ZXJ0cyBwZWVyMC5vcmcxLmV4YW1wbGUuY29tIHRvIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNAojIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwIGZvbGxvdyBpbiB0aGUgc2FtZSBsaW5lcyBhcwogIyBTdWJzdGl0dXRpb25FeHAgZm9yIHRoZSBmaWVsZHMgZ3ByY09wdGlvbnMuc3NsLXRhcmdldC1uYW1lLW92ZXJyaWRlIHJlc3BlY3RpdmVseQojIEluIGFueSBjYXNlIG1hcHBlZEhvc3QncyBjb25maWcgd2lsbCBiZSB1c2VkLCBzbyBtYXBwZWQgaG9zdCBjYW5ub3QgYmUgZW1wdHksIGlmIGVudGl0eU1hdGNoZXJzIGFyZSB1c2VkCmVudGl0eU1hdGNoZXJzOgogIHBlZXI6CiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo3MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo4MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDoxMDA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjEub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcxLmV4YW1wbGUuKFx3Kyk6KFxkKykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6JHsyfQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogJHsxfS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6ICR7MX0ub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMi5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OiR7Mn0KICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6ICR7MX0ub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiAkezF9Lm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjcwNTEKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKTo4MDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjgwNTEKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogcGVlcjEub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kyk6OTA1MQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjEwMDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjEwMDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzIuZXhhbXBsZS5jb20KCiAgb3JkZXJlcjoKCiAgICAtIHBhdHRlcm46IChcdyspLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogb3JkZXJlci5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBvcmRlcmVyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjcwNTAKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IG9yZGVyZXIuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQoKICBjZXJ0aWZpY2F0ZUF1dGhvcml0eToKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMS5leGFtcGxlLihcdyspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogaHR0cHM6Ly9sb2NhbGhvc3Q6NzA1NAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogY2Eub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBjYS5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcyLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBodHRwczovL2xvY2FsaG9zdDo4MDU0CiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBjYS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IGNhLm9yZzIuZXhhbXBsZS5jb20="
           }
          },
          {
           "name": "channelID",
           "type": "string",
           "required": true,
           "display": {
            "name": "Channel ID",
            "description": "Channel ID",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "mychannel"
          }
         ],
         "outputs": [],
         "inputs": [],
         "handler": {
          "settings": []
         },
         "reply": [],
         "s3Prefix": "flogo",
         "key": "flogo/fabclient/connector/fabconnector/connector.json",
         "display": {
          "category": "fabclient",
          "description": "Fabric Connection",
          "visible": true,
          "smallIcon": "ic-fabconnector@2x.png",
          "largeIcon": "ic-fabconnector@3x.png"
         },
         "actions": [
          {
           "name": "Save Connector",
           "display": {
            "readonly": false,
            "valid": true,
            "visible": true
           }
          }
         ],
         "feature": {},
         "propertyMap": {},
         "keyfield": "name",
         "isValid": true,
         "lastUpdatedTime": 1556201845596,
         "createdTime": 1556201845596,
         "user": "flogo",
         "subscriptionId": "flogo_sbsc",
         "connectorName": " ",
         "connectorDescription": " "
        },
        "requestType": "query",
        "parameters": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "output": {
        "result": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['userName']",
          "type": "assign",
          "value": "$property[CLIENT_USER]"
         },
         {
          "mapTo": "$INPUT['chaincodeID']",
          "type": "assign",
          "value": "$property[MARBLE_CC]"
         },
         {
          "mapTo": "$INPUT['transactionName']",
          "type": "literal",
          "value": "readMarble"
         },
         {
          "mapTo": "$INPUT['parameters']['name']",
          "type": "assign",
          "value": "$flow.name"
         }
        ]
       }
      }
     },
     {
      "id": "LogMessage4",
      "name": "LogMessage4",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric returned: \", $activity[FabricRequest1].message)"
         }
        ]
       }
      }
     },
     {
      "id": "Return1",
      "name": "Return1",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
       "settings": {},
       "input": {
        "mappings": [
         {
          "mapTo": "$INPUT['returns']['code']",
          "type": "assign",
          "value": "$activity[FabricRequest1].code"
         },
         {
          "mapTo": "$INPUT['returns']['data']['name']",
          "type": "assign",
          "value": "$activity[FabricRequest1].result.name"
         },
         {
          "mapTo": "$INPUT['returns']['data']['color']",
          "type": "assign",
          "value": "$activity[FabricRequest1].result.color"
         },
         {
          "mapTo": "$INPUT['returns']['data']['size']",
          "type": "assign",
          "value": "$activity[FabricRequest1].result.size"
         },
         {
          "mapTo": "$INPUT['returns']['data']['owner']",
          "type": "assign",
          "value": "$activity[FabricRequest1].result.owner"
         }
        ]
       },
       "output": {}
      }
     },
     {
      "id": "LogMessage5",
      "name": "LogMessage5",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric error: \", $activity[FabricRequest1].message)"
         }
        ]
       }
      }
     },
     {
      "id": "ThrowError1",
      "name": "ThrowError1",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/error",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Failed: \", $activity[FabricRequest1].message)"
         }
        ]
       }
      }
     }
    ],
    "links": [
     {
      "id": 1,
      "from": "LogMessage3",
      "to": "FabricRequest1",
      "type": "default"
     },
     {
      "id": 2,
      "from": "FabricRequest1",
      "to": "LogMessage4",
      "type": "expression",
      "value": "$activity[FabricRequest1].code == 200"
     },
     {
      "id": 3,
      "from": "LogMessage4",
      "to": "Return1",
      "type": "default"
     },
     {
      "id": 4,
      "from": "FabricRequest1",
      "to": "LogMessage5",
      "type": "expression",
      "value": "$activity[FabricRequest1].code != 200"
     },
     {
      "id": 5,
      "from": "LogMessage5",
      "to": "ThrowError1",
      "type": "default"
     }
    ],
    "metadata": {
     "input": [
      {
       "name": "name",
       "type": "string"
      }
     ],
     "output": [
      {
       "name": "returns",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"code\":{\"type\":\"number\"},\"data\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}"
       }
      }
     ]
    }
   }
  },
  {
   "id": "flow:Query_By_Owner",
   "data": {
    "name": "Query By Owner",
    "description": "query marbles of an owner",
    "tasks": [
     {
      "id": "LogMessage6",
      "name": "LogMessage6",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"[Query By Owner] \", $flow.owner)"
         }
        ]
       }
      }
     },
     {
      "id": "FabricRequest2",
      "name": "FabricRequest2",
      "activity": {
       "ref": "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabclient/activity/fabrequest",
       "settings": {},
       "input": {
        "connectionName": {
         "id": "d9901600-6764-11e9-b14f-9d404c0e7465",
         "type": "flogo:connector",
         "version": "1.0.0",
         "name": "fabclient-connector",
         "inputMappings": {},
         "outputMappings": {},
         "iteratorMappings": {},
         "title": "Fabric Connector",
         "description": "Fabric Connection",
         "ref": "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabclient/connector/fabconnector",
         "settings": [
          {
           "name": "name",
           "description": "Unique name of the Fabric network connection",
           "type": "string",
           "required": true,
           "display": {
            "name": "Name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "local-first-network"
          },
          {
           "name": "description",
           "description": "Describe the Fabric network connection",
           "type": "string",
           "required": false,
           "display": {
            "name": "Description",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "Fabric sample first-network running on localhost"
          },
          {
           "name": "config",
           "type": "string",
           "required": true,
           "display": {
            "name": "Network configure file",
            "description": "Select the configuration file for the client and Fabric network",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "config_test.yaml",
            "content": "data:application/octet-stream;base64,"
           }
          },
          {
           "name": "entityMatcher",
           "type": "string",
           "required": false,
           "display": {
            "name": "Connection entity matcher file",
            "description": "Select the entity matcher file for overriding Fabric node URLs using pattern matching",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "local_entity_matchers.yaml",
            "content": "data:application/octet-stream;base64,IwojIENvcHlyaWdodCBTZWN1cmVLZXkgVGVjaG5vbG9naWVzIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KIwojIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCiMKIwojIFRoZSBuZXR3b3JrIGNvbm5lY3Rpb24gcHJvZmlsZSBwcm92aWRlcyBjbGllbnQgYXBwbGljYXRpb25zIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdGFyZ2V0CiMgYmxvY2tjaGFpbiBuZXR3b3JrIHRoYXQgYXJlIG5lY2Vzc2FyeSBmb3IgdGhlIGFwcGxpY2F0aW9ucyB0byBpbnRlcmFjdCB3aXRoIGl0LiBUaGVzZSBhcmUgYWxsCiMga25vd2xlZGdlIHRoYXQgbXVzdCBiZSBhY3F1aXJlZCBmcm9tIG91dC1vZi1iYW5kIHNvdXJjZXMuIFRoaXMgZmlsZSBwcm92aWRlcyBzdWNoIGEgc291cmNlLgojCgojIEVudGl0eU1hdGNoZXJzIGVuYWJsZSBzdWJzdGl0dXRpb24gb2YgbmV0d29yayBob3N0bmFtZXMgd2l0aCBzdGF0aWMgY29uZmlndXJhdGlvbnMKICMgc28gdGhhdCBwcm9wZXJ0aWVzIGNhbiBiZSBtYXBwZWQuIFJlZ2V4IGNhbiBiZSB1c2VkIGZvciB0aGlzIHB1cnBvc2UKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGJlIGVtcHR5IHdoaWNoIG1lYW5zIHRoZSBzYW1lIG5ldHdvcmsgaG9zdG5hbWUgd2lsbCBiZSB1c2VkCiMgVXJsU3Vic3RpdHV0aW9uRXhwIGNhbiBiZSBnaXZlbiBzYW1lIGFzIG1hcHBlZCBwZWVyIHVybCwgc28gdGhhdCBtYXBwZWQgcGVlciB1cmwgY2FuIGJlIHVzZWQKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGhhdmUgZ29sYW5nIHJlZ2V4IG1hdGNoZXJzIGxpa2UgJHsxfS5leGFtcGxlLiR7Mn06JHszfSBmb3IgcGF0dGVybgogIyBsaWtlIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNCB3aGljaCBjb252ZXJ0cyBwZWVyMC5vcmcxLmV4YW1wbGUuY29tIHRvIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNAojIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwIGZvbGxvdyBpbiB0aGUgc2FtZSBsaW5lcyBhcwogIyBTdWJzdGl0dXRpb25FeHAgZm9yIHRoZSBmaWVsZHMgZ3ByY09wdGlvbnMuc3NsLXRhcmdldC1uYW1lLW92ZXJyaWRlIHJlc3BlY3RpdmVseQojIEluIGFueSBjYXNlIG1hcHBlZEhvc3QncyBjb25maWcgd2lsbCBiZSB1c2VkLCBzbyBtYXBwZWQgaG9zdCBjYW5ub3QgYmUgZW1wdHksIGlmIGVudGl0eU1hdGNoZXJzIGFyZSB1c2VkCmVudGl0eU1hdGNoZXJzOgogIHBlZXI6CiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo3MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo4MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDoxMDA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjEub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcxLmV4YW1wbGUuKFx3Kyk6KFxkKykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6JHsyfQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogJHsxfS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6ICR7MX0ub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMi5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OiR7Mn0KICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6ICR7MX0ub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiAkezF9Lm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjcwNTEKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKTo4MDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjgwNTEKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogcGVlcjEub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kyk6OTA1MQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjEwMDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjEwMDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzIuZXhhbXBsZS5jb20KCiAgb3JkZXJlcjoKCiAgICAtIHBhdHRlcm46IChcdyspLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogb3JkZXJlci5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBvcmRlcmVyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjcwNTAKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IG9yZGVyZXIuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQoKICBjZXJ0aWZpY2F0ZUF1dGhvcml0eToKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMS5leGFtcGxlLihcdyspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogaHR0cHM6Ly9sb2NhbGhvc3Q6NzA1NAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogY2Eub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBjYS5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcyLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBodHRwczovL2xvY2FsaG9zdDo4MDU0CiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBjYS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IGNhLm9yZzIuZXhhbXBsZS5jb20="
           }
          },
          {
           "name": "channelID",
           "type": "string",
           "required": true,
           "display": {
            "name": "Channel ID",
            "description": "Channel ID",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "mychannel"
          }
         ],
         "outputs": [],
         "inputs": [],
         "handler": {
          "settings": []
         },
         "reply": [],
         "s3Prefix": "flogo",
         "key": "flogo/fabclient/connector/fabconnector/connector.json",
         "display": {
          "category": "fabclient",
          "description": "Fabric Connection",
          "visible": true,
          "smallIcon": "ic-fabconnector@2x.png",
          "largeIcon": "ic-fabconnector@3x.png"
         },
         "actions": [
          {
           "name": "Save Connector",
           "display": {
            "readonly": false,
            "valid": true,
            "visible": true
           }
          }
         ],
         "feature": {},
         "propertyMap": {},
         "keyfield": "name",
         "isValid": true,
         "lastUpdatedTime": 1556201845596,
         "createdTime": 1556201845596,
         "user": "flogo",
         "subscriptionId": "flogo_sbsc",
         "connectorName": " ",
         "connectorDescription": " "
        },
        "requestType": "query",
        "parameters": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"owner\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "output": {
        "result": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
         "value": ""
        }
       },
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['userName']",
          "type": "assign",
          "value": "$property[CLIENT_USER]"
         },
         {
          "mapTo": "$INPUT['chaincodeID']",
          "type": "assign",
          "value": "$property[MARBLE_CC]"
         },
         {
          "mapTo": "$INPUT['transactionName']",
          "type": "literal",
          "value": "queryMarblesByOwner"
         },
         {
          "mapTo": "$INPUT['parameters']['owner']",
          "type": "assign",
          "value": "$flow.owner"
         }
        ]
       }
      }
     },
     {
      "id": "LogMessage7",
      "name": "LogMessage7",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric returned: \", $activity[FabricRequest2].message)"
         }
        ]
       }
      }
     },
     {
      "id": "Return2",
      "name": "Return2",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
       "settings": {},
       "input": {
        "mappings": [
         {
          "mapTo": "$INPUT['returns']['code']",
          "type": "assign",
          "value": "$activity[FabricRequest2].code"
         },
         {
          "mapTo": "$INPUT['returns']['data']",
          "type": "array",
          "value": "{\"to\":\"$INPUT['returns']['data']\",\"from\":\"$activity[FabricRequest2].result\",\"type\":\"foreach\",\"fields\":[{\"to\":\"$INPUT.$$['key']\",\"from\":\"$.key\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['value']['name']\",\"from\":\"$.value.name\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['value']['color']\",\"from\":\"$.value.color\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['value']['size']\",\"from\":\"$.value.size\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['value']['owner']\",\"from\":\"$.value.owner\",\"type\":\"assign\"}]}"
         }
        ]
       },
       "output": {}
      }
     },
     {
      "id": "LogMessage8",
      "name": "LogMessage8",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric error: \", $activity[FabricRequest2].message)"
         }
        ]
       }
      }
     },
     {
      "id": "ThrowError2",
      "name": "ThrowError2",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/error",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Failed: \", $activity[FabricRequest2].message)"
         }
        ]
       }
      }
     }
    ],
    "links": [
     {
      "id": 1,
      "from": "LogMessage6",
      "to": "FabricRequest2",
      "type": "default"
     },
     {
      "id": 2,
      "from": "FabricRequest2",
      "to": "LogMessage7",
      "type": "expression",
      "value": "$activity[FabricRequest2].code == 200"
     },
     {
      "id": 3,
      "from": "LogMessage7",
      "to": "Return2",
      "type": "default"
     },
     {
      "id": 4,
      "from": "FabricRequest2",
      "to": "LogMessage8",
      "type": "expression",
      "value": "$activity[FabricRequest2].code != 200"
     },
     {
      "id": 5,
      "from": "LogMessage8",
      "to": "ThrowError2",
      "type": "default"
     }
    ],
    "metadata": {
     "input": [
      {
       "name": "owner",
       "type": "string"
      }
     ],
     "output": [
      {
       "name": "returns",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"code\":{\"type\":\"number\"},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}}"
       }
      }
     ]
    }
   }
  },
  {
   "id": "flow:Transfer_Marble",
   "data": {
    "name": "Transfer Marble",
    "description": "transfer marble to a new owner",
    "tasks": [
     {
      "id": "LogMessage9",
      "name": "LogMessage9",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"[Transfer Marble] \", $flow.content.name, \" new-owner: \", $flow.content.newOwner)"
         }
        ]
       }
      }
     },
     {
      "id": "FabricRequest3",
      "name": "FabricRequest3",
      "activity": {
       "ref": "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabclient/activity/fabrequest",
       "settings": {},
       "input": {
        "connectionName": {
         "id": "d9901600-6764-11e9-b14f-9d404c0e7465",
         "type": "flogo:connector",
         "version": "1.0.0",
         "name": "fabclient-connector",
         "inputMappings": {},
         "outputMappings": {},
         "iteratorMappings": {},
         "title": "Fabric Connector",
         "description": "Fabric Connection",
         "ref": "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabclient/connector/fabconnector",
         "settings": [
          {
           "name": "name",
           "description": "Unique name of the Fabric network connection",
           "type": "string",
           "required": true,
           "display": {
            "name": "Name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "local-first-network"
          },
          {
           "name": "description",
           "description": "Describe the Fabric network connection",
           "type": "string",
           "required": false,
           "display": {
            "name": "Description",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "Fabric sample first-network running on localhost"
          },
          {
           "name": "config",
           "type": "string",
           "required": true,
           "display": {
            "name": "Network configure file",
            "description": "Select the configuration file for the client and Fabric network",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "config_test.yaml",
            "content": "data:application/octet-stream;base64,"
           }
          },
          {
           "name": "entityMatcher",
           "type": "string",
           "required": false,
           "display": {
            "name": "Connection entity matcher file",
            "description": "Select the entity matcher file for overriding Fabric node URLs using pattern matching",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "local_entity_matchers.yaml",
            "content": "data:application/octet-stream;base64,IwojIENvcHlyaWdodCBTZWN1cmVLZXkgVGVjaG5vbG9naWVzIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KIwojIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCiMKIwojIFRoZSBuZXR3b3JrIGNvbm5lY3Rpb24gcHJvZmlsZSBwcm92aWRlcyBjbGllbnQgYXBwbGljYXRpb25zIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdGFyZ2V0CiMgYmxvY2tjaGFpbiBuZXR3b3JrIHRoYXQgYXJlIG5lY2Vzc2FyeSBmb3IgdGhlIGFwcGxpY2F0aW9ucyB0byBpbnRlcmFjdCB3aXRoIGl0LiBUaGVzZSBhcmUgYWxsCiMga25vd2xlZGdlIHRoYXQgbXVzdCBiZSBhY3F1aXJlZCBmcm9tIG91dC1vZi1iYW5kIHNvdXJjZXMuIFRoaXMgZmlsZSBwcm92aWRlcyBzdWNoIGEgc291cmNlLgojCgojIEVudGl0eU1hdGNoZXJzIGVuYWJsZSBzdWJzdGl0dXRpb24gb2YgbmV0d29yayBob3N0bmFtZXMgd2l0aCBzdGF0aWMgY29uZmlndXJhdGlvbnMKICMgc28gdGhhdCBwcm9wZXJ0aWVzIGNhbiBiZSBtYXBwZWQuIFJlZ2V4IGNhbiBiZSB1c2VkIGZvciB0aGlzIHB1cnBvc2UKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGJlIGVtcHR5IHdoaWNoIG1lYW5zIHRoZSBzYW1lIG5ldHdvcmsgaG9zdG5hbWUgd2lsbCBiZSB1c2VkCiMgVXJsU3Vic3RpdHV0aW9uRXhwIGNhbiBiZSBnaXZlbiBzYW1lIGFzIG1hcHBlZCBwZWVyIHVybCwgc28gdGhhdCBtYXBwZWQgcGVlciB1cmwgY2FuIGJlIHVzZWQKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGhhdmUgZ29sYW5nIHJlZ2V4IG1hdGNoZXJzIGxpa2UgJHsxfS5leGFtcGxlLiR7Mn06JHszfSBmb3IgcGF0dGVybgogIyBsaWtlIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNCB3aGljaCBjb252ZXJ0cyBwZWVyMC5vcmcxLmV4YW1wbGUuY29tIHRvIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNAojIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwIGZvbGxvdyBpbiB0aGUgc2FtZSBsaW5lcyBhcwogIyBTdWJzdGl0dXRpb25FeHAgZm9yIHRoZSBmaWVsZHMgZ3ByY09wdGlvbnMuc3NsLXRhcmdldC1uYW1lLW92ZXJyaWRlIHJlc3BlY3RpdmVseQojIEluIGFueSBjYXNlIG1hcHBlZEhvc3QncyBjb25maWcgd2lsbCBiZSB1c2VkLCBzbyBtYXBwZWQgaG9zdCBjYW5ub3QgYmUgZW1wdHksIGlmIGVudGl0eU1hdGNoZXJzIGFyZSB1c2VkCmVudGl0eU1hdGNoZXJzOgogIHBlZXI6CiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo3MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo4MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDoxMDA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjEub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcxLmV4YW1wbGUuKFx3Kyk6KFxkKykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6JHsyfQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogJHsxfS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6ICR7MX0ub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMi5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OiR7Mn0KICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6ICR7MX0ub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiAkezF9Lm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjcwNTEKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKTo4MDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjgwNTEKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogcGVlcjEub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kyk6OTA1MQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjEwMDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjEwMDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzIuZXhhbXBsZS5jb20KCiAgb3JkZXJlcjoKCiAgICAtIHBhdHRlcm46IChcdyspLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogb3JkZXJlci5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBvcmRlcmVyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjcwNTAKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IG9yZGVyZXIuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQoKICBjZXJ0aWZpY2F0ZUF1dGhvcml0eToKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMS5leGFtcGxlLihcdyspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogaHR0cHM6Ly9sb2NhbGhvc3Q6NzA1NAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogY2Eub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBjYS5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcyLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBodHRwczovL2xvY2FsaG9zdDo4MDU0CiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBjYS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IGNhLm9yZzIuZXhhbXBsZS5jb20="
           }
          },
          {
           "name": "channelID",
           "type": "string",
           "required": true,
           "display": {
            "name": "Channel ID",
            "description": "Channel ID",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "mychannel"
          }
         ],
         "outputs": [],
         "inputs": [],
         "handler": {
          "settings": []
         },
         "reply": [],
         "s3Prefix": "flogo",
         "key": "flogo/fabclient/connector/fabconnector/connector.json",
         "display": {
          "category": "fabclient",
          "description": "Fabric Connection",
          "visible": true,
          "smallIcon": "ic-fabconnector@2x.png",
          "largeIcon": "ic-fabconnector@3x.png"
         },
         "actions": [
          {
           "name": "Save Connector",
           "display": {
            "readonly": false,
            "valid": true,
            "visible": true
           }
          }
         ],
         "feature": {},
         "propertyMap": {},
         "keyfield": "name",
         "isValid": true,
         "lastUpdatedTime": 1556201845596,
         "createdTime": 1556201845596,
         "user": "flogo",
         "subscriptionId": "flogo_sbsc",
         "connectorName": " ",
         "connectorDescription": " "
        },
        "requestType": "invoke",
        "parameters": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"newOwner\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "output": {
        "result": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['userName']",
          "type": "assign",
          "value": "$property[CLIENT_USER]"
         },
         {
          "mapTo": "$INPUT['chaincodeID']",
          "type": "assign",
          "value": "$property[MARBLE_CC]"
         },
         {
          "mapTo": "$INPUT['transactionName']",
          "type": "literal",
          "value": "transferMarble"
         },
         {
          "mapTo": "$INPUT['parameters']['name']",
          "type": "assign",
          "value": "$flow.content.name"
         },
         {
          "mapTo": "$INPUT['parameters']['newOwner']",
          "type": "assign",
          "value": "$flow.content.newOwner"
         }
        ]
       }
      }
     },
     {
      "id": "LogMessage10",
      "name": "LogMessage10",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric returned: \", $activity[FabricRequest3].message)"
         }
        ]
       }
      }
     },
     {
      "id": "Return3",
      "name": "Return3",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
       "settings": {},
       "input": {
        "mappings": [
         {
          "mapTo": "$INPUT['returns']['code']",
          "type": "assign",
          "value": "$activity[FabricRequest3].code"
         },
         {
          "mapTo": "$INPUT['returns']['data']['name']",
          "type": "assign",
          "value": "$activity[FabricRequest3].result.name"
         },
         {
          "mapTo": "$INPUT['returns']['data']['color']",
          "type": "assign",
          "value": "$activity[FabricRequest3].result.color"
         },
         {
          "mapTo": "$INPUT['returns']['data']['size']",
          "type": "assign",
          "value": "$activity[FabricRequest3].result.size"
         },
         {
          "mapTo": "$INPUT['returns']['data']['owner']",
          "type": "assign",
          "value": "$activity[FabricRequest3].result.owner"
         }
        ]
       },
       "output": {}
      }
     },
     {
      "id": "LogMessage11",
      "name": "LogMessage11",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric error: \", $activity[FabricRequest3].message)"
         }
        ]
       }
      }
     },
     {
      "id": "ThrowError3",
      "name": "ThrowError3",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/error",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Failed: \", $activity[FabricRequest3].message)"
         }
        ]
       }
      }
     }
    ],
    "links": [
     {
      "id": 1,
      "from": "LogMessage9",
      "to": "FabricRequest3",
      "type": "default"
     },
     {
      "id": 2,
      "from": "FabricRequest3",
      "to": "LogMessage10",
      "type": "expression",
      "value": "$activity[FabricRequest3].code == 200"
     },
     {
      "id": 3,
      "from": "LogMessage10",
      "to": "Return3",
      "type": "default"
     },
     {
      "id": 4,
      "from": "FabricRequest3",
      "to": "LogMessage11",
      "type": "expression",
      "value": "$activity[FabricRequest3].code != 200"
     },
     {
      "id": 5,
      "from": "LogMessage11",
      "to": "ThrowError3",
      "type": "default"
     }
    ],
    "metadata": {
     "input": [
      {
       "name": "content",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"name\":{\"type\":\"string\"},\"newOwner\":{\"type\":\"string\"}}"
       }
      }
     ],
     "output": [
      {
       "name": "returns",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"code\":{\"type\":\"number\"},\"data\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}"
       }
      }
     ]
    }
   }
  },
  {
   "id": "flow:Query_By_Range",
   "data": {
    "name": "Query By Range",
    "description": "query marbles of key range, [startKey, endKey)",
    "tasks": [
     {
      "id": "LogMessage12",
      "name": "LogMessage12",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"[Query By Range] [\", $flow.startKey, \", \", $flow.endKey, \")\")"
         }
        ]
       }
      }
     },
     {
      "id": "FabricRequest4",
      "name": "FabricRequest4",
      "activity": {
       "ref": "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabclient/activity/fabrequest",
       "settings": {},
       "input": {
        "connectionName": {
         "id": "d9901600-6764-11e9-b14f-9d404c0e7465",
         "type": "flogo:connector",
         "version": "1.0.0",
         "name": "fabclient-connector",
         "inputMappings": {},
         "outputMappings": {},
         "iteratorMappings": {},
         "title": "Fabric Connector",
         "description": "Fabric Connection",
         "ref": "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabclient/connector/fabconnector",
         "settings": [
          {
           "name": "name",
           "description": "Unique name of the Fabric network connection",
           "type": "string",
           "required": true,
           "display": {
            "name": "Name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "local-first-network"
          },
          {
           "name": "description",
           "description": "Describe the Fabric network connection",
           "type": "string",
           "required": false,
           "display": {
            "name": "Description",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "Fabric sample first-network running on localhost"
          },
          {
           "name": "config",
           "type": "string",
           "required": true,
           "display": {
            "name": "Network configure file",
            "description": "Select the configuration file for the client and Fabric network",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "config_test.yaml",
            "content": "data:application/octet-stream;base64,"
           }
          },
          {
           "name": "entityMatcher",
           "type": "string",
           "required": false,
           "display": {
            "name": "Connection entity matcher file",
            "description": "Select the entity matcher file for overriding Fabric node URLs using pattern matching",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "local_entity_matchers.yaml",
            "content": "data:application/octet-stream;base64,IwojIENvcHlyaWdodCBTZWN1cmVLZXkgVGVjaG5vbG9naWVzIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KIwojIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCiMKIwojIFRoZSBuZXR3b3JrIGNvbm5lY3Rpb24gcHJvZmlsZSBwcm92aWRlcyBjbGllbnQgYXBwbGljYXRpb25zIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdGFyZ2V0CiMgYmxvY2tjaGFpbiBuZXR3b3JrIHRoYXQgYXJlIG5lY2Vzc2FyeSBmb3IgdGhlIGFwcGxpY2F0aW9ucyB0byBpbnRlcmFjdCB3aXRoIGl0LiBUaGVzZSBhcmUgYWxsCiMga25vd2xlZGdlIHRoYXQgbXVzdCBiZSBhY3F1aXJlZCBmcm9tIG91dC1vZi1iYW5kIHNvdXJjZXMuIFRoaXMgZmlsZSBwcm92aWRlcyBzdWNoIGEgc291cmNlLgojCgojIEVudGl0eU1hdGNoZXJzIGVuYWJsZSBzdWJzdGl0dXRpb24gb2YgbmV0d29yayBob3N0bmFtZXMgd2l0aCBzdGF0aWMgY29uZmlndXJhdGlvbnMKICMgc28gdGhhdCBwcm9wZXJ0aWVzIGNhbiBiZSBtYXBwZWQuIFJlZ2V4IGNhbiBiZSB1c2VkIGZvciB0aGlzIHB1cnBvc2UKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGJlIGVtcHR5IHdoaWNoIG1lYW5zIHRoZSBzYW1lIG5ldHdvcmsgaG9zdG5hbWUgd2lsbCBiZSB1c2VkCiMgVXJsU3Vic3RpdHV0aW9uRXhwIGNhbiBiZSBnaXZlbiBzYW1lIGFzIG1hcHBlZCBwZWVyIHVybCwgc28gdGhhdCBtYXBwZWQgcGVlciB1cmwgY2FuIGJlIHVzZWQKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGhhdmUgZ29sYW5nIHJlZ2V4IG1hdGNoZXJzIGxpa2UgJHsxfS5leGFtcGxlLiR7Mn06JHszfSBmb3IgcGF0dGVybgogIyBsaWtlIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNCB3aGljaCBjb252ZXJ0cyBwZWVyMC5vcmcxLmV4YW1wbGUuY29tIHRvIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNAojIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwIGZvbGxvdyBpbiB0aGUgc2FtZSBsaW5lcyBhcwogIyBTdWJzdGl0dXRpb25FeHAgZm9yIHRoZSBmaWVsZHMgZ3ByY09wdGlvbnMuc3NsLXRhcmdldC1uYW1lLW92ZXJyaWRlIHJlc3BlY3RpdmVseQojIEluIGFueSBjYXNlIG1hcHBlZEhvc3QncyBjb25maWcgd2lsbCBiZSB1c2VkLCBzbyBtYXBwZWQgaG9zdCBjYW5ub3QgYmUgZW1wdHksIGlmIGVudGl0eU1hdGNoZXJzIGFyZSB1c2VkCmVudGl0eU1hdGNoZXJzOgogIHBlZXI6CiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo3MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo4MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDoxMDA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjEub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcxLmV4YW1wbGUuKFx3Kyk6KFxkKykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6JHsyfQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogJHsxfS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6ICR7MX0ub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMi5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OiR7Mn0KICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6ICR7MX0ub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiAkezF9Lm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjcwNTEKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKTo4MDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjgwNTEKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogcGVlcjEub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kyk6OTA1MQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjEwMDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjEwMDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzIuZXhhbXBsZS5jb20KCiAgb3JkZXJlcjoKCiAgICAtIHBhdHRlcm46IChcdyspLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogb3JkZXJlci5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBvcmRlcmVyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjcwNTAKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IG9yZGVyZXIuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQoKICBjZXJ0aWZpY2F0ZUF1dGhvcml0eToKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMS5leGFtcGxlLihcdyspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogaHR0cHM6Ly9sb2NhbGhvc3Q6NzA1NAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogY2Eub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBjYS5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcyLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBodHRwczovL2xvY2FsaG9zdDo4MDU0CiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBjYS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IGNhLm9yZzIuZXhhbXBsZS5jb20="
           }
          },
          {
           "name": "channelID",
           "type": "string",
           "required": true,
           "display": {
            "name": "Channel ID",
            "description": "Channel ID",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "mychannel"
          }
         ],
         "outputs": [],
         "inputs": [],
         "handler": {
          "settings": []
         },
         "reply": [],
         "s3Prefix": "flogo",
         "key": "flogo/fabclient/connector/fabconnector/connector.json",
         "display": {
          "category": "fabclient",
          "description": "Fabric Connection",
          "visible": true,
          "smallIcon": "ic-fabconnector@2x.png",
          "largeIcon": "ic-fabconnector@3x.png"
         },
         "actions": [
          {
           "name": "Save Connector",
           "display": {
            "readonly": false,
            "valid": true,
            "visible": true
           }
          }
         ],
         "feature": {},
         "propertyMap": {},
         "keyfield": "name",
         "isValid": true,
         "lastUpdatedTime": 1556201845596,
         "createdTime": 1556201845596,
         "user": "flogo",
         "subscriptionId": "flogo_sbsc",
         "connectorName": " ",
         "connectorDescription": " "
        },
        "requestType": "query",
        "parameters": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"startKey\":{\"type\":\"string\"},\"endKey\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "output": {
        "result": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
         "value": ""
        }
       },
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['transactionName']",
          "type": "literal",
          "value": "getMarblesByRange"
         },
         {
          "mapTo": "$INPUT['chaincodeID']",
          "type": "assign",
          "value": "$property[MARBLE_CC]"
         },
         {
          "mapTo": "$INPUT['userName']",
          "type": "assign",
          "value": "$property[CLIENT_USER]"
         },
         {
          "mapTo": "$INPUT['parameters']['startKey']",
          "type": "assign",
          "value": "$flow.startKey"
         },
         {
          "mapTo": "$INPUT['parameters']['endKey']",
          "type": "assign",
          "value": "$flow.endKey"
         }
        ]
       }
      }
     },
     {
      "id": "LogMessage13",
      "name": "LogMessage13",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric returned: \", $activity[FabricRequest4].message)"
         }
        ]
       }
      }
     },
     {
      "id": "Return4",
      "name": "Return4",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
       "settings": {},
       "input": {
        "mappings": [
         {
          "mapTo": "$INPUT['returns']['code']",
          "type": "assign",
          "value": "$activity[FabricRequest4].code"
         },
         {
          "mapTo": "$INPUT['returns']['data']",
          "type": "array",
          "value": "{\"to\":\"$INPUT['returns']['data']\",\"from\":\"$activity[FabricRequest4].result\",\"type\":\"foreach\",\"fields\":[{\"to\":\"$INPUT.$$['key']\",\"from\":\"$.key\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['value']\",\"from\":\"$.value\",\"type\":\"assign\"}]}"
         }
        ]
       },
       "output": {}
      }
     },
     {
      "id": "LogMessage14",
      "name": "LogMessage14",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric error: \", $activity[FabricRequest4].message)"
         }
        ]
       }
      }
     },
     {
      "id": "ThrowError4",
      "name": "ThrowError4",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/error",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Failed: \", $activity[FabricRequest4].message)"
         }
        ]
       }
      }
     }
    ],
    "links": [
     {
      "id": 1,
      "from": "LogMessage12",
      "to": "FabricRequest4",
      "type": "default"
     },
     {
      "id": 2,
      "from": "FabricRequest4",
      "to": "LogMessage13",
      "type": "expression",
      "value": "$activity[FabricRequest4].code == 200"
     },
     {
      "id": 3,
      "from": "LogMessage13",
      "to": "Return4",
      "type": "default"
     },
     {
      "id": 4,
      "from": "FabricRequest4",
      "to": "LogMessage14",
      "type": "expression",
      "value": "$activity[FabricRequest4].code != 200"
     },
     {
      "id": 5,
      "from": "LogMessage14",
      "to": "ThrowError4",
      "type": "default"
     }
    ],
    "metadata": {
     "input": [
      {
       "name": "startKey",
       "type": "string"
      },
      {
       "name": "endKey",
       "type": "string"
      }
     ],
     "output": [
      {
       "name": "returns",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"code\":{\"type\":\"number\"},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}}"
       }
      }
     ]
    }
   }
  },
  {
   "id": "flow:Transfer_By_Color",
   "data": {
    "name": "Transfer By Color",
    "description": "transfer all marbles of a color",
    "tasks": [
     {
      "id": "LogMessage15",
      "name": "LogMessage15",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"[Transfer By Color] \", $flow.content.color, \" new-owner: \", $flow.content.newOwner)"
         }
        ]
       }
      }
     },
     {
      "id": "FabricRequest5",
      "name": "FabricRequest5",
      "activity": {
       "ref": "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabclient/activity/fabrequest",
       "settings": {},
       "input": {
        "connectionName": {
         "id": "d9901600-6764-11e9-b14f-9d404c0e7465",
         "type": "flogo:connector",
         "version": "1.0.0",
         "name": "fabclient-connector",
         "inputMappings": {},
         "outputMappings": {},
         "iteratorMappings": {},
         "title": "Fabric Connector",
         "description": "Fabric Connection",
         "ref": "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabclient/connector/fabconnector",
         "settings": [
          {
           "name": "name",
           "description": "Unique name of the Fabric network connection",
           "type": "string",
           "required": true,
           "display": {
            "name": "Name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "local-first-network"
          },
          {
           "name": "description",
           "description": "Describe the Fabric network connection",
           "type": "string",
           "required": false,
           "display": {
            "name": "Description",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "Fabric sample first-network running on localhost"
          },
          {
           "name": "config",
           "type": "string",
           "required": true,
           "display": {
            "name": "Network configure file",
            "description": "Select the configuration file for the client and Fabric network",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "config_test.yaml",
            "content": "data:application/octet-stream;base64,"
           }
          },
          {
           "name": "entityMatcher",
           "type": "string",
           "required": false,
           "display": {
            "name": "Connection entity matcher file",
            "description": "Select the entity matcher file for overriding Fabric node URLs using pattern matching",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "local_entity_matchers.yaml",
            "content": "data:application/octet-stream;base64,IwojIENvcHlyaWdodCBTZWN1cmVLZXkgVGVjaG5vbG9naWVzIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KIwojIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCiMKIwojIFRoZSBuZXR3b3JrIGNvbm5lY3Rpb24gcHJvZmlsZSBwcm92aWRlcyBjbGllbnQgYXBwbGljYXRpb25zIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdGFyZ2V0CiMgYmxvY2tjaGFpbiBuZXR3b3JrIHRoYXQgYXJlIG5lY2Vzc2FyeSBmb3IgdGhlIGFwcGxpY2F0aW9ucyB0byBpbnRlcmFjdCB3aXRoIGl0LiBUaGVzZSBhcmUgYWxsCiMga25vd2xlZGdlIHRoYXQgbXVzdCBiZSBhY3F1aXJlZCBmcm9tIG91dC1vZi1iYW5kIHNvdXJjZXMuIFRoaXMgZmlsZSBwcm92aWRlcyBzdWNoIGEgc291cmNlLgojCgojIEVudGl0eU1hdGNoZXJzIGVuYWJsZSBzdWJzdGl0dXRpb24gb2YgbmV0d29yayBob3N0bmFtZXMgd2l0aCBzdGF0aWMgY29uZmlndXJhdGlvbnMKICMgc28gdGhhdCBwcm9wZXJ0aWVzIGNhbiBiZSBtYXBwZWQuIFJlZ2V4IGNhbiBiZSB1c2VkIGZvciB0aGlzIHB1cnBvc2UKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGJlIGVtcHR5IHdoaWNoIG1lYW5zIHRoZSBzYW1lIG5ldHdvcmsgaG9zdG5hbWUgd2lsbCBiZSB1c2VkCiMgVXJsU3Vic3RpdHV0aW9uRXhwIGNhbiBiZSBnaXZlbiBzYW1lIGFzIG1hcHBlZCBwZWVyIHVybCwgc28gdGhhdCBtYXBwZWQgcGVlciB1cmwgY2FuIGJlIHVzZWQKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGhhdmUgZ29sYW5nIHJlZ2V4IG1hdGNoZXJzIGxpa2UgJHsxfS5leGFtcGxlLiR7Mn06JHszfSBmb3IgcGF0dGVybgogIyBsaWtlIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNCB3aGljaCBjb252ZXJ0cyBwZWVyMC5vcmcxLmV4YW1wbGUuY29tIHRvIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNAojIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwIGZvbGxvdyBpbiB0aGUgc2FtZSBsaW5lcyBhcwogIyBTdWJzdGl0dXRpb25FeHAgZm9yIHRoZSBmaWVsZHMgZ3ByY09wdGlvbnMuc3NsLXRhcmdldC1uYW1lLW92ZXJyaWRlIHJlc3BlY3RpdmVseQojIEluIGFueSBjYXNlIG1hcHBlZEhvc3QncyBjb25maWcgd2lsbCBiZSB1c2VkLCBzbyBtYXBwZWQgaG9zdCBjYW5ub3QgYmUgZW1wdHksIGlmIGVudGl0eU1hdGNoZXJzIGFyZSB1c2VkCmVudGl0eU1hdGNoZXJzOgogIHBlZXI6CiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo3MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo4MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDoxMDA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjEub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcxLmV4YW1wbGUuKFx3Kyk6KFxkKykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6JHsyfQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogJHsxfS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6ICR7MX0ub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMi5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OiR7Mn0KICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6ICR7MX0ub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiAkezF9Lm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjcwNTEKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKTo4MDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjgwNTEKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogcGVlcjEub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kyk6OTA1MQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjEwMDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjEwMDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzIuZXhhbXBsZS5jb20KCiAgb3JkZXJlcjoKCiAgICAtIHBhdHRlcm46IChcdyspLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogb3JkZXJlci5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBvcmRlcmVyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjcwNTAKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IG9yZGVyZXIuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQoKICBjZXJ0aWZpY2F0ZUF1dGhvcml0eToKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMS5leGFtcGxlLihcdyspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogaHR0cHM6Ly9sb2NhbGhvc3Q6NzA1NAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogY2Eub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBjYS5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcyLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBodHRwczovL2xvY2FsaG9zdDo4MDU0CiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBjYS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IGNhLm9yZzIuZXhhbXBsZS5jb20="
           }
          },
          {
           "name": "channelID",
           "type": "string",
           "required": true,
           "display": {
            "name": "Channel ID",
            "description": "Channel ID",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "mychannel"
          }
         ],
         "outputs": [],
         "inputs": [],
         "handler": {
          "settings": []
         },
         "reply": [],
         "s3Prefix": "flogo",
         "key": "flogo/fabclient/connector/fabconnector/connector.json",
         "display": {
          "category": "fabclient",
          "description": "Fabric Connection",
          "visible": true,
          "smallIcon": "ic-fabconnector@2x.png",
          "largeIcon": "ic-fabconnector@3x.png"
         },
         "actions": [
          {
           "name": "Save Connector",
           "display": {
            "readonly": false,
            "valid": true,
            "visible": true
           }
          }
         ],
         "feature": {},
         "propertyMap": {},
         "keyfield": "name",
         "isValid": true,
         "lastUpdatedTime": 1556201845596,
         "createdTime": 1556201845596,
         "user": "flogo",
         "subscriptionId": "flogo_sbsc",
         "connectorName": " ",
         "connectorDescription": " "
        },
        "requestType": "invoke",
        "parameters": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"color\":{\"type\":\"string\"},\"newOwner\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "output": {
        "result": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
         "value": ""
        }
       },
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['userName']",
          "type": "assign",
          "value": "$property[CLIENT_USER]"
         },
         {
          "mapTo": "$INPUT['chaincodeID']",
          "type": "assign",
          "value": "$property[MARBLE_CC]"
         },
         {
          "mapTo": "$INPUT['transactionName']",
          "type": "literal",
          "value": "transferMarblesBasedOnColor"
         },
         {
          "mapTo": "$INPUT['parameters']['color']",
          "type": "assign",
          "value": "$flow.content.color"
         },
         {
          "mapTo": "$INPUT['parameters']['newOwner']",
          "type": "assign",
          "value": "$flow.content.newOwner"
         }
        ]
       }
      }
     },
     {
      "id": "LogMessage16",
      "name": "LogMessage16",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric returned: \", $activity[FabricRequest5].message)"
         }
        ]
       }
      }
     },
     {
      "id": "Return5",
      "name": "Return5",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
       "settings": {},
       "input": {
        "mappings": [
         {
          "mapTo": "$INPUT['returns']['code']",
          "type": "assign",
          "value": "$activity[FabricRequest5].code"
         },
         {
          "mapTo": "$INPUT['returns']['data']",
          "type": "array",
          "value": "{\"to\":\"$INPUT['returns']['data']\",\"from\":\"$activity[FabricRequest5].result\",\"type\":\"foreach\",\"fields\":[{\"to\":\"$INPUT.$$['key']\",\"from\":\"$.key\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['value']\",\"from\":\"$.value\",\"type\":\"assign\"}]}"
         }
        ]
       },
       "output": {}
      }
     },
     {
      "id": "LogMessage17",
      "name": "LogMessage17",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric error: \", $activity[FabricRequest5].message)"
         }
        ]
       }
      }
     },
     {
      "id": "ThrowError5",
      "name": "ThrowError5",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/error",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Failed: \", $activity[FabricRequest5].message)"
         }
        ]
       }
      }
     }
    ],
    "links": [
     {
      "id": 1,
      "from": "LogMessage15",
      "to": "FabricRequest5",
      "type": "default"
     },
     {
      "id": 2,
      "from": "FabricRequest5",
      "to": "LogMessage16",
      "type": "expression",
      "value": "$activity[FabricRequest5].code == 200"
     },
     {
      "id": 3,
      "from": "LogMessage16",
      "to": "Return5",
      "type": "default"
     },
     {
      "id": 4,
      "from": "FabricRequest5",
      "to": "LogMessage17",
      "type": "expression",
      "value": "$activity[FabricRequest5].code != 200"
     },
     {
      "id": 5,
      "from": "LogMessage17",
      "to": "ThrowError5",
      "type": "default"
     }
    ],
    "metadata": {
     "input": [
      {
       "name": "content",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"color\":{\"type\":\"string\"},\"newOwner\":{\"type\":\"string\"}}"
       }
      }
     ],
     "output": [
      {
       "name": "returns",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"code\":{\"type\":\"number\"},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}}"
       }
      }
     ]
    }
   }
  },
  {
   "id": "flow:Delete_Marble",
   "data": {
    "name": "Delete Marble",
    "description": "delete a marble by key",
    "tasks": [
     {
      "id": "LogMessage18",
      "name": "LogMessage18",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {}
      }
     },
     {
      "id": "FabricRequest6",
      "name": "FabricRequest6",
      "activity": {
       "ref": "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabclient/activity/fabrequest",
       "settings": {},
       "input": {
        "connectionName": {
         "id": "d9901600-6764-11e9-b14f-9d404c0e7465",
         "type": "flogo:connector",
         "version": "1.0.0",
         "name": "fabclient-connector",
         "inputMappings": {},
         "outputMappings": {},
         "iteratorMappings": {},
         "title": "Fabric Connector",
         "description": "Fabric Connection",
         "ref": "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabclient/connector/fabconnector",
         "settings": [
          {
           "name": "name",
           "description": "Unique name of the Fabric network connection",
           "type": "string",
           "required": true,
           "display": {
            "name": "Name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "local-first-network"
          },
          {
           "name": "description",
           "description": "Describe the Fabric network connection",
           "type": "string",
           "required": false,
           "display": {
            "name": "Description",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "Fabric sample first-network running on localhost"
          },
          {
           "name": "config",
           "type": "string",
           "required": true,
           "display": {
            "name": "Network configure file",
            "description": "Select the configuration file for the client and Fabric network",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "config_test.yaml",
            "content": "data:application/octet-stream;base64,"
           }
          },
          {
           "name": "entityMatcher",
           "type": "string",
           "required": false,
           "display": {
            "name": "Connection entity matcher file",
            "description": "Select the entity matcher file for overriding Fabric node URLs using pattern matching",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "local_entity_matchers.yaml",
            "content": "data:application/octet-stream;base64,IwojIENvcHlyaWdodCBTZWN1cmVLZXkgVGVjaG5vbG9naWVzIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KIwojIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCiMKIwojIFRoZSBuZXR3b3JrIGNvbm5lY3Rpb24gcHJvZmlsZSBwcm92aWRlcyBjbGllbnQgYXBwbGljYXRpb25zIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdGFyZ2V0CiMgYmxvY2tjaGFpbiBuZXR3b3JrIHRoYXQgYXJlIG5lY2Vzc2FyeSBmb3IgdGhlIGFwcGxpY2F0aW9ucyB0byBpbnRlcmFjdCB3aXRoIGl0LiBUaGVzZSBhcmUgYWxsCiMga25vd2xlZGdlIHRoYXQgbXVzdCBiZSBhY3F1aXJlZCBmcm9tIG91dC1vZi1iYW5kIHNvdXJjZXMuIFRoaXMgZmlsZSBwcm92aWRlcyBzdWNoIGEgc291cmNlLgojCgojIEVudGl0eU1hdGNoZXJzIGVuYWJsZSBzdWJzdGl0dXRpb24gb2YgbmV0d29yayBob3N0bmFtZXMgd2l0aCBzdGF0aWMgY29uZmlndXJhdGlvbnMKICMgc28gdGhhdCBwcm9wZXJ0aWVzIGNhbiBiZSBtYXBwZWQuIFJlZ2V4IGNhbiBiZSB1c2VkIGZvciB0aGlzIHB1cnBvc2UKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGJlIGVtcHR5IHdoaWNoIG1lYW5zIHRoZSBzYW1lIG5ldHdvcmsgaG9zdG5hbWUgd2lsbCBiZSB1c2VkCiMgVXJsU3Vic3RpdHV0aW9uRXhwIGNhbiBiZSBnaXZlbiBzYW1lIGFzIG1hcHBlZCBwZWVyIHVybCwgc28gdGhhdCBtYXBwZWQgcGVlciB1cmwgY2FuIGJlIHVzZWQKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGhhdmUgZ29sYW5nIHJlZ2V4IG1hdGNoZXJzIGxpa2UgJHsxfS5leGFtcGxlLiR7Mn06JHszfSBmb3IgcGF0dGVybgogIyBsaWtlIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNCB3aGljaCBjb252ZXJ0cyBwZWVyMC5vcmcxLmV4YW1wbGUuY29tIHRvIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNAojIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwIGZvbGxvdyBpbiB0aGUgc2FtZSBsaW5lcyBhcwogIyBTdWJzdGl0dXRpb25FeHAgZm9yIHRoZSBmaWVsZHMgZ3ByY09wdGlvbnMuc3NsLXRhcmdldC1uYW1lLW92ZXJyaWRlIHJlc3BlY3RpdmVseQojIEluIGFueSBjYXNlIG1hcHBlZEhvc3QncyBjb25maWcgd2lsbCBiZSB1c2VkLCBzbyBtYXBwZWQgaG9zdCBjYW5ub3QgYmUgZW1wdHksIGlmIGVudGl0eU1hdGNoZXJzIGFyZSB1c2VkCmVudGl0eU1hdGNoZXJzOgogIHBlZXI6CiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo3MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo4MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDoxMDA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjEub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcxLmV4YW1wbGUuKFx3Kyk6KFxkKykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6JHsyfQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogJHsxfS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6ICR7MX0ub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMi5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OiR7Mn0KICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6ICR7MX0ub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiAkezF9Lm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjcwNTEKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKTo4MDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjgwNTEKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogcGVlcjEub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kyk6OTA1MQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjEwMDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjEwMDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzIuZXhhbXBsZS5jb20KCiAgb3JkZXJlcjoKCiAgICAtIHBhdHRlcm46IChcdyspLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogb3JkZXJlci5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBvcmRlcmVyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjcwNTAKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IG9yZGVyZXIuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQoKICBjZXJ0aWZpY2F0ZUF1dGhvcml0eToKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMS5leGFtcGxlLihcdyspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogaHR0cHM6Ly9sb2NhbGhvc3Q6NzA1NAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogY2Eub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBjYS5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcyLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBodHRwczovL2xvY2FsaG9zdDo4MDU0CiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBjYS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IGNhLm9yZzIuZXhhbXBsZS5jb20="
           }
          },
          {
           "name": "channelID",
           "type": "string",
           "required": true,
           "display": {
            "name": "Channel ID",
            "description": "Channel ID",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "mychannel"
          }
         ],
         "outputs": [],
         "inputs": [],
         "handler": {
          "settings": []
         },
         "reply": [],
         "s3Prefix": "flogo",
         "key": "flogo/fabclient/connector/fabconnector/connector.json",
         "display": {
          "category": "fabclient",
          "description": "Fabric Connection",
          "visible": true,
          "smallIcon": "ic-fabconnector@2x.png",
          "largeIcon": "ic-fabconnector@3x.png"
         },
         "actions": [
          {
           "name": "Save Connector",
           "display": {
            "readonly": false,
            "valid": true,
            "visible": true
           }
          }
         ],
         "feature": {},
         "propertyMap": {},
         "keyfield": "name",
         "isValid": true,
         "lastUpdatedTime": 1556201845596,
         "createdTime": 1556201845596,
         "user": "flogo",
         "subscriptionId": "flogo_sbsc",
         "connectorName": " ",
         "connectorDescription": " "
        },
        "requestType": "invoke",
        "parameters": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "output": {
        "result": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['userName']",
          "type": "assign",
          "value": "$property[CLIENT_USER]"
         },
         {
          "mapTo": "$INPUT['chaincodeID']",
          "type": "assign",
          "value": "$property[MARBLE_CC]"
         },
         {
          "mapTo": "$INPUT['transactionName']",
          "type": "literal",
          "value": "delete"
         },
         {
          "mapTo": "$INPUT['parameters']['name']",
          "type": "assign",
          "value": "$flow.name"
         }
        ]
       }
      }
     },
     {
      "id": "LogMessage19",
      "name": "LogMessage19",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric returned: \", $activity[FabricRequest6].message)"
         }
        ]
       }
      }
     },
     {
      "id": "Return6",
      "name": "Return6",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
       "settings": {},
       "input": {
        "mappings": [
         {
          "mapTo": "$INPUT['returns']['code']",
          "type": "assign",
          "value": "$activity[FabricRequest6].code"
         },
         {
          "mapTo": "$INPUT['returns']['data']",
          "type": "assign",
          "value": "$activity[FabricRequest6].result"
         }
        ]
       },
       "output": {}
      }
     },
     {
      "id": "LogMessage20",
      "name": "LogMessage20",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric error: \", $activity[FabricRequest6].message)"
         }
        ]
       }
      }
     },
     {
      "id": "ThrowError6",
      "name": "ThrowError6",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/error",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Failed: \", $activity[FabricRequest6].message)"
         }
        ]
       }
      }
     }
    ],
    "links": [
     {
      "id": 1,
      "from": "LogMessage18",
      "to": "FabricRequest6",
      "type": "default"
     },
     {
      "id": 2,
      "from": "FabricRequest6",
      "to": "LogMessage19",
      "type": "expression",
      "value": "$activity[FabricRequest6].code == 200"
     },
     {
      "id": 3,
      "from": "LogMessage19",
      "to": "Return6",
      "type": "default"
     },
     {
      "id": 4,
      "from": "FabricRequest6",
      "to": "LogMessage20",
      "type": "expression",
      "value": "$activity[FabricRequest6].code != 200"
     },
     {
      "id": 5,
      "from": "LogMessage20",
      "to": "ThrowError6",
      "type": "default"
     }
    ],
    "metadata": {
     "input": [
      {
       "name": "name",
       "type": "string"
      }
     ],
     "output": [
      {
       "name": "returns",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"code\":{\"type\":\"number\"},\"data\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}"
       }
      }
     ]
    }
   }
  },
  {
   "id": "flow:Marble_History",
   "data": {
    "name": "Marble History",
    "description": "Get history of a marble",
    "tasks": [
     {
      "id": "LogMessage21",
      "name": "LogMessage21",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {}
      }
     },
     {
      "id": "FabricRequest7",
      "name": "FabricRequest7",
      "activity": {
       "ref": "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabclient/activity/fabrequest",
       "settings": {},
       "input": {
        "connectionName": {
         "id": "d9901600-6764-11e9-b14f-9d404c0e7465",
         "type": "flogo:connector",
         "version": "1.0.0",
         "name": "fabclient-connector",
         "inputMappings": {},
         "outputMappings": {},
         "iteratorMappings": {},
         "title": "Fabric Connector",
         "description": "Fabric Connection",
         "ref": "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabclient/connector/fabconnector",
         "settings": [
          {
           "name": "name",
           "description": "Unique name of the Fabric network connection",
           "type": "string",
           "required": true,
           "display": {
            "name": "Name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "local-first-network"
          },
          {
           "name": "description",
           "description": "Describe the Fabric network connection",
           "type": "string",
           "required": false,
           "display": {
            "name": "Description",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "Fabric sample first-network running on localhost"
          },
          {
           "name": "config",
           "type": "string",
           "required": true,
           "display": {
            "name": "Network configure file",
            "description": "Select the configuration file for the client and Fabric network",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "config_test.yaml",
            "content": "data:application/octet-stream;base64,"
           }
          },
          {
           "name": "entityMatcher",
           "type": "string",
           "required": false,
           "display": {
            "name": "Connection entity matcher file",
            "description": "Select the entity matcher file for overriding Fabric node URLs using pattern matching",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "local_entity_matchers.yaml",
            "content": "data:application/octet-stream;base64,IwojIENvcHlyaWdodCBTZWN1cmVLZXkgVGVjaG5vbG9naWVzIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KIwojIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCiMKIwojIFRoZSBuZXR3b3JrIGNvbm5lY3Rpb24gcHJvZmlsZSBwcm92aWRlcyBjbGllbnQgYXBwbGljYXRpb25zIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdGFyZ2V0CiMgYmxvY2tjaGFpbiBuZXR3b3JrIHRoYXQgYXJlIG5lY2Vzc2FyeSBmb3IgdGhlIGFwcGxpY2F0aW9ucyB0byBpbnRlcmFjdCB3aXRoIGl0LiBUaGVzZSBhcmUgYWxsCiMga25vd2xlZGdlIHRoYXQgbXVzdCBiZSBhY3F1aXJlZCBmcm9tIG91dC1vZi1iYW5kIHNvdXJjZXMuIFRoaXMgZmlsZSBwcm92aWRlcyBzdWNoIGEgc291cmNlLgojCgojIEVudGl0eU1hdGNoZXJzIGVuYWJsZSBzdWJzdGl0dXRpb24gb2YgbmV0d29yayBob3N0bmFtZXMgd2l0aCBzdGF0aWMgY29uZmlndXJhdGlvbnMKICMgc28gdGhhdCBwcm9wZXJ0aWVzIGNhbiBiZSBtYXBwZWQuIFJlZ2V4IGNhbiBiZSB1c2VkIGZvciB0aGlzIHB1cnBvc2UKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGJlIGVtcHR5IHdoaWNoIG1lYW5zIHRoZSBzYW1lIG5ldHdvcmsgaG9zdG5hbWUgd2lsbCBiZSB1c2VkCiMgVXJsU3Vic3RpdHV0aW9uRXhwIGNhbiBiZSBnaXZlbiBzYW1lIGFzIG1hcHBlZCBwZWVyIHVybCwgc28gdGhhdCBtYXBwZWQgcGVlciB1cmwgY2FuIGJlIHVzZWQKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGhhdmUgZ29sYW5nIHJlZ2V4IG1hdGNoZXJzIGxpa2UgJHsxfS5leGFtcGxlLiR7Mn06JHszfSBmb3IgcGF0dGVybgogIyBsaWtlIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNCB3aGljaCBjb252ZXJ0cyBwZWVyMC5vcmcxLmV4YW1wbGUuY29tIHRvIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNAojIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwIGZvbGxvdyBpbiB0aGUgc2FtZSBsaW5lcyBhcwogIyBTdWJzdGl0dXRpb25FeHAgZm9yIHRoZSBmaWVsZHMgZ3ByY09wdGlvbnMuc3NsLXRhcmdldC1uYW1lLW92ZXJyaWRlIHJlc3BlY3RpdmVseQojIEluIGFueSBjYXNlIG1hcHBlZEhvc3QncyBjb25maWcgd2lsbCBiZSB1c2VkLCBzbyBtYXBwZWQgaG9zdCBjYW5ub3QgYmUgZW1wdHksIGlmIGVudGl0eU1hdGNoZXJzIGFyZSB1c2VkCmVudGl0eU1hdGNoZXJzOgogIHBlZXI6CiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo3MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo4MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDoxMDA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjEub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcxLmV4YW1wbGUuKFx3Kyk6KFxkKykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6JHsyfQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogJHsxfS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6ICR7MX0ub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMi5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OiR7Mn0KICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6ICR7MX0ub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiAkezF9Lm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjcwNTEKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKTo4MDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjgwNTEKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogcGVlcjEub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kyk6OTA1MQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjEwMDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjEwMDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzIuZXhhbXBsZS5jb20KCiAgb3JkZXJlcjoKCiAgICAtIHBhdHRlcm46IChcdyspLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogb3JkZXJlci5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBvcmRlcmVyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjcwNTAKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IG9yZGVyZXIuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQoKICBjZXJ0aWZpY2F0ZUF1dGhvcml0eToKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMS5leGFtcGxlLihcdyspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogaHR0cHM6Ly9sb2NhbGhvc3Q6NzA1NAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogY2Eub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBjYS5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcyLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBodHRwczovL2xvY2FsaG9zdDo4MDU0CiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBjYS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IGNhLm9yZzIuZXhhbXBsZS5jb20="
           }
          },
          {
           "name": "channelID",
           "type": "string",
           "required": true,
           "display": {
            "name": "Channel ID",
            "description": "Channel ID",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "mychannel"
          }
         ],
         "outputs": [],
         "inputs": [],
         "handler": {
          "settings": []
         },
         "reply": [],
         "s3Prefix": "flogo",
         "key": "flogo/fabclient/connector/fabconnector/connector.json",
         "display": {
          "category": "fabclient",
          "description": "Fabric Connection",
          "visible": true,
          "smallIcon": "ic-fabconnector@2x.png",
          "largeIcon": "ic-fabconnector@3x.png"
         },
         "actions": [
          {
           "name": "Save Connector",
           "display": {
            "readonly": false,
            "valid": true,
            "visible": true
           }
          }
         ],
         "feature": {},
         "propertyMap": {},
         "keyfield": "name",
         "isValid": true,
         "lastUpdatedTime": 1556201845596,
         "createdTime": 1556201845596,
         "user": "flogo",
         "subscriptionId": "flogo_sbsc",
         "connectorName": " ",
         "connectorDescription": " "
        },
        "requestType": "query",
        "parameters": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "output": {
        "result": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"isDeleted\":{\"type\":\"boolean\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}",
         "value": ""
        }
       },
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['userName']",
          "type": "assign",
          "value": "$property[CLIENT_USER]"
         },
         {
          "mapTo": "$INPUT['chaincodeID']",
          "type": "assign",
          "value": "$property[MARBLE_CC]"
         },
         {
          "mapTo": "$INPUT['transactionName']",
          "type": "literal",
          "value": "getHistoryForMarble"
         },
         {
          "mapTo": "$INPUT['parameters']['name']",
          "type": "assign",
          "value": "$flow.name"
         }
        ]
       }
      }
     },
     {
      "id": "LogMessage22",
      "name": "LogMessage22",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric returned: \", $activity[FabricRequest7].message)"
         }
        ]
       }
      }
     },
     {
      "id": "Return7",
      "name": "Return7",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
       "settings": {},
       "input": {
        "mappings": [
         {
          "mapTo": "$INPUT['returns']['code']",
          "type": "assign",
          "value": "$activity[FabricRequest7].code"
         },
         {
          "mapTo": "$INPUT['returns']['data']",
          "type": "array",
          "value": "{\"to\":\"$INPUT['returns']['data']\",\"from\":\"$activity[FabricRequest7].result\",\"type\":\"foreach\",\"fields\":[{\"to\":\"$INPUT.$$['txID']\",\"from\":\"$.txID\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['txTime']\",\"from\":\"$.txTime\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['isDeleted']\",\"from\":\"$.isDeleted\",\"type\":\"assign\"},{\"to\":\"$INPUT.$$['value']\",\"from\":\"$.value\",\"type\":\"assign\"}]}"
         }
        ]
       },
       "output": {}
      }
     },
     {
      "id": "LogMessage23",
      "name": "LogMessage23",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric error: \", $activity[FabricRequest7].message)"
         }
        ]
       }
      }
     },
     {
      "id": "ThrowError7",
      "name": "ThrowError7",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/error",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Failed: \", $activity[FabricRequest7].message)"
         }
        ]
       }
      }
     }
    ],
    "links": [
     {
      "id": 1,
      "from": "LogMessage21",
      "to": "FabricRequest7",
      "type": "default"
     },
     {
      "id": 2,
      "from": "FabricRequest7",
      "to": "LogMessage22",
      "type": "expression",
      "value": "$activity[FabricRequest7].code == 200"
     },
     {
      "id": 3,
      "from": "LogMessage22",
      "to": "Return7",
      "type": "default"
     },
     {
      "id": 4,
      "from": "FabricRequest7",
      "to": "LogMessage23",
      "type": "expression",
      "value": "$activity[FabricRequest7].code != 200"
     },
     {
      "id": 5,
      "from": "LogMessage23",
      "to": "ThrowError7",
      "type": "default"
     }
    ],
    "metadata": {
     "input": [
      {
       "name": "name",
       "type": "string"
      }
     ],
     "output": [
      {
       "name": "returns",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"code\":{\"type\":\"number\"},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"txID\":{\"type\":\"string\"},\"txTime\":{\"type\":\"string\"},\"isDeleted\":{\"type\":\"boolean\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}}"
       }
      }
     ]
    }
   }
  },
  {
   "id": "flow:Query_Range_Page",
   "data": {
    "name": "Query Range Page",
    "description": "query marbles by range with pagination",
    "tasks": [
     {
      "id": "LogMessage24",
      "name": "LogMessage24",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"[Query Range Page] [\", $flow.startKey, \", \", $flow.endKey, \")\")"
         }
        ]
       }
      }
     },
     {
      "id": "FabricRequest8",
      "name": "FabricRequest8",
      "activity": {
       "ref": "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabclient/activity/fabrequest",
       "settings": {},
       "input": {
        "connectionName": {
         "id": "d9901600-6764-11e9-b14f-9d404c0e7465",
         "type": "flogo:connector",
         "version": "1.0.0",
         "name": "fabclient-connector",
         "inputMappings": {},
         "outputMappings": {},
         "iteratorMappings": {},
         "title": "Fabric Connector",
         "description": "Fabric Connection",
         "ref": "github.com/TIBCOSoftware/dovetail-contrib/hyperledger-fabric/fabclient/connector/fabconnector",
         "settings": [
          {
           "name": "name",
           "description": "Unique name of the Fabric network connection",
           "type": "string",
           "required": true,
           "display": {
            "name": "Name",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "local-first-network"
          },
          {
           "name": "description",
           "description": "Describe the Fabric network connection",
           "type": "string",
           "required": false,
           "display": {
            "name": "Description",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "Fabric sample first-network running on localhost"
          },
          {
           "name": "config",
           "type": "string",
           "required": true,
           "display": {
            "name": "Network configure file",
            "description": "Select the configuration file for the client and Fabric network",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "config_test.yaml",
            "content": "data:application/octet-stream;base64,"
           }
          },
          {
           "name": "entityMatcher",
           "type": "string",
           "required": false,
           "display": {
            "name": "Connection entity matcher file",
            "description": "Select the entity matcher file for overriding Fabric node URLs using pattern matching",
            "type": "fileselector",
            "fileExtensions": [
             ".yaml"
            ],
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": {
            "filename": "local_entity_matchers.yaml",
            "content": "data:application/octet-stream;base64,IwojIENvcHlyaWdodCBTZWN1cmVLZXkgVGVjaG5vbG9naWVzIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC4KIwojIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCiMKIwojIFRoZSBuZXR3b3JrIGNvbm5lY3Rpb24gcHJvZmlsZSBwcm92aWRlcyBjbGllbnQgYXBwbGljYXRpb25zIHRoZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgdGFyZ2V0CiMgYmxvY2tjaGFpbiBuZXR3b3JrIHRoYXQgYXJlIG5lY2Vzc2FyeSBmb3IgdGhlIGFwcGxpY2F0aW9ucyB0byBpbnRlcmFjdCB3aXRoIGl0LiBUaGVzZSBhcmUgYWxsCiMga25vd2xlZGdlIHRoYXQgbXVzdCBiZSBhY3F1aXJlZCBmcm9tIG91dC1vZi1iYW5kIHNvdXJjZXMuIFRoaXMgZmlsZSBwcm92aWRlcyBzdWNoIGEgc291cmNlLgojCgojIEVudGl0eU1hdGNoZXJzIGVuYWJsZSBzdWJzdGl0dXRpb24gb2YgbmV0d29yayBob3N0bmFtZXMgd2l0aCBzdGF0aWMgY29uZmlndXJhdGlvbnMKICMgc28gdGhhdCBwcm9wZXJ0aWVzIGNhbiBiZSBtYXBwZWQuIFJlZ2V4IGNhbiBiZSB1c2VkIGZvciB0aGlzIHB1cnBvc2UKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGJlIGVtcHR5IHdoaWNoIG1lYW5zIHRoZSBzYW1lIG5ldHdvcmsgaG9zdG5hbWUgd2lsbCBiZSB1c2VkCiMgVXJsU3Vic3RpdHV0aW9uRXhwIGNhbiBiZSBnaXZlbiBzYW1lIGFzIG1hcHBlZCBwZWVyIHVybCwgc28gdGhhdCBtYXBwZWQgcGVlciB1cmwgY2FuIGJlIHVzZWQKIyBVcmxTdWJzdGl0dXRpb25FeHAgY2FuIGhhdmUgZ29sYW5nIHJlZ2V4IG1hdGNoZXJzIGxpa2UgJHsxfS5leGFtcGxlLiR7Mn06JHszfSBmb3IgcGF0dGVybgogIyBsaWtlIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNCB3aGljaCBjb252ZXJ0cyBwZWVyMC5vcmcxLmV4YW1wbGUuY29tIHRvIHBlZXIwLm9yZzEuZXhhbXBsZS5jb206MTIzNAojIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwIGZvbGxvdyBpbiB0aGUgc2FtZSBsaW5lcyBhcwogIyBTdWJzdGl0dXRpb25FeHAgZm9yIHRoZSBmaWVsZHMgZ3ByY09wdGlvbnMuc3NsLXRhcmdldC1uYW1lLW92ZXJyaWRlIHJlc3BlY3RpdmVseQojIEluIGFueSBjYXNlIG1hcHBlZEhvc3QncyBjb25maWcgd2lsbCBiZSB1c2VkLCBzbyBtYXBwZWQgaG9zdCBjYW5ub3QgYmUgZW1wdHksIGlmIGVudGl0eU1hdGNoZXJzIGFyZSB1c2VkCmVudGl0eU1hdGNoZXJzOgogIHBlZXI6CiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo3MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzEuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo4MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIwLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IHBlZXIxLm9yZzIuZXhhbXBsZS4oXHcrKQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDoxMDA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjEub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcxLmV4YW1wbGUuKFx3Kyk6KFxkKykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6JHsyfQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogJHsxfS5vcmcxLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6ICR7MX0ub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMi5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OiR7Mn0KICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6ICR7MX0ub3JnMi5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiAkezF9Lm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjcwNTEKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MQogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogcGVlcjAub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBwZWVyMC5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKTo4MDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjgwNTEKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IHBlZXIxLm9yZzEuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogcGVlcjEub3JnMS5leGFtcGxlLmNvbQoKICAgIC0gcGF0dGVybjogKFx3Kyk6OTA1MQogICAgICB1cmxTdWJzdGl0dXRpb25FeHA6IGxvY2FsaG9zdDo5MDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMC5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIwLm9yZzIuZXhhbXBsZS5jb20KCiAgICAtIHBhdHRlcm46IChcdyspOjEwMDUxCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjEwMDUxCiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBwZWVyMS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IHBlZXIxLm9yZzIuZXhhbXBsZS5jb20KCiAgb3JkZXJlcjoKCiAgICAtIHBhdHRlcm46IChcdyspLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBsb2NhbGhvc3Q6NzA1MAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogb3JkZXJlci5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBvcmRlcmVyLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5leGFtcGxlLihcdyspOihcZCspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogbG9jYWxob3N0OjcwNTAKICAgICAgc3NsVGFyZ2V0T3ZlcnJpZGVVcmxTdWJzdGl0dXRpb25FeHA6IG9yZGVyZXIuZXhhbXBsZS5jb20KICAgICAgbWFwcGVkSG9zdDogb3JkZXJlci5leGFtcGxlLmNvbQoKICBjZXJ0aWZpY2F0ZUF1dGhvcml0eToKICAgIC0gcGF0dGVybjogKFx3Kykub3JnMS5leGFtcGxlLihcdyspCiAgICAgIHVybFN1YnN0aXR1dGlvbkV4cDogaHR0cHM6Ly9sb2NhbGhvc3Q6NzA1NAogICAgICBzc2xUYXJnZXRPdmVycmlkZVVybFN1YnN0aXR1dGlvbkV4cDogY2Eub3JnMS5leGFtcGxlLmNvbQogICAgICBtYXBwZWRIb3N0OiBjYS5vcmcxLmV4YW1wbGUuY29tCgogICAgLSBwYXR0ZXJuOiAoXHcrKS5vcmcyLmV4YW1wbGUuKFx3KykKICAgICAgdXJsU3Vic3RpdHV0aW9uRXhwOiBodHRwczovL2xvY2FsaG9zdDo4MDU0CiAgICAgIHNzbFRhcmdldE92ZXJyaWRlVXJsU3Vic3RpdHV0aW9uRXhwOiBjYS5vcmcyLmV4YW1wbGUuY29tCiAgICAgIG1hcHBlZEhvc3Q6IGNhLm9yZzIuZXhhbXBsZS5jb20="
           }
          },
          {
           "name": "channelID",
           "type": "string",
           "required": true,
           "display": {
            "name": "Channel ID",
            "description": "Channel ID",
            "visible": true,
            "readonly": false,
            "valid": true
           },
           "value": "mychannel"
          }
         ],
         "outputs": [],
         "inputs": [],
         "handler": {
          "settings": []
         },
         "reply": [],
         "s3Prefix": "flogo",
         "key": "flogo/fabclient/connector/fabconnector/connector.json",
         "display": {
          "category": "fabclient",
          "description": "Fabric Connection",
          "visible": true,
          "smallIcon": "ic-fabconnector@2x.png",
          "largeIcon": "ic-fabconnector@3x.png"
         },
         "actions": [
          {
           "name": "Save Connector",
           "display": {
            "readonly": false,
            "valid": true,
            "visible": true
           }
          }
         ],
         "feature": {},
         "propertyMap": {},
         "keyfield": "name",
         "isValid": true,
         "lastUpdatedTime": 1556201845596,
         "createdTime": 1556201845596,
         "user": "flogo",
         "subscriptionId": "flogo_sbsc",
         "connectorName": " ",
         "connectorDescription": " "
        },
        "requestType": "query",
        "parameters": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"startKey\":{\"type\":\"string\"},\"endKey\":{\"type\":\"string\"},\"pageSize\":{\"type\":\"number\"},\"bookmark\":{\"type\":\"string\"}}}",
         "value": ""
        }
       },
       "output": {
        "result": {
         "metadata": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"count\":{\"type\":\"number\"},\"bookmark\":{\"type\":\"string\"},\"marbles\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}}}",
         "value": ""
        }
       },
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['userName']",
          "type": "assign",
          "value": "$property[CLIENT_USER]"
         },
         {
          "mapTo": "$INPUT['chaincodeID']",
          "type": "assign",
          "value": "$property[MARBLE_CC]"
         },
         {
          "mapTo": "$INPUT['transactionName']",
          "type": "literal",
          "value": "getMarblesByRangeWithPagination"
         },
         {
          "mapTo": "$INPUT['parameters']['startKey']",
          "type": "assign",
          "value": "$flow.startKey"
         },
         {
          "mapTo": "$INPUT['parameters']['endKey']",
          "type": "assign",
          "value": "$flow.endKey"
         },
         {
          "mapTo": "$INPUT['parameters']['pageSize']",
          "type": "assign",
          "value": "$flow.pageSize"
         },
         {
          "mapTo": "$INPUT['parameters']['bookmark']",
          "type": "assign",
          "value": "$flow.bookmark"
         }
        ]
       }
      }
     },
     {
      "id": "LogMessage26",
      "name": "LogMessage26",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric returned: \", $activity[FabricRequest8].message)"
         }
        ]
       }
      }
     },
     {
      "id": "Return8",
      "name": "Return8",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
       "settings": {},
       "input": {
        "mappings": [
         {
          "mapTo": "$INPUT['returns']['code']",
          "type": "assign",
          "value": "$activity[FabricRequest8].code"
         },
         {
          "mapTo": "$INPUT['returns']['data']",
          "type": "assign",
          "value": "$activity[FabricRequest8].result"
         }
        ]
       },
       "output": {}
      }
     },
     {
      "id": "LogMessage25",
      "name": "LogMessage25",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Fabric error: \", $activity[FabricRequest8].message)"
         }
        ]
       }
      }
     },
     {
      "id": "ThrowError8",
      "name": "ThrowError8",
      "activity": {
       "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/error",
       "settings": {},
       "input": {},
       "output": {},
       "mappings": {
        "input": [
         {
          "mapTo": "$INPUT['message']",
          "type": "expression",
          "value": "string.concat(\"Failed: \", $activity[FabricRequest8].message)"
         }
        ]
       }
      }
     }
    ],
    "links": [
     {
      "id": 1,
      "from": "LogMessage24",
      "to": "FabricRequest8",
      "type": "default"
     },
     {
      "id": 2,
      "from": "FabricRequest8",
      "to": "LogMessage26",
      "type": "expression",
      "value": "$activity[FabricRequest8].code == 200"
     },
     {
      "id": 3,
      "from": "LogMessage26",
      "to": "Return8",
      "type": "default"
     },
     {
      "id": 4,
      "from": "FabricRequest8",
      "to": "LogMessage25",
      "type": "expression",
      "value": "$activity[FabricRequest8].code != 200"
     },
     {
      "id": 5,
      "from": "LogMessage25",
      "to": "ThrowError8",
      "type": "default"
     }
    ],
    "metadata": {
     "input": [
      {
       "name": "startKey",
       "type": "string"
      },
      {
       "name": "endKey",
       "type": "string"
      },
      {
       "name": "pageSize",
       "type": "number"
      },
      {
       "name": "bookmark",
       "type": "string"
      }
     ],
     "output": [
      {
       "name": "returns",
       "type": "complex_object",
       "value": {
        "value": "",
        "metadata": "{\"code\":{\"type\":\"number\"},\"data\":{\"type\":\"object\",\"properties\":{\"count\":{\"type\":\"number\"},\"bookmark\":{\"type\":\"string\"},\"marbles\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"key\":{\"type\":\"string\"},\"value\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"color\":{\"type\":\"string\"},\"size\":{\"type\":\"number\"},\"owner\":{\"type\":\"string\"}}}}}}}}}"
       }
      }
     ]
    }
   }
  }
 ],
 "triggers": [
  {
   "ref": "github.com/TIBCOSoftware/flogo-contrib/trigger/rest",
   "name": "ReceiveHTTPMessage",
   "description": "Create a marble",
   "settings": {
    "port": 8989
   },
   "id": "ReceiveHTTPMessage",
   "handlers": [
    {
     "description": "Create a marble",
     "settings": {
      "method": "PUT",
      "path": "/marble/create"
     },
     "outputs": {
      "params": "",
      "pathParams": "",
      "queryParams": "",
      "header": "",
      "content": ""
     },
     "action": {
      "ref": "github.com/TIBCOSoftware/flogo-contrib/action/flow",
      "data": {
       "flowURI": "res://flow:Create_Marble"
      },
      "mappings": {
       "input": [
        {
         "mapTo": "$INPUT['content']",
         "type": "assign",
         "value": "$.content"
        }
       ],
       "output": [
        {
         "mapTo": "$INPUT['code']",
         "type": "assign",
         "value": "$.returns.code"
        },
        {
         "mapTo": "$INPUT['data']",
         "type": "assign",
         "value": "$.returns.data"
        }
       ]
      }
     },
     "reply": {
      "code": "$.returns.code",
      "data": "any"
     }
    },
    {
     "description": "fetch marble by name",
     "settings": {
      "method": "GET",
      "path": "/marble/key/:name"
     },
     "outputs": {
      "params": "",
      "pathParams": "",
      "queryParams": "",
      "header": "",
      "content": ""
     },
     "action": {
      "ref": "github.com/TIBCOSoftware/flogo-contrib/action/flow",
      "data": {
       "flowURI": "res://flow:Get_Marble"
      },
      "mappings": {
       "input": [
        {
         "mapTo": "$INPUT['name']",
         "type": "assign",
         "value": "$.pathParams.name"
        }
       ],
       "output": [
        {
         "mapTo": "$INPUT['code']",
         "type": "assign",
         "value": "$.returns.code"
        },
        {
         "mapTo": "$INPUT['data']",
         "type": "assign",
         "value": "$.returns.data"
        }
       ]
      }
     },
     "reply": {
      "code": "$.returns.code",
      "data": "any"
     }
    },
    {
     "description": "query marbles of an owner",
     "settings": {
      "method": "GET",
      "path": "/marble/owner/:owner"
     },
     "outputs": {
      "params": "",
      "pathParams": "",
      "queryParams": "",
      "header": "",
      "content": ""
     },
     "action": {
      "ref": "github.com/TIBCOSoftware/flogo-contrib/action/flow",
      "data": {
       "flowURI": "res://flow:Query_By_Owner"
      },
      "mappings": {
       "input": [
        {
         "mapTo": "$INPUT['owner']",
         "type": "assign",
         "value": "$.pathParams.owner"
        }
       ],
       "output": [
        {
         "mapTo": "$INPUT['code']",
         "type": "assign",
         "value": "$.returns.code"
        },
        {
         "mapTo": "$INPUT['data']",
         "type": "assign",
         "value": "$.returns.data"
        }
       ]
      }
     },
     "reply": {
      "code": "$.returns.code",
      "data": "any"
     }
    },
    {
     "description": "transfer marble to a new owner",
     "settings": {
      "method": "PUT",
      "path": "/marble/transfer"
     },
     "outputs": {
      "params": "",
      "pathParams": "",
      "queryParams": "",
      "header": "",
      "content": ""
     },
     "action": {
      "ref": "github.com/TIBCOSoftware/flogo-contrib/action/flow",
      "data": {
       "flowURI": "res://flow:Transfer_Marble"
      },
      "mappings": {
       "input": [
        {
         "mapTo": "$INPUT['content']",
         "type": "assign",
         "value": "$.content"
        }
       ],
       "output": [
        {
         "mapTo": "$INPUT['code']",
         "type": "assign",
         "value": "$.returns.code"
        },
        {
         "mapTo": "$INPUT['data']",
         "type": "assign",
         "value": "$.returns.data"
        }
       ]
      }
     },
     "reply": {
      "code": "$.returns.code",
      "data": "any"
     }
    },
    {
     "description": "query marbles of key range, [startKey, endKey)",
     "settings": {
      "method": "GET",
      "path": "/marble/range"
     },
     "outputs": {
      "params": "",
      "pathParams": "",
      "queryParams": "",
      "header": "",
      "content": ""
     },
     "action": {
      "ref": "github.com/TIBCOSoftware/flogo-contrib/action/flow",
      "data": {
       "flowURI": "res://flow:Query_By_Range"
      },
      "mappings": {
       "input": [
        {
         "mapTo": "$INPUT['startKey']",
         "type": "assign",
         "value": "$.queryParams.startKey"
        },
        {
         "mapTo": "$INPUT['endKey']",
         "type": "assign",
         "value": "$.queryParams.endKey"
        }
       ],
       "output": [
        {
         "mapTo": "$INPUT['code']",
         "type": "assign",
         "value": "$.returns.code"
        },
        {
         "mapTo": "$INPUT['data']",
         "type": "assign",
         "value": "$.returns.data"
        }
       ]
      }
     },
     "reply": {
      "code": "$.returns.code",
      "data": "any"
     }
    },
    {
     "description": "transfer all marbles of a color",
     "settings": {
      "method": "PUT",
      "path": "/marble/transfercolor"
     },
     "outputs": {
      "params": "",
      "pathParams": "",
      "queryParams": "",
      "header": "",
      "content": ""
     },
     "action": {
      "ref": "github.com/TIBCOSoftware/flogo-contrib/action/flow",
      "data": {
       "flowURI": "res://flow:Transfer_By_Color"
      },
      "mappings": {
       "input": [
        {
         "mapTo": "$INPUT['content']",
         "type": "assign",
         "value": "$.content"
        }
       ],
       "output": [
        {
         "mapTo": "$INPUT['code']",
         "type": "assign",
         "value": "$.returns.code"
        },
        {
         "mapTo": "$INPUT['data']",
         "type": "assign",
         "value": "$.returns.data"
        }
       ]
      }
     },
     "reply": {
      "code": "$.returns.code",
      "data": "any"
     }
    },
    {
     "description": "delete a marble by key",
     "settings": {
      "method": "DELETE",
      "path": "/marble/delete/:name"
     },
     "outputs": {
      "params": "",
      "pathParams": "",
      "queryParams": "",
      "header": "",
      "content": ""
     },
     "action": {
      "ref": "github.com/TIBCOSoftware/flogo-contrib/action/flow",
      "data": {
       "flowURI": "res://flow:Delete_Marble"
      },
      "mappings": {
       "input": [
        {
         "mapTo": "$INPUT['name']",
         "type": "assign",
         "value": "$.pathParams.name"
        }
       ],
       "output": [
        {
         "mapTo": "$INPUT['code']",
         "type": "assign",
         "value": "$.returns.code"
        },
        {
         "mapTo": "$INPUT['data']",
         "type": "assign",
         "value": "$.returns.data"
        }
       ]
      }
     },
     "reply": {
      "code": "$.returns.code",
      "data": "any"
     }
    },
    {
     "description": "Get history of a marble",
     "settings": {
      "method": "GET",
      "path": "/marble/history/:name"
     },
     "outputs": {
      "params": "",
      "pathParams": "",
      "queryParams": "",
      "header": "",
      "content": ""
     },
     "action": {
      "ref": "github.com/TIBCOSoftware/flogo-contrib/action/flow",
      "data": {
       "flowURI": "res://flow:Marble_History"
      },
      "mappings": {
       "input": [
        {
         "mapTo": "$INPUT['name']",
         "type": "assign",
         "value": "$.pathParams.name"
        }
       ],
       "output": [
        {
         "mapTo": "$INPUT['code']",
         "type": "assign",
         "value": "$.returns.code"
        },
        {
         "mapTo": "$INPUT['data']",
         "type": "assign",
         "value": "$.returns.data"
        }
       ]
      }
     },
     "reply": {
      "code": "$.returns.code",
      "data": "any"
     }
    },
    {
     "description": "query marbles by range with pagination",
     "settings": {
      "method": "GET",
      "path": "/marble/rangepage"
     },
     "outputs": {
      "params": "",
      "pathParams": "",
      "queryParams": "",
      "header": "",
      "content": ""
     },
     "action": {
      "ref": "github.com/TIBCOSoftware/flogo-contrib/action/flow",
      "data": {
       "flowURI": "res://flow:Query_Range_Page"
      },
      "mappings": {
       "input": [
        {
         "mapTo": "$INPUT['startKey']",
         "type": "assign",
         "value": "$.queryParams.startKey"
        },
        {
         "mapTo": "$INPUT['endKey']",
         "type": "assign",
         "value": "$.queryParams.endKey"
        },
        {
         "mapTo": "$INPUT['pageSize']",
         "type": "assign",
         "value": "$.queryParams.pageSize"
        },
        {
         "mapTo": "$INPUT['bookmark']",
         "type": "assign",
         "value": "$.queryParams.bookmark"
        }
       ],
       "output": []
      }
     },
     "reply": {
      "code": 200,
      "data": "any"
     }
    }
   ]
  }
 ],
 "properties": [
  {
   "name": "MARBLE_CC",
   "type": "string",
   "value": "marble_cc"
  },
  {
   "name": "CLIENT_USER",
   "type": "string",
   "value": "User1"
  }
 ],
 "ui": "",
 "contrib": "W3sicmVmIjoiZ2l0aHViLmNvbS9USUJDT1NvZnR3YXJlL2Zsb2dvLWNvbnRyaWIvdHJpZ2dlci9yZXN0IiwiczNsb2NhdGlvbiI6IntVU0VSSUR9L0RlZmF1bHQvdHJpZ2dlci9yZXN0In0seyJyZWYiOiJnaXRodWIuY29tL1RJQkNPU29mdHdhcmUvZmxvZ28tY29udHJpYi9hY3Rpdml0eS9sb2ciLCJzM2xvY2F0aW9uIjoie1VTRVJJRH0vRGVmYXVsdC9hY3Rpdml0eS9sb2cifSx7InJlZiI6ImdpdGh1Yi5jb20vVElCQ09Tb2Z0d2FyZS9kb3ZldGFpbC1jb250cmliL2h5cGVybGVkZ2VyLWZhYnJpYy9mYWJjbGllbnQiLCJzM2xvY2F0aW9uIjoie1VTRVJJRH0vZmFiY2xpZW50In0seyJyZWYiOiJnaXRodWIuY29tL1RJQkNPU29mdHdhcmUvZmxvZ28tY29udHJpYi9hY3Rpdml0eS9lcnJvciIsInMzbG9jYXRpb24iOiJ7VVNFUklEfS9EZWZhdWx0L2FjdGl2aXR5L2Vycm9yIn1d",
 "connection": ""
}